<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/blog/tags/FuelPHP.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2017-05-07T15:04:09+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[NestedSets Model を使って FuelPHP 用コメントボックスパッケージを作った話]]></title>
            <link href="http://www.sharkpp.net/blog/2015/12/05/fuelphp-advent-calender-2015-5th.html"/>
            <updated>2015-12-05T01:00:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/12/05/fuelphp-advent-calender-2015-5th.html</id>
            <content type="html"><![CDATA[<p>こんにちは、こんばんは、昨日に引き続き <a href="http://qiita.com/advent-calendar/2015/fuelphp">FuelPHP Advent Calendar 2015</a> の 5 日目を担当する <a href="https://twitter.com/sharkpp">@sharkpp</a> です。</p>

<p>今回は、一番最後に追加された <a href="http://fuelphp.com/docs/packages/orm/model/nestedset.html">NestedSets Model</a> (日本語訳は <a href="http://fuelphp.jp/docs/1.8/packages/orm/model/nestedset.html">NestedSets Model @ fuelphp.jp</a> を参照) を使って <a href="https://disqus.com/">Disqus</a> や <a href="https://developers.facebook.com/docs/plugins/comments">Facebook Comments</a> のようなものを貼り付けられる FuelPHP パッケージを作ってみた話をしようかと思います。</p>

<p>実際のパッケージは <a href="https://github.com/sharkpp/fuel-commentbox">sharkpp/fuel-commentbox</a> からダウンロードできます。</p>

<p><a href="/images/2015_1205_fuel_5th_example.png"><img src="/_thumbs/2cfb4ea909d3694cb9ebc8bc118c223e-512x512.png" alt="画面例"></a></p>

<p>こんな画面になります。</p>

<h2 id="nestedsets-model-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9">NestedSets Model の使い方</h2>

<p>使い方を、、、と言いつつ、実際は公式ドキュメントの <a href="http://fuelphp.com/docs/packages/orm/model/nestedset.html">NestedSets Model</a> (日本語訳は <a href="http://fuelphp.jp/docs/1.8/packages/orm/model/nestedset.html">NestedSets Model @ fuelphp.jp</a> を参照) を参照すれば簡単に使えてしまうぐらいに整っていると思います。</p>

<p>基本的な機能は <code>\Orm\Model_Nestedset</code> からの派生としてモデルクラスを作れば特に考えることもなく用意されたものを使うことができます。</p>

<p><code>model/commentbox.php</code></p>

<pre><code class="php">namespace Commentbox;

class Model_Commentbox extends \Orm\Model_Nestedset
{
    protected static $_properties = array(
</code></pre>

<p>のような感じです。</p>

<p><a href="http://fuelphp.jp/docs/1.8/packages/oil/generate.html#/model_nestedset">oil generate</a> のドキュメントを参照すると</p>

<pre><code class="bash">$ php oil g model post title:varchar[50] body:text user_id:int --nestedset
</code></pre>

<p>と、実は、このような感じでスケルトンを作ることもできるため、ドキュメントを見ながら必要なフィールドを用意したりマイグレーションコードを用意したりする必要もなく、簡単に機能の実装に入ることができます。</p>

<p><a href="https://github.com/sharkpp/fuel-commentbox/commit/a2222480c0151b9f9a68f5e1336d2f4b50360343#diff-5d2aaa6da1e3955b9a2582f5894e5d8e">multi tree に必要なフィールドを追加 · sharkpp/fuel-commentbox@a222248</a></p>

<pre><code class="diff"> @@ -8,6 +8,7 @@ class Model_Commentbox extends \Orm\Model_Nestedset
        'id',
        'left_id',
        'right_id',
+       'tree_id',
        'comment_key',
        'user_id',
        'name',
 @@ -30,6 +31,9 @@ class Model_Commentbox extends \Orm\Model_Nestedset
    );

    protected static $_tree = array(
+       'left_field' =&gt; 'left_id',
+       'right_field' =&gt; 'right_id',
+       'tree_field' =&gt; 'tree_id',
        'title_field' =&gt; 'comment_key',
    );

</code></pre>

<p>と、このように、 <code>tree_id</code> を追加することで、</p>

<ul>
<li>唯一の親を持つツリーで管理する</li>
<li>複数の親を持つツリーで管理する</li>
</ul>

<p>か、を選べるようになっています。</p>

<p>コメントや掲示板、などは「複数の親を持つツリーで管理する」方が管理しやすいのではないかと自分は思います。</p>

<p>なので、追加するには先にルートを作っておいたほうが管理がしやすいので</p>

<p><code>classes/model/commentbox.php</code></p>

<pre><code class="php">    public static function get_parent($comment_key, $create = false)
    {
        $root = self::get_item($comment_key);
        if (null != $root ||
            ! $create)
        {
            return $root;
        }
        $root = new static();
        $root-&gt;comment_key = $comment_key;
        $root-&gt;user_id = -1;
        $root-&gt;name = '';
        $root-&gt;email = '';
        $root-&gt;website = '';
        $root-&gt;body = '';
        $root-&gt;save();
        return $root;
    }
</code></pre>

<p>のように、ルートノード取得時に、存在しなければルートノードを作成するメソッドを作り、扱いやすくしています。</p>

<p>子を追加するときは</p>

<pre><code class="php">                    }

                    $model-&gt;child($parent)-&gt;save();
                }
</code></pre>

<p>のような感じです。</p>

<p>ツリーの扱いとしては、例えば、</p>

<p><code>classes/commentbox.php</code></p>

<pre><code class="php">        $form = $this-&gt;fieldset();
        $root = Model_Commentbox::get_parent($this-&gt;comment_key);
        $tree = $root ? $root-&gt;dump_tree() : array();
        $user_page_empty
</code></pre>

<p>このように <code>dump_tree()</code> 関数を使うことで指定のアイテムを含めた下位のツリーを丸ごと取ることができます。</p>

<p>ドキュメントではこの他にも、ツリーを移動するためのメソッドが多数用意されています。</p>

<p>また、通常のモデルのように</p>

<p><code>classes/commentbox.php</code></p>

<pre><code class="php">                { // 投稿処理
                    // キーとなるハッシュを生成
                    for ($comment_key = \Str::random('alnum', 32);
                         Model_Commentbox::query()
                            -&gt;where('comment_key', $comment_key)
                            -&gt;count();
                         $comment_key = \Str::random('alnum', 32))
                        continue;
</code></pre>

<p>と <code>query()</code> メソッドを使い個別に条件を追加して検索することもできます。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<ul>
<li>oil コマンドでスケルトンを作ることができるので素早く実装に進むことができる。</li>
<li>２種類の管理の仕方、「唯一の親を持つツリーで管理する」か「複数の親を持つツリーで管理する」があり、フィールドの有無でどちらか選ぶことができる。</li>
<li>通常のモデルクラスと同じように条件を指定し検索することができる。</li>
<li>多彩なツリーの移動メソッドがあらかじめ用意されている。</li>
</ul>

<p>と、このような感じなのでサクサクと実装できるのではないかと思います。</p>

<p>ぜひ使って見てください。</p>

<p>以上、<a href="https://twitter.com/sharkpp">@sharkpp</a> がお送りいたしました。</p>

<p>この文章は <a href="https://creativecommons.org/licenses/by/4.0/legalcode.ja">クリエイティブ・コモンズ 表示 4.0 国際</a> ライセンス、コードスニペットは <a href="http://osdn.jp/projects/opensource/wiki/licenses%2FMIT_license">MIT ライセンス</a> の下に提供されています。</p>

<h2 id="%E3%81%8A%E3%81%BE%E3%81%91">おまけ</h2>

<p>コメントに張り付くアイコンの表示としては <a href="http://ja.gravatar.com/">Gravatar</a> が有名ですが、探してみるとマイナー気味ですがおもしろそーなサービスが他にもあったのでこのパッケージでは選んで使えるようにしてあります。</p>

<p><a href="http://ja.gravatar.com/">Gravatar</a> は</p>

<p><img src="/images/2015_1205_fuel_5th_avatar_example_gravatar.png" alt="avatar example gravatar" /></p>

<p>こんな感じの表示になります。</p>

<p>その２は、<a href="http://robohash.org/">RoboHash</a> というサービスで、アイコンがいろんなタイプのロボットで表示され、背景も何種類か選ぶことができます。</p>

<p><img src="/images/2015_1205_fuel_5th_avatar_example_robohash.png" alt="avatar example robohash" /></p>

<p>こんな感じの表示になります。</p>

<p>その３は、<a href="http://avatars.adorable.io/">Adorable Avatars!</a> というサービスで、とぼけた？ような顔のアイコンを作ってくれます。
ただ、このサービスはアイコンの種類が少ないのか意外とアイコンが被ってしまうことが多い気がします。</p>

<p><img src="/images/2015_1205_fuel_5th_avatar_example_adorable.png" alt="avatar example adorable" /></p>

<p>こんな感じの表示になります。</p>

<p><a href="https://github.com/sharkpp/fuel-commentbox/blob/master/classes/util/avatar.php">Avatar</a> というクラスを作りまとめて管理しているので他にも同じようなサービスが見つかったら簡単に追加できるようにしてあるので誰か使って欲しいなぁ、なんて。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://fennec.hatenablog.com/entry/2012/12/12/031408">fuel-nestedsetsを試す。 - 備忘録的な @7wk</a></li>
<li><a href="http://fennec.hatenablog.com/entry/2012/12/12/231456">fuel-nestedsetsを試す。の続き。 - 備忘録的な @7wk</a></li>
<li><a href="http://fuelphp.jp/docs/1.8/packages/orm/model/nestedset.html">NestedSets Model @ fuelphp.jp</a></li>
</ul>

<hr>

<p>この投稿は <strong><a href="http://qiita.com/advent-calendar/2015/fuelphp">FuelPHP Advent Calendar 2015</a></strong> の <strong>5日目</strong>の記事です。</p>

<ul>
<li>4日目の記事: <a href="http://www.sharkpp.net/blog/2015/12/04/fuelphp-advent-calender-2015-4th.html">Markdown Wiki を通して Model_Temporal の使い方を覚えよう</a></li>
<li>6日目の記事: <a href="http://qiita.com/wata/items/22bf3ad75a854aa8f119">DBUnit拡張を使ったFuelPHPのテストを考える</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Markdown Wiki を通して Temporal Model の使い方を覚えよう]]></title>
            <link href="http://www.sharkpp.net/blog/2015/12/04/fuelphp-advent-calender-2015-4th.html"/>
            <updated>2015-12-04T02:00:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/12/04/fuelphp-advent-calender-2015-4th.html</id>
            <content type="html"><![CDATA[<p>こんにちは、こんばんは、<a href="http://qiita.com/advent-calendar/2015/fuelphp">FuelPHP Advent Calendar 2015</a> の 4 日目を担当する <a href="https://twitter.com/sharkpp">@sharkpp</a> です。</p>

<p>今回は Temporal Model を使って Markdown で記述できる簡易 Wiki を作ってみることにします。</p>

<p>題して「Markdown Wiki を通して Temporal Model の使い方を覚えよう」です。</p>

<p>完成品は <a href="https://github.com/sharkpp/md-micro-wiki">md-micro-wiki @ github.com</a> にコミットし <a href="https://www.vagrantup.com/">Vagrant</a> を使って簡単に試せるようにしてあります。</p>

<h2 id="%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">はじめに</h2>

<p>Markdwon で記述できる簡単な Wiki の作成を通して <a href="http://fuelphp.com/docs/packages/orm/model/temporal.html">Temporal Model</a> (日本語訳は <a href="http://fuelphp.jp/docs/1.8/packages/orm/model/temporal.html">Temporal Model @ fuelphp.jp</a> を参照) の使い方を説明してみようと思います。</p>

<p>作るものの要件として</p>

<ul>
<li>FuelPHP 1.7.3 を使用</li>
<li>履歴が残せる簡易な Wiki アプリ</li>
<li>Model_Temporal クラスを使用</li>
<li>Markdown で本文を記述</li>
<li>ログイン管理は長くなるので省略</li>
</ul>

<p>を簡単に決め作ってみました。</p>

<p>また、なるべく Oil コマンドの Generate 機能でスケルトンを作り実装の速度を上げてみたいと思います。</p>

<h2 id="%E7%92%B0%E5%A2%83%E3%81%AE%E6%BA%96%E5%82%99">環境の準備</h2>

<p>データベースは FuelPHP の開発環境デフォルトの</p>

<table>
<thead>
<tr>
  <th>項目名</th>
  <th>値</th>
</tr>
</thead>
<tbody>
<tr>
  <td>データベース名</td>
  <td>fuel_dev</td>
</tr>
<tr>
  <td>ユーザー名</td>
  <td>root</td>
</tr>
<tr>
  <td>パスワード</td>
  <td>root</td>
</tr>
</tbody>
</table>

<p>とします。</p>

<h2 id="fuelphp-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">FuelPHP のインストール</h2>

<p><a href="http://fuelphp.com/docs/installation/instructions.html">Instruction</a> (日本語訳は <a href="http://fuelphp.jp/docs/1.8/installation/instructions.html">インストール方法 @ fuelphp.jp</a> を参照) を確認しながら、 Composer を使い、サクッとインストールします。</p>

<p>この時、PHP のタイムゾーンを設定しておかないとエラーが発生してインストール処理が中断するので注意です。</p>

<pre><code>$ composer create-project fuel/fuel:dev-1.7/master --prefer-dist md-micro-wiki
</code></pre>

<p>Welcome ページもいらないので削除します。</p>

<pre><code>$ cd md-micro-wiki
$ rm -rf fuel/app/{classes/{controller/welcome.php,presenter/welcome/},views/welcome/}
$ touch fuel/app/classes/presenter/.gitkeep
</code></pre>

<p>この状態でアクセすると 404 ページの表示になります。</p>

<p><img src="/images/2015_1204_fuel_4th_404.png" alt="FuelPHP 404 page" /></p>

<h2 id="%E5%AE%9F%E8%A3%85">実装</h2>

<h3 id="%E3%83%A2%E3%83%87%E3%83%AB%E3%82%84%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%81%AA%E3%81%A9%E3%81%AE%E3%82%B9%E3%82%B1%E3%83%AB%E3%83%88%E3%83%B3%E3%82%92%E8%BF%BD%E5%8A%A0">モデルやコントローラなどのスケルトンを追加</h3>

<p><a href="http://fuelphp.com/docs/packages/orm/intro.html">Introduction - Orm Package</a> (日本語訳は <a href="http://fuelphp.jp/docs/1.8/packages/orm/intro.html">はじめに - Orm パッケージ @ fuelphp.jp</a> を参照) を参考にORM パッケージを有効化します。</p>

<p><code>fuel/app/config/config.php</code></p>

<pre><code class="diff">@@ -256,7 +256,7 @@
    /**************************************************************************/
    /* Always Load                                                            */
    /**************************************************************************/
-   // 'always_load'  =&gt; array(
+   'always_load'  =&gt; array(

        /**
         * These packages are loaded on Fuel's startup.
@@ -269,9 +269,9 @@
         *     array('auth' =&gt; PKGPATH.'auth/')
         * );
         */
-       // 'packages'  =&gt; array(
-       //  //'orm',
-       // ),
+       'packages'  =&gt; array(
+           'orm',
+       ),

        /**
         * These modules are always loaded on Fuel's startup. You can specify them
@@ -307,6 +307,6 @@
         * If you don't want the lang in a group use null as groupname.
         */
        // 'language'  =&gt; array(),
-   // ),
+   ),

 );
</code></pre>

<p>Oil コマンドの Generate 機能を使い、モデルやコントローラ、ビューのスケルトンを作ります。</p>

<pre><code class="bash">$ php oil g controller page list view revision edit delete
$ php oil g model page title:string body:text body_html:text brief:string --temporal
</code></pre>

<p><a href="http://fuelphp.com/docs/packages/oil/generate.html#/model_temporal">Generate - Oil Package</a> (日本語訳は <a href="http://fuelphp.jp/docs/1.8/packages/oil/generate.html#/model_temporal">Generate - Oil パッケージ @ fuelphp.jp</a> を参照) の注意に書かれているように、マイグレーションコードを修正し主キーを設定します。</p>

<p><code>fuel/app/migrations/001_create_pages.php</code></p>

<pre><code class="diff">            'body_html' =&gt; array('type' =&gt; 'text'),
            'brief' =&gt; array('constraint' =&gt; 255, 'type' =&gt; 'varchar'),

-       ), array('id'));
+       ), array('id', 'temporal_start', 'temporal_end'));
    }

    public function down()
</code></pre>

<p>マイグレーションを実行しテーブルを作成します。</p>

<pre><code>$ php oil r migrate
</code></pre>

<h3 id="%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E8%BF%BD%E5%8A%A0">コードを追加</h3>

<p>ここから若干巻きで進めます。</p>

<ol>
<li>ルーティング、モデル、ビューテンプレートの実装</li>
<li>ページ編集画面の実装</li>
<li>ページ表示画面の実装</li>
<li>ページ一覧表示画面の実装</li>
<li>ページ編集履歴の実装</li>
<li>ページ削除画面の実装</li>
</ol>

<p>の順番で実装を行います。</p>

<p>ルーティングをごそっと変えて、ページの表示、編集、履歴表示、削除、ができるようにします。</p>

<p><code>fuel/app/config/routes.php</code></p>

<pre><code class="diff"> &lt;?php
 return array(
-   '_root_'  =&gt; 'welcome/index',  // The default route
-   '_404_'   =&gt; 'welcome/404',    // The main 404 route
-   
-   'hello(/:name)?' =&gt; array('welcome/hello', 'name' =&gt; 'hello'),
+   '_root_' =&gt; 'page/view',
+   '(create|edit|revision|list)' =&gt; 'page/$1',
+   'revision/(:num)' =&gt; 'page/view//$1',
+   '(:segment)/(create|edit|revision|delete)' =&gt; 'page/$2/$1',
+   '(:segment)/revision/(:num)' =&gt; 'page/view/$1/$2',
+   '(:segment)' =&gt; 'page/view/$1',
 );
</code></pre>

<p>Markdown から HTML への変換処理メソッドやオブザーバー、バリデーション、ページタイトルからレコードを探すメソッドなどを実装します。</p>

<p>ページタイトルのカラムを今回は主キーとしていないため、ページタイトルから特定のリビジョンを示すレコードを探すには、</p>

<ol>
<li>ページタイトルで引っかかる最新のレコードを取得する。</li>
<li>レコードから <code>id</code> を取得し、リビジョンを指定し検索。</li>
</ol>

<p>と、2 回のクエリを発行しないとダメなようです。</p>

<p><code>fuel/app/classes/model/page.php</code></p>

<pre><code class="diff"><br />    protected static $_table_name = 'pages';

+   protected static $_observers = array('Orm\\Observer_Self' =&gt; array(
+    'events' =&gt; array('before_save')
+   ));
+   
+   public function _event_before_save()
+   {
+       $this-&gt;body_html = self::parse_markdown($this-&gt;body);
+   }
+
+   public static function parse_markdown($text)
+   {
+       $text = preg_replace('!\[\]\((.+?)\)!', '[$1]($1)', $text);
+       return Markdown::parse(Security::xss_clean($text));
+   }
+
+   public static function validate($factory)
+   {
+       $val = Validation::forge($factory);
+       $val-&gt;add_field('title', 'Title', 'max_length[255]|valid_string[specials,dashes]');
+       $val-&gt;add_field('body', 'Body', 'required');
+       $val-&gt;add_field('brief', 'Brief', 'max_length[255]');
+
+       return $val;
+   }
+
+   public static function get_by_title($title, $timestamp = null)
+   {
+       $page = self::find('first',
+                                           array(
+                                               'where' =&gt; array( array('title', $title) )
+                       ));
+
+       if ( $page &amp;&amp; $timestamp)
+       {
+           $page = self::find_revision($page-&gt;id, $timestamp);
+       }
+
+       return $page;
+   }
+
+   public static function enum_revisions_by_title($title)
+   {
+       if ( (! $page = self::get_by_title($title)) ||
+                (! $revisions = self::find_revisions_between($page-&gt;id)) )
+       {
+           return null;
+       }
+       return array_reverse($revisions);
+   }
+
 }
</code></pre>

<h3 id="%E3%83%93%E3%83%A5%E3%83%BC%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%92%E4%BF%AE%E6%AD%A3">ビューテンプレートを修正</h3>

<p><code>fuel/app/views/template.php</code></p>

<pre><code class="diff">@@ -11,6 +11,20 @@
 &lt;body&gt;
    &lt;div class="container"&gt;
        &lt;div class="col-md-12"&gt;
+&lt;?php $action = preg_match('!/(edit|revision|delete)(/[0-9]+)?!', '/' . Uri::string(), $match) ? $match[1] : ''; ?&gt;
+           &lt;div class="pull-right"&gt;
+               &lt;?php echo Html::anchor('', 'Top'); ?&gt;
+               |
+               &lt;?php echo Html::anchor('list', 'List'); ?&gt;
+               ||
+               &lt;?php echo '' == $action || 'list' == Uri::string() ? 'Read' : Html::anchor($name, 'Read'); ?&gt;
+               |
+               &lt;?php echo '' != $action || 'list' == Uri::string() ? 'Edit' : Html::anchor($name . '/edit', 'Edit'); ?&gt;
+               |
+               &lt;?php echo ('revision' == $action &amp;&amp; !isset($match[2])) || ('revision' != $action &amp;&amp; '' != $action) || 'list' == Uri::string() ? 'Revision' : Html::anchor($name . '/revision', 'Revision'); ?&gt;
+               |
+               &lt;?php echo '' != $action || '' == Uri::string() || 'list' == Uri::string() ? 'Delete' : Html::anchor($name . '/delete', 'Delete'); ?&gt;
+           &lt;/div&gt;
            &lt;h1&gt;&lt;?php echo $title; ?&gt;&lt;/h1&gt;
            &lt;hr&gt;
 &lt;?php if (Session::get_flash('success')): ?&gt;
@@ -29,9 +43,15 @@
                &lt;/p&gt;
            &lt;/div&gt;
 &lt;?php endif; ?&gt;
+&lt;?php if ('revision' == $action &amp;&amp; isset($match[2])): ?&gt;
+           &lt;div class="alert alert-warning"&gt;
+               &lt;p&gt;This is an &lt;?php echo Html::anchor($name . '/revision', 'old revision'); ?&gt; of this page.&lt;/p&gt;
+           &lt;/div&gt;
+&lt;?php endif; ?&gt;
        &lt;/div&gt;
        &lt;div class="col-md-12"&gt;
 &lt;?php echo $content; ?&gt;
+           &lt;hr&gt;
        &lt;/div&gt;
        &lt;footer&gt;
            &lt;p class="pull-right"&gt;Page rendered in {exec_time}s using {mem_usage}mb of memory.&lt;/p&gt;
</code></pre>

<h3 id="%E3%83%9A%E3%83%BC%E3%82%B8%E8%A1%A8%E7%A4%BA%E7%94%A8%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%83%93%E3%83%A5%E3%83%BC%E5%AE%9F%E8%A3%85">ページ表示用のコントローラメソッドとビュー実装</h3>

<p>実装すると作成 or 編集したページが表示できるようになります。</p>

<p><code>fuel/app/classes/controller/page.php</code></p>

<pre><code class="diff">-   public function action_view()
+   public function action_view($name = '', $timestamp = null)
    {
-       $data["subnav"] = array('view'=&gt; 'active' );
-       $this-&gt;template-&gt;title = 'Page &amp;raquo; View';
-       $this-&gt;template-&gt;content = View::forge('pa/view', $data);
+       if ( ! $page = Model_Page::get_by_title($name, $timestamp) ) {
+           if ( $timestamp) {
+               throw new HttpNotFoundException;
+           }
+           Response::redirect($name . '/edit');
+       }
+
+       $this-&gt;template-&gt;title = (empty($name) ? '(top)' : $name);
+       $this-&gt;template-&gt;name = $name;
+       $this-&gt;template-&gt;content = View::forge('page/view')
+                                   -&gt;set_safe('page', $page);
    }
</code></pre>

<p><code>fuel/app/views/page/view.php</code></p>

<pre><code class="php">&lt;?php echo $page-&gt;body_html; ?&gt;&lt;/p&gt;
</code></pre>

<h3 id="%E3%83%9A%E3%83%BC%E3%82%B8%E7%B7%A8%E9%9B%86%E7%94%A8%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%83%93%E3%83%A5%E3%83%BC%E5%AE%9F%E8%A3%85">ページ編集用のコントローラメソッドとビュー実装</h3>

<p>実装すると、ページの編集ができるようになります。</p>

<p><a href="/images/2015_1204_fuel_4th_editing.png"><img src="/_thumbs/32e1813e0bc4e7a012b748c5263e4779-256x256.png" alt="編集中"></a></p>

<p>またプレビュー機能も同時に実装しています。</p>

<p><a href="/images/2015_1204_fuel_4th_editing_preview.png"><img src="/_thumbs/6f633f1b809c34d8892cbbc7187817d7-256x256.png" alt="編集中のプレビュー"></a></p>

<p><code>fuel/app/classes/controller/page.php</code></p>

<pre><code class="diff">-   public function action_edit()
+   
+   public function action_edit($name = '')
    {
-       $data["subnav"] = array('edit'=&gt; 'active' );
-       $this-&gt;template-&gt;title = 'Page &amp;raquo; Edit';
-       $this-&gt;template-&gt;content = View::forge('pa/edit', $data);
+       $page = Model_Page::get_by_title($name);
+       $new_page = ! $page;
+
+       if (Input::method() == 'POST') {
+           $val = Model_Page::validate($new_page ? 'create' : 'edit');
+           if ($val-&gt;run(array('title' =&gt; $name))) {
+               $page = $page ?: Model_Page::forge();
+               $page-&gt;title = $val-&gt;validated('title');
+               $page-&gt;body  = $val-&gt;validated('body');
+               $page-&gt;brief = $val-&gt;validated('brief');
+               if (!Input::post('preview')) {
+                   if ($page-&gt;save()) {
+                       Session::set_flash('success', $new_page ? 'Added page.' : 'Updated page.');
+                       Response::redirect($name);
+                   }
+                   else {
+                       Session::set_flash('error', $new_page ? 'Could not save page.' : 'Could not update page.');
+                   }
+               }
+           }
+           else {
+               Session::set_flash('error', $val-&gt;error());
+           }
+           $this-&gt;template-&gt;set_global('body_html', Model_Page::parse_markdown(Input::post('body')), false);
+       }
+       else if ($page) {
+           $page-&gt;brief = '';
+       }
+
+       $this-&gt;template-&gt;set_global('page', $page, false);
+
+       $this-&gt;template-&gt;title = ($new_page ? 'Creating ' : 'Editing ') . (empty($name) ? '(top)' : $name);
+       $this-&gt;template-&gt;name = $name;
+       $this-&gt;template-&gt;content = View::forge('page/edit');
    }
</code></pre>

<p><code>fuel/app/views/page/edit.php</code></p>

<pre><code class="php">&lt;?php if (isset($body_html)): ?&gt;
&lt;div class="alert alert-info"&gt;
    &lt;p&gt;This is only a preview; your changes have not yet been saved! → &lt;a href="#form"&gt;Go to editing area&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;?php echo $body_html; ?&gt;
&lt;hr&gt;
&lt;?php endif ?&gt;
&lt;?php echo Form::open(array("class"=&gt;"form-horizontal")); ?&gt;

    &lt;fieldset id="form"&gt;
        &lt;div class="form-group"&gt;
            &lt;?php echo Form::label('Body', 'body', array('class'=&gt;'control-label')); ?&gt;

                &lt;?php echo Form::textarea('body', Input::post('body', isset($page) ? $page-&gt;body : ''), array('class' =&gt; 'col-md-8 form-control', 'rows' =&gt; 8, 'placeholder'=&gt;'Body')); ?&gt;

        &lt;/div&gt;
        &lt;div class="form-group"&gt;
            &lt;?php echo Form::label('Brief', 'brief', array('class'=&gt;'control-label')); ?&gt;

                &lt;?php echo Form::input('brief', Input::post('brief', isset($page) ? $page-&gt;brief : ''), array('class' =&gt; 'col-md-4 form-control', 'placeholder'=&gt;'Brief')); ?&gt;

        &lt;/div&gt;
        &lt;div class="form-group"&gt;
            &lt;?php echo Form::submit('submit', 'Save', array('class' =&gt; 'btn btn-primary')); ?&gt;
            &lt;?php echo Form::submit('preview', 'Preview', array('class' =&gt; 'btn btn-normal')); ?&gt;
            &lt;?php echo Html::anchor(isset($page) ? $page-&gt;title : '', 'Cancel', array('class' =&gt; 'btn btn-normal')); ?&gt;
        &lt;/div&gt;
    &lt;/fieldset&gt;
&lt;?php echo Form::close(); ?&gt;
</code></pre>

<h3 id="%E3%83%9A%E3%83%BC%E3%82%B8%E4%B8%80%E8%A6%A7%E8%A1%A8%E7%A4%BA%E7%94%A8%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%83%93%E3%83%A5%E3%83%BC%E5%AE%9F%E8%A3%85">ページ一覧表示用のコントローラメソッドとビュー実装</h3>

<p>実装すると追加したページの一覧が、</p>

<p><a href="/images/2015_1204_fuel_4th_page_list.png"><img src="/_thumbs/e85a6468e24b04b7fb73195c6775a7b8-256x256.png" alt="リスト表示"></a></p>

<p>と、このような感じで表示できるようになります。</p>

<p><code>fuel/app/classes/controller/page.php</code></p>

<pre><code class="diff">    public function action_list()
    {
-       $data["subnav"] = array('list'=&gt; 'active' );
-       $this-&gt;template-&gt;title = 'Page &amp;raquo; List';
-       $this-&gt;template-&gt;content = View::forge('pa/list', $data);
+       $data['pages'] = Model_Page::find('all');
+
+       $this-&gt;template-&gt;title = 'List of all pages';
+       $this-&gt;template-&gt;content = View::forge('page/list', $data);
    }
</code></pre>

<p><code>fuel/app/views/page/list.php</code></p>

<pre><code class="php">&lt;div class="row"&gt;
  &lt;div class="col-md-6"&gt;
    &lt;ul&gt;
&lt;?php for ($i = 0, $num = count($pages), $page = current($pages); $page; $i++, $page = next($pages)): ?&gt;
      &lt;li&gt;&lt;?php echo Html::anchor($page-&gt;title, empty($page-&gt;title) ? '(top)' : $page-&gt;title); ?&gt;&lt;/li&gt;
&lt;?php if (intval(($num-1)/2) == $i): ?&gt;
        &lt;/ul&gt;&lt;/div&gt;&lt;div class="col-md-6"&gt;&lt;ul&gt;
&lt;?php endif; ?&gt;
&lt;?php endfor; ?&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>

<h3 id="%E3%83%9A%E3%83%BC%E3%82%B8%E5%B1%A5%E6%AD%B4%E7%94%A8%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%83%93%E3%83%A5%E3%83%BC%E5%AE%9F%E8%A3%85">ページ履歴用のコントローラメソッドとビュー実装</h3>

<p>実装するとページの編集履歴が</p>

<p><a href="/images/2015_1204_fuel_4th_revision.png"><img src="/_thumbs/ccc99f4b994b0f8ff4c582dee40eb0c4-256x256.png" alt="履歴"></a></p>

<p>と、このような感じで表示できるようになります。</p>

<p>各リビジョンは日付が該当リビジョンの内容を表示するためのリンクとなっています。</p>

<p><code>fuel/app/classes/controller/page.php</code></p>

<pre><code class="diff">-   public function action_revision()
+   public function action_revision($name = '')
    {
-       $data["subnav"] = array('revision'=&gt; 'active' );
-       $this-&gt;template-&gt;title = 'Page &amp;raquo; Revision';
-       $this-&gt;template-&gt;content = View::forge('pa/revision', $data);
+       if ( ! $data['revisions'] = Model_Page::enum_revisions_by_title($name) ) {
+           throw new HttpNotFoundException;
+       }
+
+       $this-&gt;template-&gt;title = 'Revision of ' . (empty($name) ? '(top)' : $name);
+       $this-&gt;template-&gt;name = $name;
+       $this-&gt;template-&gt;content = View::forge('page/revision', $data);
    }
</code></pre>

<p><code>fuel/app/views/page/revision.php</code></p>

<pre><code class="php">&lt;table&gt;
&lt;?php $i = 0; foreach ($revisions as $revision): ?&gt;
  &lt;tr&gt;
&lt;?php if (0 == $i): ?&gt;
  &lt;td&gt;&lt;?php echo Html::anchor($revision-&gt;title, Date::forge($revision-&gt;temporal_start)-&gt;format("%Y-%m-%d %H:%M:%S")); ?&gt;&lt;/td&gt;
&lt;?php else: ?&gt;
  &lt;td&gt;&lt;?php echo Html::anchor($revision-&gt;title . '/revision/' . $revision-&gt;temporal_start, Date::forge($revision-&gt;temporal_start)-&gt;format("%Y-%m-%d %H:%M:%S")); ?&gt;&lt;/td&gt;
&lt;?php endif; ?&gt;
    &lt;td&gt;&lt;?php echo empty($revision-&gt;brief) ? '' : '(' . $revision-&gt;brief . ')'; ?&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;?php $i++; endforeach; ?&gt;
&lt;/table&gt;
</code></pre>

<h3 id="%E3%83%9A%E3%83%BC%E3%82%B8%E5%89%8A%E9%99%A4%E7%94%A8%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%A8%E3%83%93%E3%83%A5%E3%83%BC%E5%AE%9F%E8%A3%85">ページ削除用のコントローラメソッドとビュー実装</h3>

<p>実装すると削除処理ができるようになります。</p>

<p><a href="/images/2015_1204_fuel_4th_delete.png"><img src="/_thumbs/2cdf9085abd8d7791b23c8d9ba986fc3-256x256.png" alt="削除"></a></p>

<p><code>fuel/app/classes/controller/page.php</code></p>

<pre><code class="diff">-   public function action_delete()
+   public function action_delete($name)
    {
-       $data["subnav"] = array('delete'=&gt; 'active' );
-       $this-&gt;template-&gt;title = 'Page &amp;raquo; Delete';
-       $this-&gt;template-&gt;content = View::forge('pa/delete', $data);
+       if ( ! $data['page'] = Model_Page::get_by_title($name) ) {
+           throw new HttpNotFoundException;
+       }
+
+       if (Input::post('submit')) {
+           if ($data['page']-&gt;purge()) {
+               Session::set_flash('success', 'Deleted page');
+               Response::redirect('');
+           }
+           else {
+               Session::set_flash('error', 'Could not delete page');
+           }
+       }
+
+       $this-&gt;template-&gt;title = $name;
+       $this-&gt;template-&gt;name = $name;
+       $this-&gt;template-&gt;content = View::forge('page/delete', $data);
    }
</code></pre>

<p><code>fuel/app/views/page/delete.php</code></p>

<pre><code class="php">&lt;p&gt;Are you sure you want to delete &lt;?php echo $page-&gt;title; ?&gt; ?&lt;/p&gt;
&lt;?php echo Form::open(array("class"=&gt;"form-horizontal")); ?&gt;
  &lt;?php echo Form::submit('submit', 'Yes, Delete', array('class' =&gt; 'btn btn-danger')); ?&gt;
  &lt;?php echo Html::anchor(isset($page) ? $page-&gt;title : '', 'Cancel', array('class' =&gt; 'btn btn-normal')); ?&gt;
&lt;?php echo Form::close(); ?&gt;
</code></pre>

<h2 id="wiki-%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9">Wiki の使い方</h2>

<p>基本的な動作として、ページがない場合は新規作成画面に移動します。</p>

<p>そのため、初期状態でトップページにアクセスするとトップページの作成画面に移動します。</p>

<p>書式は <a href="https://michelf.ca/projects/php-markdown/">PHP Markdown</a> のドキュメントが参考になります。</p>

<p>加えて、リンクのテキストを</p>

<pre><code class="markdown">[](テスト)
</code></pre>

<p>のような感じに省略した場合、</p>

<pre><code class="markdown">[テスト](テスト)
</code></pre>

<p>の形式に直されます。</p>

<p>また、このような形で各ページに対してリンクを貼ることができます。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>駆け足でしたが、 Temporal Model を使って簡単に Markdown で編集できる Wiki を作ることができました。</p>

<p>とりあえず、今回わかったことをまとめると</p>

<ul>
<li><code>php oil g model XXX ... --temporal</code> で Temporal Model のスケルトンが簡単に生成できる、がマイグレーションコードに手を入れる必要あり。</li>
<li>主キー以外のカラムから特定リビジョンを取得するには 2 回のデータベースクエリ発行が必要。</li>
<li>単純なモデルクラスに少し足した感じなので簡単に扱うことができる</li>
</ul>

<p>と、若干の考慮する点などがありますが、 Temporal Model は履歴管理を実装として含んでいるためユーザーが複雑なクエリを構築することなく、単純なモデルクラスのような感じで扱うことができます。</p>

<p>ぜひ使って見てください。</p>

<p>以上、<a href="https://twitter.com/sharkpp">@sharkpp</a> がお送りいたしました。</p>

<p>この文章は <a href="https://creativecommons.org/licenses/by/4.0/legalcode.ja">クリエイティブ・コモンズ 表示 4.0 国際</a> ライセンス、コードスニペットは <a href="http://osdn.jp/projects/opensource/wiki/licenses%2FMIT_license">MIT ライセンス</a> の下に提供されています。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://fuelphp.jp/docs/1.8/packages/orm/model/temporal.html">Temporal Model - Orm パッケージ - FuelPHP ドキュメント</a></li>
<li><a href="https://www.mediawiki.org/wiki/Manual:Database_layout/ja">Manual:データベースのレイアウト - MediaWiki</a></li>
<li><a href="http://www.slideshare.net/takyam1213/temporal-model-takyam">What's Temporal model FuelPHP東京勉強会03</a></li>
<li><a href="https://ja.wikipedia.org/wiki/Help:%E4%BB%A5%E5%89%8D%E3%81%AE%E7%89%88%E3%81%AB%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E6%88%BB%E3%81%99%E6%96%B9%E6%B3%95">Help:以前の版にページを戻す方法 - Wikipedia</a></li>
<li><a href="https://michelf.ca/projects/php-markdown/">PHP Markdown</a></li>
</ul>

<hr>

<p>この投稿は <strong><a href="http://qiita.com/advent-calendar/2015/fuelphp">FuelPHP Advent Calendar 2015</a></strong> の <strong>4日目</strong>の記事です。</p>

<ul>
<li>3日目の記事: <a href="http://qiita.com/ken880guchi/items/300b16b8b8473c3b45a9">FuelPHP で TODO アプリケーションを作ってみた。</a></li>
<li>5日目の記事: <a href="http://www.sharkpp.net/blog/2015/12/05/fuelphp-advent-calender-2015-5th.html">NestedSets Model を使って FuelPHP 用コメントボックスパッケージを作った話</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[FuelPHP ドキュメント翻訳のための git メモ]]></title>
            <link href="http://www.sharkpp.net/blog/2015/11/03/git-memo-for-fuel-docs-trans.html"/>
            <updated>2015-11-03T08:54:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/11/03/git-memo-for-fuel-docs-trans.html</id>
            <content type="html"><![CDATA[<p><a href="/blog/2013/06/01/first-github-fork-and-fuelphp-docs-jp.html">初めてのForkとFuelPHP 1.6 翻訳ウィーク参加</a> で git の操作方法をメモってたけど色々おかしかったので新たにメモ。</p>

<p>それ以外にも関連する事柄をメモ。</p>

<h2 id="%E6%9C%AA%E7%BF%BB%E8%A8%B3%E3%81%AE%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E6%8E%A2%E3%81%99">未翻訳のドキュメントを探す</h2>

<pre><code class="bash">$ grep -RE " [a-zA-Z]+\.\s*$" * | grep -v "MIT license"
</code></pre>

<p>や</p>

<pre><code class="bash">$ grep -RE " you " *
</code></pre>

<p>とすることでなんとなく探せます。</p>

<p>なんとなくですが。</p>

<h2 id="%E8%A6%AA%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%8B%E3%82%89%E3%83%9E%E3%83%BC%E3%82%B8">親リポジトリからマージ</h2>

<p>親リポジトリは</p>

<pre><code class="bash">$ git remote set-url upstream &lt;URL&gt;
</code></pre>

<p>で指定しておき</p>

<pre><code class="bash">$ git remote -v
</code></pre>

<p>で現状を確認できる。</p>

<p>そして、</p>

<pre><code class="bash">$ git pull upstream &lt;BRANCH_NAME&gt;
</code></pre>

<p>でマージする。</p>

<p>さらに、自分の GitHub に pull アンド push でマージ。</p>

<pre><code class="bash">$ git push origin 1.8/develop_japanese
$ git pull origin 1.8/develop_japanese
</code></pre>

<p>ブランチを切って作業していればマージも自動で終わるはず。</p>

<p>upstream から pull した後で↓の</p>

<p><img src="/images/2015_1103_github_desktop_sync_button.png" alt="GitHub Desktop Sync Button" /></p>

<p>GitHub Desktop の Sync ボタンでも自分のレポジトリにマージできるので普段はそっちの方が簡単。</p>

<h2 id="%E3%83%9E%E3%83%BC%E3%82%B8%E6%B8%88%E3%81%BF%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E6%8E%A2%E3%81%99">マージ済みのブランチを探す</h2>

<pre><code class="bash">git branch -r --list --merged | grep -vE "((upstream|NEKOGET)/|origin/[0-9]+)"
</code></pre>

<h2 id="pr%E3%81%97%E3%81%9F%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E5%89%8A%E9%99%A4">PRしたブランチの削除</h2>

<p>GitHub の Pull Request ページから</p>

<p><img src="/images/2015_1103_delete_branch.png" alt="Delete branch" /></p>

<p>のようにブランチを削除したりできる。</p>

<p>が、コマンドラインで処理をすることもできます。</p>

<p>ローカルのブランチを削除するにはこう↓</p>

<pre><code class="bash">git branch -d &lt;branchname&gt;
</code></pre>

<p>リモートのブランチを削除するにはこう↓</p>

<pre><code class="bash">git push origin :&lt;branchname&gt;
</code></pre>

<h2 id="omg%21-%E9%96%93%E9%81%95%E3%81%A3%E3%81%9F%E5%90%8D%E5%89%8D%E3%81%A7%E9%96%93%E9%81%95%E3%81%A3%E3%81%9F%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%97%E3%81%A6%E3%81%BE%E3%81%A3%E3%81%9F">OMG! 間違った名前で間違ったメッセージを書いてコミットしてまった</h2>

<p>一連の流れはこう↓</p>

<pre><code class="bash">$ git branch -m &lt;OLD_BRANCH_NAME&gt; &lt;NEW_BRANCH_NAME&gt;
$ git checkout &lt;OLD_BRANCH_NAME&gt;
$ git push origin :&lt;OLD_BRANCH_NAME&gt;
$ git branch --unset-upstream
$ git commit --amend -m "&lt;NEW_COMMIT_LOG&gt;"
$ git push origin &lt;NEW_BRANCH_NAME&gt;
</code></pre>

<p>個別解説。</p>

<p>直前のコミットログを修正するにはこう↓</p>

<pre><code class="bash">$ git commit --amend -m "&lt;NEW_COMMIT_LOG&gt;"
</code></pre>

<p>ローカルのブランチ名を変更するにはこう↓</p>

<pre><code class="bash">$ git branch -m &lt;OLD_BRANCH_NAME&gt; &lt;NEW_BRANCH_NAME&gt;
</code></pre>

<p>ローカルと同じ名前のリモートブランチを削除した場合に注意されることがあるので関連付け？を解除するには切り替えたブランチ上でこう↓</p>

<pre><code class="bash">$ git branch --unset-upstream
</code></pre>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/hnw/20110528">GitHubへpull requestする際のベストプラクティス - hnwの日記</a></li>
<li><a href="http://qiita.com/makoto_kw/items/c825e17e2a577bb83e19">Gitで使われていないリモートブランチの整理 - Qiita</a></li>
<li><a href="http://qiita.com/kon_yu/items/e9ebd7f778df430a4223">GitHub - Gitのリモートリポジトリの名前を付け替える　〜Railsのアップグレードを例にして〜 - Qiita</a></li>
<li><a href="http://tobysoft.net/wiki/index.php?git%2F%A5%B3%A5%DF%A5%C3%A5%C8%A5%ED%A5%B0%A4%F2%BD%A4%C0%B5%A4%B9%A4%EB%CA%FD%CB%A1#q9692e83">git/コミットログを修正する方法 - TOBY SOFT wiki</a></li>
<li><a href="http://dqn.sakusakutto.jp/2011/10/git_push_origin_master.html">Git超入門："git push origin master"の"push"と"origin"と"master"の意味がわからないあなたへ · DQNEO起業日記</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[FuelPHPのメモ]]></title>
            <link href="http://www.sharkpp.net/blog/2015/08/23/fuelphp-memo.html"/>
            <updated>2015-08-23T18:00:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/08/23/fuelphp-memo.html</id>
            <content type="html"><![CDATA[<p>落ち葉拾い的な？</p>

<p>SSDの肥やしになっていたのをサルベージしてきました。</p>

<p>FuelPHP を使っている中で気がついたことのメモです。</p>

<h2 id="orm%5Cmodel_temporal-%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9">Orm\Model_Temporal を使うときの注意点</h2>

<p><a href="http://fuelphp.com/docs/packages/orm/intro.html">Orm パッケージ</a>の <a href="http://fuelphp.com/docs/packages/orm/model/temporal.html">Model_Temporal</a> という、データを履歴管理するのに便利そうなモデルが FuelPHP 1.6 以降で実装されています。</p>

<p>このモデルを使っているときにちょっと気がついたことがあるのでメモしておきます。</p>

<p>とりあえず、モデルは次のような感じで用意します。
<code>mysql_timestamp</code> に <code>true</code> と指定しているのが <a href="http://fuelphp.com/docs/packages/orm/model/temporal.html">Temporal Model - Orm Package - FuelPHP Documentation</a> の例と違うところですが、 <code>false</code> でも同じ問題が起きます。 <strong>要確認</strong></p>

<pre><code class="php">// app/classes/model/mytemporal.php
class Model_MyTemporal extends Orm\Model_Temporal
{
    protected static $_primary_key = array('id', 'temporal_start', 'temporal_end');
    protected static $_temporal = array(
        'start_column' =&gt; 'temporal_start',
        'end_column' =&gt; 'temporal_end',
        'mysql_timestamp' =&gt; true, // ここを true に
    );
}
</code></pre>

<p>テストで↓のようなのを実行します。</p>

<pre><code class="php">// app/tests/model/mytemporal.php

$model = new Model_MyTemporal();
$model-&gt;save();
</code></pre>

<p>そして実行</p>

<pre><code class="bash">[root@localhost test_temporal_model]# oil t --group=App
Tests Running...This may take a few moments.
PHPUnit 3.7.31 by Sebastian Bergmann.

Configuration read from /var/www/html/test_temporal_model/fuel/core/phpunit.xml

.

Time: 68 ms, Memory: 22.50Mb

OK (1 test, 5 assertions)
</code></pre>

<p>日付を 2040/1/1 00:00 にしてみると、、、</p>

<p>下は失敗、、、、</p>

<pre><code class="bash">[root@localhost test_temporal_model]# date 010100002040
2040年  1月  1日 日曜日 00:00:00 JST
[root@localhost test_temporal_model]# oil t --group=App
Tests Running...This may take a few moments.
PHPUnit 3.7.31 by Sebastian Bergmann.

Configuration read from /var/www/html/test_temporal_model/fuel/core/phpunit.xml

E

Time: 12 ms, Memory: 20.50Mb

There was 1 error:

1) Test_Model_MyTemporal::test_save_and_between
PDOException: SQLSTATE[HY000]: General error: 2013 Lost connection to MySQL server during query

/var/www/html/test_temporal_model/fuel/core/classes/database/pdo/connection.php:150
/var/www/html/test_temporal_model/fuel/core/classes/database/pdo/connection.php:113
/var/www/html/test_temporal_model/fuel/core/classes/database/pdo/connection.php:167
/var/www/html/test_temporal_model/fuel/core/classes/database/query.php:287
/var/www/html/test_temporal_model/fuel/core/classes/dbutil.php:621
/var/www/html/test_temporal_model/fuel/core/classes/migrate.php:595
/var/www/html/test_temporal_model/fuel/core/classes/migrate.php:74
/var/www/html/test_temporal_model/fuel/core/classes/autoloader.php:364
/var/www/html/test_temporal_model/fuel/core/classes/autoloader.php:247
/var/www/html/test_temporal_model/fuel/app/tests/model/mytemporal.php:12

FAILURES!
Tests: 1, Assertions: 0, Errors: 1.
[root@localhost test_temporal_model]# 
</code></pre>

<p>まあ、詳しくは調べていないですが、どうやら MySQL で 32ビットで日付を扱っているためのようです。</p>

<p><a href="http://tech-blog.tsukaby.com/archives/179">MySQLの日付型の扱い方や機能をまとめてみました | つかびーの技術日記</a> などを見ると DATETIME 型を使うといいようですね。</p>

<h2 id="opauth-%E3%82%AF%E3%83%A9%E3%82%B9-%E3%83%A1%E3%83%A2">Opauth クラス メモ</h2>

<ul>
<li>Opauth::forge() ではプロバイダのIdは大文字小文字区別して、一致しないと、 <strong><code>Unsupported or undefined Opauth strategy - XXXXX</code></strong> と例外が発行される、基本小文字？</li>
<li><strong><code>Authentication error: the callback returned an error auth response</code></strong> とログイン時に出た場合、Webサーバーを再起動すれば直る、、、かも(なんかセッションが残ってるか、期限が切れてるけどリセットできてない？)</li>
<li>設定の <code>opauth.auto_registration</code> を true にしておけば、ユーザー名とメールアドレスがあれば、初めての認証時に自動でユーザー登録してログインできる(Twitterはメールアドレスが取得できないので無理そう)</li>
<li>ログイン中にOauthでアカウントと関連付けると、既に別のアカウントで関連づけていても関連付けが変更される(A ユーザーに Twitter の @hoge を関連づけた後、 B ユーザーでログイン中に @hoge に関連づけると、関連づけされているユーザーが A あら B に変更されてしまう、 <code>login_or_register()</code> の戻り値は <code>'linked'</code>)</li>
<li>関連付けの解除は存在しないので、解除したい場合は <code>_providers</code> から <code>parent_id</code> と <code>provider</code> で探して削除する</li>
</ul>

<h2 id="ormauth-%E3%82%AF%E3%83%A9%E3%82%B9-%E3%83%A1%E3%83%A2">Ormauth クラス メモ</h2>

<ul>
<li><code>Auth::member()</code> は <code>Auth::member($group, $user)</code> ではなく <code>Auth::member($group, 'Ormgroup', $user)</code> っぽい(それでも欲しかった情報が取得できなかったけど)</li>
</ul>

<h2 id="orm-%E3%82%AF%E3%83%A9%E3%82%B9-%E3%83%A1%E3%83%A2">Orm クラス メモ</h2>

<ul>
<li><code>Model_SoftDelete</code> は <code>Model_XXX::query()</code> からは 論理削除が出来ないので <code>Model_XXX::find()</code> で探してから削除する</li>
<li><code>Model_SoftDelete</code> は <code>Model_XXX::find('all'</code>) では削除が呼び出せないので foreach でまわして処理する</li>
<li><code>Model_Temporal::query()</code> で検索すると全ての履歴が範囲に含まれてしまうので、自分で <code>where('temporal_start', '&lt;=', $timestamp)-&gt;where('temporal_end', '&gt;=', $timestamp)</code> として制限を掛けないと最新の履歴のみが取得できない</li>
<li><code>hoge IN SUBQUERY</code> なサブクエリを使うときには <code>-&gt;where('id', 'in', DB::expr('('.$subQuery-&gt;get_query(true).')'))</code> とすれば一応使える</li>
<li><code>Model_Soft::disable_filter()</code> は <code>Model_Soft::query()</code> の前で使用しないと効果がない。</li>
<li><code>$this-&gt;_is_new</code> を <code>true</code> にした場合、 <code>_original_relations</code> もクリア(リレーションごとに空に)しないと new したときと同じ動作にならない。</li>
<li><code>Model_Huga::query()-&gt;related('hoge')-&gt;where('hoge.id', '!=', null)-&gt;get_one()</code> すると結果がおかしくなることがあるので <code>Model_Huga::query()-&gt;related('hoge')-&gt;where('hoge.id', '!=', null)-&gt;limit_row(1)-&gt;get()</code> とする(参考：<a href="http://stackoverflow.com/questions/13399884/fuelphp-orm-related-limit-ignored">php - Fuelphp ORM related limit ignored - Stack Overflow</a>)</li>
</ul>

<h2 id="file-%E3%82%AF%E3%83%A9%E3%82%B9-%E3%83%A1%E3%83%A2">File クラス メモ</h2>

<ul>
<li><code>$area-&gt;read_dir()</code> では <code>File_Handler_Directory</code> が返されるのでこのオブジェクトのインターフェースを通してディレクトリ内のファイルの一覧を取得することはできない。</li>
</ul>

<h2 id="%E3%81%9D%E3%81%AE%E4%BB%96-%E3%83%A1%E3%83%A2">その他 メモ</h2>

<ul>
<li><code>oil t</code> など CLI インターフェースでは Asset は使えないので <code>Config::set('assets.fail_silently', true);</code> しておくとエラーが出ない(暫定)</li>
<li><code>DomainException: Form instance already exists, cannot be recreated. Use instance() instead of forge() to retrieve the existing instance.</code> って言われたらリクエスト内で <code>::forge('hoge')</code> の <code>hoge</code> が同じ物が居るってこと</li>
</ul>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>とりあえず、フレームワークを触るとドキュメントに載っていないことが色々でてくるのはしょうがないのかなぁと思います。</p>

<p>まぁ、そのうち、整理してまとめたいなぁとは思いますが、きっと手つかずのままになるの未来予想が出来てしまいます。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[ひとり FuelPHP ドキュメント翻訳月間 お疲れ様でした]]></title>
            <link href="http://www.sharkpp.net/blog/2015/06/22/fuelphp-documents-translation-month-alone.html"/>
            <updated>2015-06-22T00:00:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/06/22/fuelphp-documents-translation-month-alone.html</id>
            <content type="html"><![CDATA[<p>３月と４月はひとり FuelPHP ドキュメント翻訳月間な感じでした。</p>

<p>、、、ってのを 4 月頭に公開しようとしたらホムペ吹っ飛んでて公開できなかったので今頃公開しますよってことで。</p>

<p>(自惚れでなければ)つられて？何人かの人も翻訳に参加してくれているのでなんかうれしかったです。</p>

<p>翻訳ウィークって訳じゃないからもうちょっとまとめて Pull Request しても良かったのかなぁ？っと思ったり思わなかったり、、、。</p>

<p>ドキュメントを順番に見ていって翻訳していったので、後どのぐらい残っているのだろう？って感じでしたが、 <a href="https://docs.google.com/spreadsheets/d/1x9nSkaeoRwQg0_OuamLJ4NUnAIT3UNL_VY9Hv5jf-co">FuelPHP翻訳状況 1.5～1.8 - Google スプレッドシート</a> で確認するとだんだんと減ってくのがわかりなかなか楽しく頑張れました。</p>

<h3 id="%E3%81%BE%E3%81%A0%E3%82%82%E3%81%86%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E3%81%A0%E3%81%91%E7%B6%9A%E3%81%8F%E3%82%93%E3%81%98%E3%82%83">まだもうちょっとだけ続くんじゃ</h3>

<p>あと個人的に気になる部分としては、</p>

<ol>
<li>未翻訳部分の翻訳

<ul>
<li>これは当然、100%網羅を目指します！</li>
</ul></li>
<li>訳文の統一

<ul>
<li>翻訳時期とか訳した人により単語や訳文が違っている箇所がちらほら見受けられました。</li>
</ul></li>
<li>おかしな訳文の修正

<ul>
<li>例えば、てにおはがおかしいとか</li>
<li>意味がよくわからない箇所とか</li>
</ul></li>
</ol>

<p>辺りかなぁと思うのだけれども、ちょっと時間が取れなくなってむむむ、な感じ。</p>

<p>2 は、該当表記を表にまとめた方が良いと思いますし、 3 はちょっと自分の能力を超えている部分があるのでお手伝いが欲しいですね。
というか、網羅したら、表にまとめて <a href="https://groups.google.com/forum/#!forum/fuelphp_jp">fuelphp.jp - Google グループ</a> 投げようかと考え中。</p>

<h3 id="%E3%83%AA%E3%82%B6%E3%83%AB%E3%83%88">リザルト</h3>

<p>最後に、結果を。</p>

<p>結果的に、 2015-03-09 から 2015-04-27 までの約 2 ヶ月間、翻訳していた訳ですねぇ。</p>

<p>いままでの人生で、こんなに Pull Request したことがあっただろうか？いやない！(反語)</p>

<ul>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/610">Pull Request #610 目次が開かなくなってたのを修正</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/611">Pull Request #611 toc 翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/612">Pull Request #612 コアクラスの拡張を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/613">Pull Request #613 チュートリアルの注意文を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/614">Pull Request #614 general/environments.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/615">Pull Request #615 packages/oil/{generate,intro}.html 翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/616">Pull Request #616 packages/email/introduction.html 翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/617">Pull Request #617 packages/orm/*.html 翻訳など</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/618">Pull Request #618 訳語統一</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/620">Pull Request #620 crypt クラス関連を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/621">Pull Request #621 classes/config.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/622">Pull Request #622 classes/cache/*.html 翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/624">Pull Request #624 classes/crypt/*.html の翻訳完了</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/626">Pull Request #626 classes/database/*.html 翻訳完了</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/627">Pull Request #627 classes/fieldset/fieldset.html を翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/629">Pull Request #629 classes/fieldset/fieldset.html を翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/631">Pull Request #631 packages/orm/observers/included.html を翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/632">Pull Request #632 packages/auth/examples/auth.html の未翻訳部分を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/634">Pull Request #634 packages/orm/observers/included.html を翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/635">Pull Request #635 packages/orm/observers/included.html 翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/636">Pull Request #636 classes/fieldset/fieldset.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/637">Pull Request #637 メソッド一覧キャプション翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/638">Pull Request #638 htmlタグの言語がjpではなかったのを修正</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/639">Pull Request #639 classes/fieldset/field.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/640">Pull Request #640 "for chaining" の訳を統一</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/647">Pull Request #647 classes/html.html の翻訳と整形</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/648">Pull Request #648 classes/file/*.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/650">Pull Request #650 classes/inflector.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/651">Pull Request #651 classes/presenter.html の未翻訳部分を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/652">Pull Request #652 classes/input.html の未翻訳部分を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/653">Pull Request #653 classes/mongo/introduction.html の未翻訳部分を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/658">Pull Request #658 classes/router.html の訳文の統一と未翻訳部分を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/660">Pull Request #660 classes/request/*.html 翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/661">Pull Request #661 classes/module.html を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/662">Pull Request #662 packages/orm/observers/included.html の未翻訳部分を翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/663">Pull Request #663 classes/session/*.html の整形と翻訳</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/664">Pull Request #664 classes/session/config.html を翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/665">Pull Request #665 classes/session/config.html を翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/667">Pull Request #667 classes/session/config.html の翻訳中</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/668">Pull Request #668 classes/session/config.html を翻訳完了</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/669">Pull Request #669 classes/session/advanced.html 翻訳完了</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/673">Pull Request #673 訳文を他と統一</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/674">Pull Request #674 classes/theme/methods.html 翻訳完了</a></li>
<li><a href="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/676">Pull Request #676 packages/orm/model/nestedset.html 翻訳中</a></li>
</ul>

<p>３月と４月は頑張った！うんっ！</p>

<p>最後に、 <a href="https://twitter.com/nekoget">@NEKOGET</a> さん、マージお疲れさまでした。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Request_Curlにまつわるエトセトラ]]></title>
            <link href="http://www.sharkpp.net/blog/2013/12/14/fuelphp-advent-calendar-2013-14th-day.html"/>
            <updated>2013-12-14T22:26:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2013/12/14/fuelphp-advent-calendar-2013-14th-day.html</id>
            <content type="html"><![CDATA[<p><a href="http://atnd.org/events/45096">FuelPHP Advent Calendar 2013</a> 14日目。</p>

<p><a href="https://twitter.com/sharkpp">@sharkpp</a>です。</p>

<p>昨日は <a href="https://twitter.com/soudai1025">@soudai1025</a> さんの「<a href="http://soudai1025.blogspot.com/2013/12/fuelphp-datatables.html">FuelPHP（TwitterBootstrap3）でJQueryのプラグインのdataTablesを使う</a>」でした</p>

<p>2回目の FuelPHP Advent Calendar 2013 登場となります。</p>

<h2 id="request_curl-%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%81%BE%E3%81%99%E3%81%8B%EF%BC%9F">Request_Curl 使っていますか？</h2>

<p>さて、<a href="http://fuelphp.jp/docs/1.7/classes/request/curl.html">Request_Curl</a> 使ってますか？</p>

<p>えっ？ <a href="https://github.com/guzzle/guzzle">Guzzle</a> のが便利だからそっち使ってるですって？</p>

<p>まあ、そう言わずに Request_Curl は標準で含まれているので使ってみませんか？</p>

<p>簡単な使い方：</p>

<pre><code>$url = 'http://www.example.net/';
$curl = \Request::forge($url, 'curl');
$curl-&gt;execute();
$response = $curl-&gt;response();
echo $response-&gt;body;
</code></pre>

<p>ね！簡単でしょ？</p>

<h2 id="get%2Fpost%E6%99%82%E3%81%AE%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E6%8C%87%E5%AE%9A">GET/POST時のパラメータ指定</h2>

<p>GET/POST時のパラメータの指定は通常であれば、</p>

<pre><code>$param['user'] = 'john';
$param['data'] = 'test';
$curl-&gt;set_params($param);
</code></pre>

<p>で問題ありません。</p>

<p>が、<code>http://www.example.net/?user=john&amp;user=smith</code> のように同じキーが複数存在する場合は先の方法ではうまくいきません。 そもそも、そんな指定はありえない？いえいえ、実際にこのような指定をするアプリケーションがありました。</p>

<p>そんな場合は、</p>

<pre><code>// Copyright (c) 2013 sharkpp
// This function is released under the MIT License.
// http://opensource.org/licenses/mit-license.php
function build_query($data) {
  array_walk($data, function(&amp;$value, $key){
      is_array($value) ?: $value = array($value);
      $value = array_map(function($value){ return urlencode($value); }, $value);
      $value = implode('&amp;'.$key.'=', $value);
      $value = $key.'='.$value;
    });
  return implode('&amp;', $data);
}
</code></pre>

<p>のようなクエリ文字列の構築関数を使って</p>

<pre><code>$param['user'] = array('john', 'smith');
$curl-&gt;set_params(build_query($param));
</code></pre>

<p>とすればOKです。</p>

<p>実はドキュメントに書かれていないですが、<code>Request_Curl::set_params()</code> の引数に文字列を渡すとクエリ文字列としてそのまま使ってくれます。</p>

<h2 id="cookie-%E3%81%AF%E3%81%8A%E3%81%84%E3%81%97%E3%81%84%EF%BC%9F">Cookie はおいしい？</h2>

<p>Cookie の与え方も簡単です。</p>

<pre><code>// Copyright (c) 2013 sharkpp
// This function is released under the MIT License.
// http://opensource.org/licenses/mit-license.php
protected static function build_cookie($data) {
    if (is_array($data)) {
        $cookie = '';
        foreach ($data as $key =&gt; $value) {
            $cookie[] = $key.'='.urlencode($value);
        }
        if (count($cookie) &gt; 0) {
            return trim(implode('; ', $cookie));
        }
    }
    return false;
}
</code></pre>

<p>こんな関数を用意して</p>

<pre><code>$cookie['hoge'] = 'test';
$cookie['fuga'] = '1234';
$curl-&gt;set_option(CURLOPT_COOKIE, build_cookie($cookie));
</code></pre>

<p>とすればOKです。</p>

<h2 id="php-%E3%81%95%E3%82%93%E3%81%A7%E3%81%99%E3%81%8B%EF%BC%9F%E3%81%84%E3%81%88%E3%81%84%E3%81%88-ie11-%E3%81%A7%E3%81%99">PHP さんですか？いえいえ IE11 です</h2>

<p>User Agent 略して UA の偽装ももちろんできます。</p>

<pre><code>$UA = 'Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; Touch; rv:11.0) like Gecko';
$header['User-Agent']= $UA;
foreach ($header as $key =&gt; $value) { $curl-&gt;set_header($key, $value); }
</code></pre>

<p>ちなみに、ヘッダの複数指定は出来ないようなので <code>foreach</code> で連想配列を処理して登録しています。 一回ずつ<code>Request_Curl::set_header()</code> を呼び出してもいいですが <code>foreach</code> の方が見やすい気がします。</p>

<h2 id="ssl%E3%81%8C%E6%A4%9C%E8%A8%BC%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%EF%BC%9F%E5%A4%A7%E4%B8%88%E5%A4%AB%E3%81%A0%E3%80%81%E5%95%8F%E9%A1%8C%E3%81%AA%E3%81%84">SSLが検証できない？大丈夫だ、問題ない</h2>

<p>まったくもって大丈夫じゃないですが、、、そんな時もあります。</p>

<p>https なサーバーに対してアクセスする場合に、どうにもエラーが出てうまくいかない場合があります。</p>

<p>本来は無効にすべきではないのですが、SSLの証明書の検証を無効にすることも出来ます。</p>

<pre><code>$curl-&gt;set_option(CURLOPT_SSL_VERIFYPEER, false);
</code></pre>

<p>本来は</p>

<pre><code>$curl-&gt;set_option(CURLOPT_CAINFO, 'path/to/cacert.pem');
</code></pre>

<p>のような感じで検証用のファイルを指定するようですがうまくいきませんでした。</p>

<h2 id="%E3%81%82%E3%82%8C%EF%BC%9F">あれ？</h2>

<p>あれ？ちょっと <code>Request_Curl::set_option()</code> がいっぱい出てくるのだけれど、、、</p>

<p>あ、気が付かれましたか。 名前の通りと言ったところではあるのですが、 <code>curl_*</code> のラッパーになっているため、 <a href="http://jp2.php.net/curl_setopt">PHP: curl_setopt - Manual</a> 辺りを見ながら <code>Request_Curl::set_option()</code> に引数を与えてあげれば色々な事が出来ます。</p>

<p>クラス内部で色々やっているのですべてのオプションが確実に指定できるとは限らないですがある程度は自由に出来るようです。</p>

<p>と言うことで、 <code>Request_Curl</code> クラスの紹介でした。</p>

<p>明日は <a href="https://twitter.com/Tukimikage">@Tukimikage</a> さんの「<a href="http://think-sv.net/blog/?p=1290">続・Cloudn_PaaSでFuelPHPを動かしてみた</a>」です。お楽しみに！</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[FuelPHPをphar化してポータブルに！]]></title>
            <link href="http://www.sharkpp.net/blog/2013/12/01/fuelphp-advent-calendar-2013-1st-day.html"/>
            <updated>2013-12-01T14:57:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2013/12/01/fuelphp-advent-calendar-2013-1st-day.html</id>
            <content type="html"><![CDATA[<p><a href="http://atnd.org/events/45096">FuelPHP Advent Calendar 2013</a> 1日目の参加記事です。</p>

<p>初めましての方もご存知の方も、よろしくお願いします。</p>

<p><a href="https://twitter.com/sharkpp">@sharkpp</a>です。</p>

<p>さて、昨年の12月1日はアドベント(待降節)ではありませんでしたが、安心してください、今年は12月1日からアドベントは始まります。</p>

<p>とりあえず、初日なので軽い内容でいきたいと思います。</p>

<p>内容は、FuelPHP を phar(PHP Archive) で１ファイルにしてウェブサーバーで動かしてみよう、です。</p>

<p>子ネタをやりつつ phar の紹介も兼ねています。</p>

<p>環境としては、</p>

<ul>
<li>PHP 5.3 以上</li>
<li>FuelPHP 1.7</li>
<li>Apache on CentOS or Windows</li>
</ul>

<p>を想定しています。</p>

<h2 id="pharphp-archive%E3%81%A3%E3%81%A6%E3%81%94%E5%AD%98%E7%9F%A5%E3%81%A7%E3%81%99%E3%81%8B%EF%BC%9F">phar(PHP Archive)ってご存知ですか？</h2>

<p>まず、大前提。</p>

<p><a href="http://jp2.php.net/manual/ja/intro.phar.php">PHP: 導入 - Manual</a>によると、</p>

<blockquote>
  <p>phar 拡張モジュールは、PHP アプリケーション全体をひとつの "phar" (PHP Archive) ファイルにまとめてしまい、配布やインストールを容易にするためのものです。</p>
</blockquote>

<p>となっています。</p>

<p>実際に使われている例としては、</p>

<ul>
<li><a href="http://getcomposer.org/">composer.phar</a> パッケージ管理ツール</li>
<li><a href="https://github.com/fabpot/goutte">goutte.phar</a> スクレイピングライブラリ</li>
<li><a href="https://github.com/guzzle/guzzle">guzzle.phar</a> HTTPクライアントライブラリ</li>
<li><a href="http://pear2.php.net/PEAR2_Pyrus">pyrus.phar</a> PEAR2</li>
</ul>

<p>などがあります。</p>

<p>例として上げた中でも composer は FuelPHP を使っている方であれば</p>

<pre><code>$ php composer.phar update
</code></pre>

<p>と、このような形で触ったことがあると思います。</p>

<h2 id="fuelphp-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">FuelPHP をインストール</h2>

<p>Pharクラスの中でも、今回は <a href="http://jp2.php.net/manual/ja/phar.webphar.php">Phar::webPhar</a> を使います。</p>

<p>まずは、FuelPHPを適当なフォルダに配置します。</p>

<p>詳しい手順は<a href="http://fuelphp.jp/docs/1.7/">FuelPHP ドキュメント</a>に書かれているので参考にしてください。</p>

<p>ここでは、<code>~/fuelphp-1.7</code> に配置されるものとします。</p>

<pre><code>$ curl get.fuelphp.com/oil | sh
$ cd ~
$ oil create fuelphp-1.7
</code></pre>

<p>もしくは、</p>

<pre><code>$ wget http://fuelphp.com/files/download/25 -O fuelphp.zip
$ unzip fuelphp.zip
</code></pre>

<p>とすることで、git がインストールされていない場合は fuelphp.com からダウンロードして展開ができます。</p>

<p>次に</p>

<pre><code>$ cd fuelphp-1.7
$ php composer.phar self-update
$ php composer.phar update
</code></pre>

<p>として、composer自身のアップデートとパッケージを更新します。</p>

<p>これで、Apacheなどのウェブサーバー上に公開するとWelcome画面が表示されるはずです。</p>

<h2 id="fuelphp%E3%82%92phar%E3%81%A71%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%82%8B">FuelPHPをPharで1ファイルにまとめる</h2>

<p>まず、そのままでは1ファイルにまとめても動かないのでいくつかソースを変更する必要があります。</p>

<p>残念なことに core の中も変更する必要がありました。</p>

<p>インストール直後のページを表示できるようにするために変更するファイルは</p>

<ul>
<li><code>public/index.php</code></li>
<li><code>fuel/app/config/config.php</code></li>
<li><code>fuel/app/config/asset.php</code> ※ fuel/core/config/asset.php からコピー</li>
<li><code>fuel/core/bootstrap.php</code></li>
<li><code>fuel/core/classes/file/area.php</code></li>
</ul>

<p>の 5 個のファイルです。</p>

<p>実際のアプリケーションの場合は先に挙げたファイル以外にも変更が必要になると思います。</p>

<p>変更のポイントは、</p>

<ul>
<li>phar 内からの realpath が常に空文字で返ってくるのでダミー関数に置き換え</li>
<li>Windows であっても パスの区切りは <code>'/'</code> とする</li>
<li>パスに含まれる親ディレクトリへの移動などを削除し正規化</li>
<li>ログやキャッシュの保存先が .phar 外を示すようにする</li>
</ul>

<p>と、主に、ファイルパスに関する物が主となります。</p>

<p>まず、<code>public/index.php</code> の変更部分です。</p>

<p>パスを正規化する <code>canonicalizePath</code> 関数と <code>realpath</code> 関数のダミーとして <code>realpat_</code> 関数を定義しています。</p>

<pre><code> error_reporting(-1);
 ini_set('display_errors', 1);

 +function canonicalizePath($path) {
 +    $path = 0===strpos($path,'phar://')?'phar://'.preg_replace('!//!', '/', substr($path,7))
 +                                       :preg_replace('!//!', '/', $path);
 +    do {
 +        $tmp  = $path;
 +        $path = preg_replace('!/[^/]+/\.\./!', '/', $tmp);
 +    } while ($tmp != $path);
 +    return rtrim($path, '/');
 +}
 +
 +function realpat_($path) {
 +    return canonicalizePath(str_replace(array('/', '\\'), '/', $path));
 +}
</code></pre>

<p>あとは、<code>realpath</code> 関数の代わりに <code>realpat_</code> 関数を使うようにし、パスの区切りも <code>'/'</code> に変更しています。</p>

<pre><code>-define('DOCROOT', __DIR__.DIRECTORY_SEPARATOR);
+define('DOCROOT', realpat_(__DIR__.'/'));
</code></pre>

<p>　</p>

<pre><code>-define('APPPATH', realpath(__DIR__.'/../fuel/app/').DIRECTORY_SEPARATOR);
+define('APPPATH', realpat_(__DIR__.'/../fuel/app/').'/');
</code></pre>

<p>　</p>

<pre><code>-define('PKGPATH', realpath(__DIR__.'/../fuel/packages/').DIRECTORY_SEPARATOR);
+define('PKGPATH', realpat_(__DIR__.'/../fuel/packages/').'/');
</code></pre>

<p>　</p>

<pre><code>-define('COREPATH', realpath(__DIR__.'/../fuel/core/').DIRECTORY_SEPARATOR);
+define('COREPATH', realpat_(__DIR__.'/../fuel/core/').'/');
</code></pre>

<p><code>fuel/app/config/config.php</code> の変更部分です。 .phar 内には書き込めないので .phar と同じ場所の <code>writable</code> ディレクトリを示すように変更しています。</p>

<p><strong>保存先は公開ディレクトリ外を示すべきなので、さらに一つ上などに示すようにするのが本来は良いでしょう。</strong></p>

<pre><code>-    // 'cache_dir'       =&gt; APPPATH.'cache/',
+    'cache_dir'       =&gt; canonicalizePath(str_replace('phar://', '', APPPATH).'../../../writable/cache/'),
</code></pre>

<p>　</p>

<pre><code>-    // 'log_path'         =&gt; APPPATH.'logs/',
+    'log_path'         =&gt; canonicalizePath(str_replace('phar://', '', APPPATH).'../../../writable/logs/'),
</code></pre>

<p><code>fuel/app/config/asset.php</code> の変更部分です。 <code>fuel/core/config/asset.php</code> をコピーして使うのでそのファイルとの比較になります。 一部、三項演算を使っていますが phar でまとめない場合にもそのまま動くようにとの苦肉の策です。</p>

<pre><code>-    'paths' =&gt; array('assets/'),
+    'paths' =&gt; array(DOCROOT . 'assets/'),
</code></pre>

<p>　</p>

<pre><code>-    'url' =&gt; Config::get('base_url'),
+    'url' =&gt; Config::get('base_url').(0===strpos(__DIR__,'phar://')?'index.phar/':''),
</code></pre>

<p>　</p>

<pre><code>-    'add_mtime' =&gt; true,
+    'add_mtime' =&gt; false,
</code></pre>

<p><code>fuel/core/bootstrap.php</code> の変更部分です。 パスの区切りの変更と関数の置き換えです。</p>

<pre><code>-define('DS', DIRECTORY_SEPARATOR);
+define('DS', '/');

-defined('VENDORPATH') or define('VENDORPATH', realpath(COREPATH.'..'.DS.'vendor').DS);
+defined('VENDORPATH') or define('VENDORPATH', realpat_(COREPATH.'..'.DS.'vendor').DS);
</code></pre>

<p>最後、<code>fuel/core/classes/file/area.php</code> の変更部分です。</p>

<pre><code>         {
-            $this-&gt;basedir = realpath($this-&gt;basedir) ?: $this-&gt;basedir;
+            $this-&gt;basedir = realpat_($this-&gt;basedir) ?: $this-&gt;basedir;
         }
</code></pre>

<p>　</p>

<pre><code>         {
-            $pathinfo['dirname'] = realpath($pathinfo['dirname']);
+            $pathinfo['dirname'] = realpat_($pathinfo['dirname']);
         }
         else
         {
             // attempt to get the realpath(), otherwise just use path with any double dots taken out when basedir is set (for security)
-            $pathinfo['dirname'] = ( ! empty($this-&gt;basedir) ? realpath($this-&gt;basedir.DS.$pathinfo['dirname']) : realpath($pathinfo['dirname']) )
+            $pathinfo['dirname'] = ( ! empty($this-&gt;basedir) ? realpat_($this-&gt;basedir.DS.$pathinfo['dirname']) : realpat_($pathinfo['dirname']) )
                     ?: ( ! empty($this-&gt;basedir) ? $this-&gt;basedir.DS.str_replace('..', '', $pathinfo['dirname']) : $pathinfo['dirname']);
</code></pre>

<p>一つ一つ編集するのが大変であれば <a href="https://gist.github.com/sharkpp/7716098">Gist</a> に差分をアップしたので</p>

<pre><code>$ cd fuelphp-1.7
$ wget -q https://gist.github.com/sharkpp/7716098/raw -O - | patch -u -p0
</code></pre>

<p>とすることで変更を適用することができます。</p>

<p>次は、phar の生成スクリプトです。</p>

<pre><code>&lt;?php
/*
 * Copyright (c) 2013 sharkpp
 * This software is released under the MIT License.
 * http://opensource.org/licenses/mit-license.php
 */
// 確実に削除 
@unlink('index.phar');
// phar書庫作成のためクラスを生成 
$phar = new Phar(__DIR__ . '/index.phar', 0, 'index.phar');
// fuelphp17 ディレクトリ丸ごと固める 
$phar-&gt;buildFromDirectory(__DIR__ . '/fuelphp-1.7/');
// gzipで圧縮
//$phar-&gt;compressFiles(Phar::GZ); // ※ css などがうまく取り出せない
// 起動スタブを設定 
$phar-&gt;setStub(&lt;&lt;&lt;'EOD'
&lt;?php
    function phar_rewrites($path) {
        if (0 === strpos($path,'/assets/'))
            return '/public' . $path;     // assets だけはパスを変更 
        return '/public/index.php'.$path; // あとはすべてindexに渡す 
    }
    Phar::interceptFileFuncs();
    Phar::webPhar('index.phar', 'public/index.php', '', array(), 'phar_rewrites');
    __HALT_COMPILER(); ?&gt;
EOD
);
</code></pre>

<p>FuelPHP をインストールした fuelphp-1.7 ディレクトリの上にファイルを保存してください。</p>

<p>こちらも <a href="https://gist.github.com/sharkpp/7716423">Gist</a> にアップしてあるので、</p>

<pre><code>$ cd ~
$ wget -q https://gist.github.com/sharkpp/7716423/raw/mkphar.php
</code></pre>

<p>として、ローカルに保存できます。</p>

<p>準備ができたら</p>

<pre><code>$ php mkphar.php
</code></pre>

<p>と入力して、index.phar を作成すると、70MBぐらいのファイルが出来上がります。</p>

<p>ドキュメントや .git などが含まれているので巨大になってしまいました。</p>

<p><strong>ちなみに、Pharクラスでアーカイブを作成するには設定を変える必要があるかもしれません。</strong></p>

<p>具体的には、<code>php.ini</code> の <code>Phar</code> セクション内で <code>phar.readonly = Off</code> と設定されている必要があります。</p>

<h2 id="%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%A7%E7%A2%BA%E8%AA%8D">ブラウザで確認</h2>

<p>ここまでできたら index.phar をウェブサーバーの公開フォルダに置きましょう。</p>

<p>と、その前に、 AddType で .phar を php で実行できるように <code>.htaccess</code> を設置しましょう。</p>

<pre><code>Options +FollowSymLinks
DirectoryIndex index.phar
AddType application/x-httpd-php .phar

&lt;IfModule mod_rewrite.c&gt;
    RewriteEngine on
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    &lt;IfModule mod_fcgid.c&gt;
        RewriteRule ^(.*)$ index.phar?/$1 [QSA,L]
    &lt;/IfModule&gt;
    &lt;IfModule !mod_fcgid.c&gt;
        &lt;IfModule mod_php5.c&gt;
            RewriteRule ^(.*)$ index.phar/$1 [L]
        &lt;/IfModule&gt;
        &lt;IfModule !mod_php5.c&gt;
            RewriteRule ^(.*)$ index.phar?/$1 [QSA,L]
        &lt;/IfModule&gt;
    &lt;/IfModule&gt;
&lt;/IfModule&gt;
</code></pre>

<p>こちらも例によって <a href="https://gist.github.com/sharkpp/7718075">Gist</a> にアップしてあるので、</p>

<pre><code>$ wget -q https://gist.github.com/sharkpp/7718075/raw/.htaccess
</code></pre>

<p>で取得できます。</p>

<p>例えば、ローカルホストでウェブサーバーを動かしていてドキュメントルートに先の .htaccess と共に置いたのであれば、</p>

<pre><code>http://127.0.0.1/
</code></pre>

<p>にブラウザでアクセスすると Welcome 画面が表示されます。</p>

<pre><code>http://127.0.0.1/hello
</code></pre>

<p>にアクセスすると hello と表示されます。</p>

<pre><code>http://127.0.0.1/xxxx
</code></pre>

<p>エラーページも表示できます。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>お遊びのつもりで手を出してみたら、かなり時間をかけないとうまくいかなかったりで当てが外れてちょっとションボリ。</p>

<p>実際問題として core の修正が必要となるので実用性となると皆無だと思います。</p>

<p>ただ、１ファイルでウェブサーバーにアプリが公開できるのは、うまく作れば面白いことが出来るのではないかとの期待が持てそうな機能でした。</p>

<p>明日は <a href="https://twitter.com/kenji_s">@kenji_s</a> さんの「<a href="http://blog.a-way-out.net/blog/2013/12/02/quick-mastering-fuelphp/">FuelPHPの開発環境を20分で構築する（Vagrant編）</a>」です。お楽しみに！</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[FuelPHP 勉強会 東海 vol.5 に参加しました]]></title>
            <link href="http://www.sharkpp.net/blog/2013/10/26/fuelphp-workshop-in-tokai-vol-5.html"/>
            <updated>2013-10-26T20:52:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2013/10/26/fuelphp-workshop-in-tokai-vol-5.html</id>
            <content type="html"><![CDATA[<p><a href="http://connpass.com/event/3573/">FuelPHP 勉強会 東海 vol.5</a>に行ってきました。</p>

<p>久しぶりの FuelPHP の勉強会です。 会場は先週と同じニューキャストさんのセミナールームでした。</p>

<h2 id="%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B%E3%82%BF%E3%82%A4%E3%83%A0">自己紹介タイム</h2>

<p>自己紹介をぐるっと時計回りで、、、</p>

<h2 id="%E5%86%85%E5%AE%B9">内容</h2>

<h3 id="fuelphp-2.0-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">FuelPHP 2.0 について</h3>

<p><a href="https://twitter.com/ounziw">@ounziw</a></p>

<p>2.0 へ向けての変更点を <a href="http://fuelphp.com/blogs/2013/08/2-0-an-update">FuelPHP ? 2.0 - An Update | Blog</a> の内容をもとに確認</p>

<ul>
<li>php 5.4 以降が必須に</li>
<li>フォルダ構成の変更</li>
<li>PSR-2 は非採用</li>
<li>module が Application という新しい仕組みになる</li>
<li>package が Composer から取得するようになる</li>
<li>ViewModel → Presenter</li>
<li>oil が Application として実装される</li>
<li><a href="http://fuelphp.com/">Version 1.7 is the final version 1 release.</a> (訳:バージョン 1.7 が最後のバージョン 1 のリリースです)</li>
<li>2014/4 頃をリリース目標</li>
</ul>

<p>memo: LdapAuthも2.0対応やormauth風などに対応しないと、、、次は Ldapauth2 とか？</p>

<h3 id="1.7-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%AA%E3%81%A9">1.7 についてなど</h3>

<p><a href="https://twitter.com/ts_asano">@ts_asano</a></p>

<p><a href="https://groups.google.com/forum/#!topic/fuelphp_jp/APUGlBAKwq0">1.7 の viewmodel の挙動について - Google グループ</a> で報告されている問題。 <a href="https://github.com/fuel/fuel/commit/e6237ba66444818adb2434c50b5951502baa1696">render the response body before attempting to process it; closes #1546 - e6237ba - fuel/fuel</a> で直っている模様。 でも、直し方がなんか腑に落ちない、、ので実は直っていない？</p>

<p><code>Controller</code> クラスに <code>action_index()</code> 以外に <code>get_index()</code> と <code>post_index()</code> が 1.3 から増えてた！</p>

<p>バージョナップしたらドキュメントを読み直すと新たな発見がある、、、かも？</p>

<h3 id="%E7%BF%BB%E8%A8%B3%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">翻訳について</h3>

<ul>
<li>どうやったら翻訳する人を増やせるか？</li>
<li>バージョンアップで増えた機能が使えそうな機能だったりしても、ほとんど未翻訳</li>
</ul>

<p>進んではいるけど全ドキュメントが翻訳完了しないのは翻訳する人が余集まらないからかなー？</p>

<h3 id="%E3%81%9D%E3%81%AE%E4%BB%96">その他</h3>

<ul>
<li>盛り上がりがいまいち、、、参加者がなかなか集まらない、、、東京は割と集まる</li>
</ul>

<p>まったり聞きながら個人的にネタとなることをやってたけど、、、駄目だった(失敗した)、、、もうちとがんばる必要がありそう。</p>

<p>同じく、翻訳も少し、、、一文をさくっと直すには github のページから編集するのが簡単だなー</p>

<p>memo:</p>

<ul>
<li>個人的に OrmAuth とか使ってみて人に話せる内容を増やしたい( <a href="https://twitter.com/ts_asano">@ts_asano</a> さんに聞かれたけど余使っていなかったので詳しくはなせなかった)。</li>
<li><a href="http://fuelphp.com/docs/packages/orm/model/nestedset.html">NestedSets</a> とかも使ってみたい＆ドキュメントも未翻訳なので翻訳してみたい。</li>
</ul>

<h2 id="%E6%87%87%E8%A6%AA%E4%BC%9A%E3%81%A8%E3%81%84%E3%81%86%E5%90%8D%E3%81%AE%E9%A3%B2%E3%81%BF%E4%BC%9A">懇親会という名の飲み会</h2>

<p>手羽先もぐもぐでした、手羽先オイチー(>_&lt;)</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Archelon をGitHubに公開しました]]></title>
            <link href="http://www.sharkpp.net/blog/2013/09/30/archelon-publish-to-github.html"/>
            <updated>2013-09-30T00:14:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2013/09/30/archelon-publish-to-github.html</id>
            <content type="html"><![CDATA[<p>ここ最近、久々にウェブアプリを作ってました。 相変わらず作業時間が厳しかったですがまあそれなりに動くようになってきたのでとりあえずgithubに公開しました。</p>

<p>動かなかったらごめんなさいorz</p>

<ul>
<li><a href="https://github.com/sharkpp/Archelon">sharkpp/Archelon</a></li>
<li><a href="https://github.com/sharkpp/ArchelonConnectorExample">sharkpp/ArchelonConnectorExample</a></li>
</ul>

<p>とりあえず、マスコット的な何かです。</p>

<p><img src="/images/2013_0929_archelon.gif" alt="マスコット的な何か" /></p>

<p>Archelon は アカウントアグリゲーションサービスの一種です。 REST APIなどなどウェブAPIを用意していないウェブアプリケーションにAPIを追加するシステムです。</p>

<p>たとえば、あるグループウエアがあるとして REST API などがまったく用意されていない場合、今日の予定一覧をメールで出したい、としてもログイン処理からスクレイピングから実装をしないといけなくて大変じゃないでしょうか？</p>

<p>これを、このアプリケーションは簡単におこなうことができます(コネクタがある場合に限っては、ではありますが)。</p>

<p>とりあえずは、プライベートネットワーク(社内LAN)で動かすことを想定しています。</p>

<p>同じネットワーク内で動作しているグループウエアなどのウェブアプリに対して Archelon に登録済みのアカウント情報でログイン、各種情報(コネクタの実装しだい)の取得を行うことができます。</p>

<p>取得した情報は、REST API 経由で受け取ることができるので、別のアプリで活用することができます。</p>

<p>ということで、実は、「コネクタ」と言う一種のプラグイン的なものがないと何もできません。</p>

<p>セットアップ画面も実装してあるのでデータベースの設定やマイグレーションなどはブラウザからできます。 これは、FUelPHP製のアプリでは珍しい部類なのではないかなと。</p>

<p><a href="/images/2013_0929_archelon_setup.jpg"><img src="/images/2013_0929_archelon_setup.png" alt="Archelon インストール画面" /></a></p>

<p>インストールが成功するとこの画面になります。</p>

<p><a href="/images/2013_0929_archelon_welcom.jpg"><img src="/images/2013_0929_archelon_welcom.png" alt="Archelon Welcom画面" /></a></p>

<p>Archelon 自体は、</p>

<ul>
<li>「コネクタ」の管理</li>
<li>登録済みのアカウントの管理</li>
<li>REST API のドキュメントの表示</li>
</ul>

<p>を行います。</p>

<p>ダッシュボード上には登録されているアカウントの一覧が並びます。 そして、APIの使い方やAPI KEYの取得などができます。</p>

<p><a href="/images/2013_0929_archelon_dashboard.jpg"><img src="/images/2013_0929_archelon_dashboard.png" alt="Archelon ダッシュボード画面" /></a></p>

<p>「REST API のドキュメントの表示」は、こんな感じに表示されます。</p>

<p><a href="/images/2013_0929_archelon_api_docs1.jpg"><img src="/images/2013_0929_archelon_api_docs1.png" alt="Archelon APIドキュメント画面1" /></a> <a href="/images/2013_0929_archelon_api_docs2.jpg"><img src="/images/2013_0929_archelon_api_docs2.png" alt="Archelon APIドキュメント画面2" /></a></p>

<p>そして「コネクタ」は、</p>

<ul>
<li>外部のウェブサービスのログインなどに必要な情報の管理</li>
<li>REST APIの提供</li>
</ul>

<p>を行います。</p>

<p>「REST APIの提供」は、JSONやXMLで返答することもできます。 ※これは実装しだいですが、FuelPHP の <code>Controller_Rest</code> で簡単に実装できます。</p>

<p><a href="/images/2013_0929_archelon_api_result_json.jpg"><img src="/images/2013_0929_archelon_api_result_json.png" alt="Archelon API結果JSON" /></a> <a href="/images/2013_0929_archelon_api_result_xml.jpg"><img src="/images/2013_0929_archelon_api_result_xml.png" alt="Archelon API結果XML" /></a></p>

<p>まあ、こんな感じで、「コネクタ」なければ何もできない感じですので面白い使い方があればこそっと教えてほしいです。</p>

<p>今のところ、数種類のアプリのコネクタは実装ないし実装予定ではあるのですが、その他は特に思いついていないので。</p>

<hr />

<p>10月01日：少し文章を変更しました。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[初めてのForkとFuelPHP 1.6 翻訳ウィーク参加(追記あり)]]></title>
            <link href="http://www.sharkpp.net/blog/2013/06/01/first-github-fork-and-fuelphp-docs-jp.html"/>
            <updated>2013-06-01T00:24:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2013/06/01/first-github-fork-and-fuelphp-docs-jp.html</id>
            <content type="html"><![CDATA[<p><div class="alert alert-danger alert-dismissible" role="alert">
  <div class="pull-left"><i class="fa fa-warning fa-2x"></i></div>
  <dl style="margin-bottom: 0; margin-left: 35px;">
    <dt>2015-11-03 追記</dt>
    <dd>不適切な内容が書かれているため参考程度に止めてください。
<a href="/blog/2015/11/03/git-memo-for-fuel-docs-trans.html">FuelPHP ドキュメント翻訳のための git メモ</a> で新たにメモされた内容をご覧ください。</dd>
  </dl>
</div>
</p>

<p>FuelPHP 1.6 が公開されたのを記念？してまた <a href="http://atnd.org/events/39849">FuelPHP 1.6 翻訳ウィーク : ATND</a> が行なわれるとのことなので参加してみました。</p>

<p>とりあえず、<a href="http://pneskin2.nekoget.com/press/?p=1044">FuelPHP ドキュメント翻訳へのお誘い</a>とか<a href="http://d.hatena.ne.jp/Kenji_s/20130117/edit_fuel_docs">FuelPHP の日本語ドキュメントを 5分で修正する</a>を参考に自分はgithubのクライアントを基本に翻訳してみることにしました。</p>

<p>さあ、とりあえず翻訳できたし、とりあえずコミットしてみるかってんでコミットしてみたらここで事件発生！ なんか全行削除されて全行追加された感じになっていました。</p>

<p><a href="/images/2013_0601_line_end_fail.png"><img src="/images/2013_0601_line_end_fail_s.png" alt="全行変更あり" /></a></p>

<p>※そのままgithubにまでコミットしてしまい大変になったのはまた別の話。</p>

<p>で、ピンときて元を確認してみると案の定、改行コードがCrLfではなくLfだった。</p>

<p><a href="/images/2013_0601_github_client_setting.png"><img src="/images/2013_0601_github_client_setting_s.png" alt="githubクライアント設定" /></a></p>

<p>設定を確認すると .gitattributes で指定できるっぽいけど、、、余計なファイルを入れたくないなーと思って探してみたらどうも git コマンドで設定ができるっぽい。</p>

<p>見つけたページ <a href="https://help.github.com/articles/dealing-with-line-endings">Dealing with line endings - GitHub Help</a> を参考に Git Shell 起動して</p>

<pre><code>git config --global core.autocrlf false
</code></pre>

<p>としてやると改行コードが勝手に変わるのが直った。</p>

<p>デフォルトが改行コードを変更するようになってるなんてヒドイorz</p>

<blockquote class="twitter-tweet" lang="ja"><p>初めてのPR <a href="https://t.co/glnaIRBvE2" title="https://github.com/NEKOGET/FuelPHP_docs_jp/pull/280">github.com/NEKOGET/FuelPH…</a> <a href="http://t.co/HFy9inhvgx" title="http://atnd.org/events/39849">atnd.org/events/39849</a> <a href="https://twitter.com/search/%23fueldocsja">#fueldocsja</a></p>&mdash; さめたすたす?(^o^)／さん (@sharkpp) <a href="https://twitter.com/sharkpp/status/339041311573286913">2013年5月27日</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>で、いろいろ翻訳して Pull Request をしてみてさあマージされたと思って、、、あれ？更新を取り込むにはどうしたら？と思ったので試行錯誤をしてフォーク元から変更を取り込みました。</p>

<p>試行錯誤した後で<a href="http://d.hatena.ne.jp/hnw/20110528">GitHubへpull requestする際のベストプラクティス - hnwの日記</a>などを見つけてorz状態になったけどとりあえず後で考えるようにした。</p>

<p>なので以下に書かれているのは良くない方法ではあると思うので参考にしてはいけないのです。</p>

<p>とりあえず、githubクライアントでcloneするとう upstream って名前はあるけどURLが指定されていないようです。</p>

<pre><code>$ git remote -v
origin  https://github.com/sharkpp/FuelPHP_docs_jp.git (fetch)
origin  https://github.com/sharkpp/FuelPHP_docs_jp.git (push)
upstream
</code></pre>

<p>で、URLを指定します。</p>

<pre><code>$ git remote set-url upstream https://github.com/NEKOGET/FuelPHP_docs_jp
</code></pre>

<p>ここからは行儀が良くないやり方。 Pull Request で余計な変更が含まれたりしてしまいます。</p>

<p>フォーク元から変更を取り込みます。 --rebase を付けるのがポイントのようです。</p>

<pre><code>$ git pull --rebase upstream 1.6/develop_japanese
From https://github.com/NEKOGET/FuelPHP_docs_jp
 * branch            1.6/develop_japanese -&gt; FETCH_HEAD
First, rewinding head to replay your work on top of it...
</code></pre>

<p>そして、変更をプッシュ。</p>

<pre><code>$ git push -f origin 1.6/develop_japanese
Counting objects: 222, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (140/140), done.
Writing objects: 100% (185/185), 27.32 KiB, done.
Total 185 (delta 127), reused 77 (delta 45)
To https://github.com/sharkpp/FuelPHP_docs_jp.git
 + d1c090c...214104c 1.6/develop_japanese -&gt; 1.6/develop_japanese (forced update)
</code></pre>

<p>あとは、思うように翻訳して、githubクライアント上で commit ＆ sync 。 そして、github上で Pull Request です。</p>

<p>git fetch とか git merge とかやってみたけどひどいことになりながら↑のやり方にたどり着きました。</p>

<p>まあ、もっとましなやり方を覚えないと、ですが、、、、順番になれていきたいです。</p>

<p>参考：</p>

<ul>
<li><a href="https://help.github.com/articles/syncing-a-fork">Syncing a fork - GitHub Help</a></li>
<li><a href="http://d.hatena.ne.jp/wats/20100915/1284478558">gitのoriginのurlを変更する。 - 僕の今さら日記</a></li>
<li><a href="http://processwire.com/talk/topic/1565-github-for-windows/">Github for Windows - Tutorials - ProcessWire Support Forums</a></li>
</ul>
]]></content>
        </entry>
    </feed>