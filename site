#!/bin/bash

exec_usage () {
  echo 'usage: site <command> [option]'
  echo 'commands are:'
  echo '  init     initialize site'
  echo '  clean    cleanup site, remove ignore files'
  echo '  generate generate site'
  echo '  test     launch web server [ http://localhost:8000/ ] for test site'
  echo '  spider   check broken link'
}

exec_init () {
  # install Sculpin
  if [ ! -e "$(dirname $0)/sculpin.phar" ] ; then
    php -r "readfile('https://download.sculpin.io/sculpin.phar');" > sculpin.phar
  fi
  php sculpin.phar self-update
  php sculpin.phar install
  # install Composer
  if [ ! -e "$(dirname $0)/composer.phar" ] ; then
    php -r "readfile('https://getcomposer.org/installer');" | php
  fi
  php composer.phar self-update
  php composer.phar install
  # install BowerPHP
  .vendor/bin/bowerphp install
}

exec_clean () {
  rm -rf .vendor .sculpin *.lock *.phar
  rm -rf output_* app/cache app/logs
  find source/assets -maxdepth 1 -mindepth 1 -not -name js -and -not -name css -exec rm -rf {} \;
}

exec_generate () {
  if [ ! -e "$(dirname $0)/sculpin.phar" ] ; then
    exec_init
  fi
  rm -rf output_dev/*
  php sculpin.phar generate --env=prod
  if [ $? -ne 0 ]; then echo "Could not generate the site"; exit 1; fi
}

exec_test () {
  if [ ! -e "$(dirname $0)/sculpin.phar" ] ; then
    exec_init
  fi
  rm -rf output_dev/*
  php sculpin.phar generate --watch --server
}

exec_spider () {
  # wget install check
  wget --help > /dev/null
  if [ $? -eq 127 ] ; then
    echo wget command not installed
    exit
  fi
  if [ ! -e "$(dirname $0)/sculpin.phar" ] ; then
    exec_init
  fi
  RUNNING=$(ps ax|grep "php sculpin.phar[ ]"|wc -l|sed -e "s/ //g")
  if [ 0 -eq $RUNNING ] ; then
    rm -rf output_dev/*
    # launch server and waiting for generate
    while read f; do
      if [ "" != "$(echo "$f" | grep "server is running at")" ] ; then break ; fi
    done < <(php sculpin.phar generate --watch --server &)
  fi
  wget --spider --no-directories --recursive --page-requisites --level=0 --no-verbose http://localhost:8000
  if [ 0 -eq $RUNNING ] ; then
    killall php
  fi
}

case "$1" in
  "init"     ) exec_init ;;
  "i"        ) exec_init ;;
  "clean"    ) exec_clean ;;
  "generate" ) exec_generate ;;
  "g"        ) exec_generate ;;
  "test"     ) exec_test ;;
  "t"        ) exec_test ;;
  "spider"   ) exec_spider ;;
  *          ) exec_usage ;;
esac
