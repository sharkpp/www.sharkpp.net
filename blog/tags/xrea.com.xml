<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/blog/tags/xrea.com.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2021-01-24T11:42:09+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Sculpin でホムペを再構築したときのメモ]]></title>
            <link href="http://www.sharkpp.net/blog/2015/06/28/site-reboot-by-sculpin.html"/>
            <updated>2015-06-28T18:00:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/06/28/site-reboot-by-sculpin.html</id>
            <content type="html"><![CDATA[<p><a href="https://sculpin.io/">Sculpin</a> でホムペを再構築してからだいたい一ヶ月ぐらい経ちました。</p>

<p>元のページは、 Markdown で作ったり はてな記法で書いてたり色々あったので全ページをクロールしてダウンロードした .html から .md への変換スクリプトを書きページを再構成しました。</p>

<p>手順としては</p>

<ol>
<li>全ページをクロール</li>
<li>.html をスクリプトで .md に変換＆リンクを再構成(実際の変換スクリプトは <a href="https://github.com/sharkpp/www.sharkpp.net/blob/master/convert">www.sharkpp.net/convert/ - GitHub</a> を参照)</li>
<li>Sculpin で構築しやすいように再構成</li>
<li>Github へ push したら自動で更新する仕組みを実装( <a href="/blog/2015/05/31/how-to-build-libxml2-on-xrea-com-for-sculpin.html">Sculpin を実行するために xrea.com 上で libxml2 を構築する方法</a> や <a href="https://github.com/sharkpp/www.sharkpp.net/blob/master/site">www.sharkpp.net/site - GitHub</a> を参照)</li>
<li>公開</li>
</ol>

<p>という感じです。</p>

<p>いろいろ自分好みなページを作る中で Sculpin の挙動を調べたメモを記録として残しておきます。</p>

<h2 id="%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3">コマンドライン</h2>

<h3 id="%E6%A7%8B%E7%AF%89">構築</h3>

<pre><code class="bash">$ php sculpin.phar generate
</code></pre>

<p>または</p>

<pre><code class="bash">$ php sculpin.phar generate --env=prod
</code></pre>

<h3 id="%E6%A7%8B%E7%AF%89%EF%BC%86%E3%83%86%E3%82%B9%E3%83%88%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%B5%B7%E5%8B%95">構築＆テストサーバー起動</h3>

<pre><code class="bash">$ php sculpin.phar generate --watch --server
</code></pre>

<h2 id="sculpin-%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E5%A4%89%E6%95%B0">Sculpin で使用できる変数</h2>

<h3 id="%E3%83%9A%E3%83%BC%E3%82%B8%E5%86%85%E3%81%A7%E4%BD%BF%E7%94%A8%E3%81%A7%E3%81%8D%E3%82%8B%E5%A4%89%E6%95%B0">ページ内で使用できる変数</h3>

<table>
<thead>
<tr>
  <th>変数名</th>
  <th>概要</th>
</tr>
</thead>
<tbody>
<tr>
  <td>site</td>
  <td><code>sculpin_site.yml</code> の値</td>
</tr>
<tr>
  <td>page</td>
  <td>ページ自体</td>
</tr>
<tr>
  <td>formatter</td>
  <td>テンプレートエンジン名( <code>twig</code> など)</td>
</tr>
<tr>
  <td>converters</td>
  <td>？</td>
</tr>
<tr>
  <td>relative_root_url</td>
  <td>ページ自体から見たルートへの相対パス</td>
</tr>
<tr>
  <td>data</td>
  <td><code>Frontmatter</code> (各ページ先頭での指示) で宣言されたコンテンツ</td>
</tr>
<tr>
  <td>layout</td>
  <td>レイアウト名</td>
</tr>
</tbody>
</table>

<h3 id="site-%E5%A4%89%E6%95%B0">site 変数</h3>

<p><code>app/config/sculpin_site.yml</code> で指定した値が設定されます。</p>

<table>
<thead>
<tr>
  <th>キー</th>
  <th>概要</th>
</tr>
</thead>
<tbody>
<tr>
  <td>.posts</td>
  <td><code>use: ["posts"]</code></td>
</tr>
<tr>
  <td>.subtitle</td>
  <td><code>app/config/sculpin_site.yml</code> で指定した値</td>
</tr>
<tr>
  <td>.url</td>
  <td>サイトのURL。引数 <code>--url</code> で指定した値。</td>
</tr>
<tr>
  <td>.author</td>
  <td><code>app/config/sculpin_site.yml</code> で指定した値</td>
</tr>
<tr>
  <td>.env</td>
  <td>引数 <code>--env</code> で指定した値。<code>dev</code> など</td>
</tr>
<tr>
  <td>.calculated_date</td>
  <td>ページの生成日時</td>
</tr>
</tbody>
</table>

<h3 id="page-%E5%A4%89%E6%95%B0">page 変数</h3>

<p>ページ自体の情報を参照できる変数。</p>

<pre><code class="yaml">---
title: "Sculpin でホムペを再構築"
date: 2015-06-28 18:00
tags: [雑記,php,xrea.com,Sculpin]
categories: [ブログ]
user_data: [hoge,fuga]

---

</code></pre>

<p>の <code>user_data</code> の用な感じで自由に値を指定することも出来ます。</p>

<p><code>post.data</code> と <code>data</code> は同じ内容を参照しているようです。</p>

<h3 id="data-%E5%A4%89%E6%95%B0">data 変数</h3>

<p><code>Frontmatter</code> (各ページ先頭での指示) で <code>use: XXX</code> として宣言されたコンテンツが読み込まれます。</p>

<h2 id="tips%E7%9A%84%E3%81%AA%E3%82%81%E3%82%82">Tips的なめも</h2>

<h3 id="%E3%83%96%E3%83%AD%E3%82%B0%E3%83%9A%E3%83%BC%E3%82%B8%E6%84%8F%E5%A4%96%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B%E5%A4%89%E6%95%B0%E3%82%84%E6%96%B9%E6%B3%95%E3%81%AF%E7%84%A1%E3%81%84">ブログページ意外を参照する変数や方法は無い</h3>

<p>Sculpin 自体には <code>SculpinPostsBundle</code> から生成される <code>blogs/YYYY/MM/DD/XXXX</code> を参照するような感じで、ブログページ以外の単体ページを参照する仕組みは標準ではなさそうです。
ただ、拡張として内部の情報を参照する形で作れば出来そうな感じではあるようです。</p>

<h3 id=".htaccess-%E8%87%AA%E4%BD%93%E3%82%92%E3%82%B3%E3%83%94%E3%83%BC%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%AF%E5%87%BA%E6%9D%A5%E3%81%AA%E3%81%84">.htaccess 自体をコピーすることは出来ない</h3>

<p>あれっと思いましたが、
<a href="https://github.com/sculpin/sculpin/issues/121">Is it expected behavior that .htaccess file is not carried over from source dir to destination? - Issue #121 - sculpin/sculpin</a> を見ると <code>.htaccess</code> 自体をページ生成時にコピーすることは出来ない様です。
が、ちょっと考えると <code>htaccess.twig</code> というファイルを作り</p>

<pre><code>---
permalink: .htaccess
---
# hoge fuga
</code></pre>

<p>とすればいいようです。</p>

<h3 id="%E8%A8%98%E4%BA%8B%E3%81%B8%E3%81%AE%E3%83%AA%E3%83%B3%E3%82%AF%E3%82%92%E5%BC%B5%E3%82%8B%E3%81%AB%E3%81%AF%E3%83%A1%E3%82%BF%E6%83%85%E5%A0%B1%E3%81%8C%E5%BF%85%E8%A6%81">記事へのリンクを張るにはメタ情報が必要</h3>

<p>ヘッダとして</p>

<pre><code class="markdown"># Sculpin でホムペを再構築
</code></pre>

<p>の様にしても記事へのリンクが張られなかった。
タグ情報とかも結局入れるのでこのような形にする</p>

<pre><code class="markdown">---
title: "Sculpin でホムペを再構築"

---
</code></pre>

<h3 id="%E3%82%BF%E3%82%A4%E3%83%88%E3%83%AB%E3%81%AF%E3%83%80%E3%83%96%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A7%E5%9B%B2%E3%81%86%E3%81%B9%E3%81%97">タイトルはダブルコーテーションで囲うべし</h3>

<p>タイトルの頭に記号が含まれると</p>

<pre><code class="bash">$ php sculpin.phar generate --watch --server
     ! FileSource:FilesystemDataSource:.../source:_posts/2013-01-24-user-jp-follow-up.md Reference "-user.jp(?ユーザのためのハブサイト)のその後を追跡調査" does not exist at line 0. !
    Detected new or updated files
    Generating: 100% (215 sources / 0.04 seconds)
               :
</code></pre>

<p>の様に処理できない場合がある模様。
なので、ダブルコーテーションで囲うことでこの問題を回避出来る。</p>

<h3 id="%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%A7%E5%85%A8%E3%81%A6%E3%81%AE%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AB%E6%8B%A1%E5%BC%B5%E5%AD%90%E3%82%92%E4%BB%98%E3%81%91%E3%82%8B%E3%81%AB%E3%81%AF%EF%BC%9F">デフォルトで全てのページに拡張子を付けるには？</h3>

<p>設定を下記のようにする。</p>

<pre><code class="yaml"># app/config/sculpin_kernel.yml
sculpin:
    permalink: :basename.html

</code></pre>

<p>ただし、ページネーションやページ内に埋め込まれているリンクは別個修正する必要がある。</p>

<h3 id="twig-extensions-%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95">Twig Extensions を使う方法</h3>

<p><a href="http://twig.sensiolabs.org/doc/extensions/text.html">truncate</a> などを使用するために必要な <a href="http://twig.sensiolabs.org/doc/extensions/index.html">Twig Extensions</a> は <code>sculpin.phar</code> 自体には組み込まれていますが、デフォルトでは無効となっていてそのままでは利用できないようです。</p>

<p>利用するには <code>app/config/sculpin_services.yml</code> を作り設定を行う必要があります。</p>

<p><code>sculpin_services.yml</code> の利用方法は <a href="https://sculpin.io/documentation/bundles/SculpinPostsBundle/">SculpinPostsBundle — Sculpin — PHP Static Site Generator</a> あたりに書いてありますが、残念ながらドキュメントからのリンクが張られていないようです。</p>

<p>また、残念なことに <code>sculpin_services_{ENV}.yml</code> の用な感じで環境ごとに拡張の有効/無効を切り替えて使用することは出来ないようです。</p>

<pre><code class="yaml"># app/config/sculpin_services.yml
services:
    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }
</code></pre>

<p>と、このようなファイルを作ることで</p>

<pre><code class="html">&lt;div&gt;{{ post.contents | truncate }}&lt;/div&gt;
</code></pre>

<p>このように使用することが可能になります。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://sculpin.io/documentation/">Documentation — Sculpin — PHP Static Site Generator</a></li>
<li><a href="http://blog.a-way-out.net/blog/2013/10/11/how-to-use-sculpin/">PHPで静的サイトを簡単に作成できるSculpin — A Day in Serenity (Reloaded) — PHP, FuelPHP, Linux or something</a></li>
<li><a href="https://github.com/dragonmantank/solarized-sculpin">dragonmantank/solarized-sculpin</a></li>
<li><a href="https://github.com/GhislainPhu/ghislainphu.fr/blob/29ff7d704dab9df39d586b7781c47955019c0864/app/config/sculpin_kernel.yml">ghislainphu.fr/sculpin_kernel.yml at 29ff7d704dab9df39d586b7781c47955019c0864 - GhislainPhu/ghislainphu.fr</a></li>
<li><a href="http://twig.sensiolabs.org/doc/filters/index.html">Filters - Documentation - Twig - The flexible, fast, and secure PHP template engine</a></li>
<li><a href="http://akasingo.com/483">Twig: 連想配列の連結</a></li>
<li><a href="https://adamcod.es/2014/02/07/getting-started-with-sculpin.html">Getting Started With Sculpin - adamcod.es</a></li>
<li><a href="https://github.com/andrewshell/blog.andrewshell.org">andrewshell/blog.andrewshell.org</a></li>
<li><a href="https://sculpin.io/documentation/bundles/SculpinPostsBundle/">SculpinPostsBundle — Sculpin — PHP Static Site Generator</a></li>
<li><a href="https://github.com/sculpin/sculpin/issues/121">Is it expected behavior that .htaccess file is not carried over from source dir to destination? - Issue #121 - sculpin/sculpin</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Sculpin を実行するために xrea.com 上で libxml2 を構築する方法]]></title>
            <link href="http://www.sharkpp.net/blog/2015/05/31/how-to-build-libxml2-on-xrea-com-for-sculpin.html"/>
            <updated>2015-05-31T21:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/05/31/how-to-build-libxml2-on-xrea-com-for-sculpin.html</id>
            <content type="html"><![CDATA[<p>Sculpin を xrea.com で動かそうとしたら、</p>

<pre><code class="bash"># php55cli sculpin.phar self-update

  [Symfony\Component\DependencyInjection\Exception\InvalidArgumentException]
  Unable to parse file "phar:///virtual/XXXXXX/sculpin.phar/src/Sculpin/Bundle/
  StandaloneBundle/DependencyInjection/../Resources/config/services.xml".

  [InvalidArgumentException]
  [ERROR 3070] complex type 'container': The content model is not determinist.
   (in file:////tmp/sf2aedR4G - line 20, column 0)
</code></pre>

<p>って言われた。</p>

<p>で、調べてみると <code>libxml</code> のバージョンによる問題っぽい感じ。</p>

<pre><code class="bash"># ls -l /usr/lib/libxml*
lrwxrwxrwx  1 root root      17 2006-07-24 11:38 /usr/lib/libxml2.so.2 -&gt; libxml2.so.2.6.20
-rwxr-xr-x  1 root root 1223256 2005-09-10 01:31 /usr/lib/libxml2.so.2.6.20
</code></pre>

<p>なので <code>libxml</code> をビルドしてみることにした。</p>

<p>s152.xrea.com サーバーで作業したので他のサーバーだとスペックが違うかもですが失敗も含め作業をメモしています。</p>

<p>作業記録を兼ね失敗したことなども含め書いてあるので色々長いため、結論だけ知りたい場合は <a href="/blog/2015/05/31/how-to-build-libxml2-on-xrea-com-for-sculpin.html#%E3%81%BE%E3%81%A8%E3%82%81">まとめ</a> まですっ飛ばすことをお勧めします。</p>

<h2 id="libxml-%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%EF%BC%86%E3%83%93%E3%83%AB%E3%83%89%E2%86%92%E5%A4%B1%E6%95%97">libxml をダウンロード＆ビルド→失敗</h2>

<p>とりあえず <code>libxml</code> を <a href="https://git.gnome.org/browse/libxml2/">libxml2 - XML parser and markup toolkit</a> からダウンロードして解凍。</p>

<pre><code class="bash"># pwd
~
# mkdir build
# cd build
# curl -kLO https://git.gnome.org/browse/libxml2/snapshot/libxml2-2.9.2.tar.xz
# tar xf libxml2-2.9.2.tar.xz
# cd libxml2-2.9.2
</code></pre>

<p><code>configure</code> が無いので <code>automake</code> で <code>configure</code> を作ってみる、、、がうまく行かなかった。</p>

<pre><code class="bash"># pwd
~/build/libxml2-2.9.2
# ls -l configure.ac
-rw-r--r--  1 XXXXXX XXXXXX 44763 2014-10-16 16:40 configure.ac
# aclocal
/usr/share/aclocal/progsreiserfs.m4:13: warning: underquoted definition of AC_CHECK_LIBREISERFS
  run info '(automake)Extending aclocal'
  or see http://sources.redhat.com/automake/automake.html#Extending-aclocal
/usr/local/share/aclocal/libmcrypt.m4:17: warning: underquoted definition of AM_PATH_LIBMCRYPT
configure.ac:2: error: Autoconf version 2.63 or higher is required
configure.ac:2: the top level
autom4te: /usr/bin/m4 failed with exit status: 63
aclocal: autom4te failed with exit status: 63
</code></pre>

<p><a href="https://bugs.archlinux.org/task/20172#comments">FS#20172 : [progsreiserfs] underquoted definition of AC_CHECK_LIBREISERFS</a> を見てファイルをコピーし、修正してみるも</p>

<pre><code class="bash"># pwd
~/build/libxml2-2.9.2
# cp -pr /usr/share/aclocal/ ../aclocal
# vi ../aclocal/progsreiserfs.m4
# diff /usr/share/aclocal/progsreiserfs.m4 ../aclocal/progsreiserfs.m4
13c13
&lt; AC_DEFUN(AC_CHECK_LIBREISERFS,
---
&gt; AC_DEFUN([AC_CHECK_LIBREISERFS],
# aclocal --acdir=../aclocal
/usr/local/share/aclocal/libmcrypt.m4:17: warning: underquoted definition of AM_PATH_LIBMCRYPT
  run info '(automake)Extending aclocal'
  or see http://sources.redhat.com/automake/automake.html#Extending-aclocal
aclocal:configure.ac:52: warning: macro `AM_INIT_AUTOMAKE' not found in library
aclocal:configure.ac:89: warning: macro `AM_CONDITIONAL' not found in library
aclocal:configure.ac:216: warning: macro `AM_CONDITIONAL' not found in library
aclocal:configure.ac:901: warning: macro `AM_CONDITIONAL' not found in library
aclocal:configure.ac:1015: warning: macro `AM_CONDITIONAL' not found in library
aclocal:configure.ac:1105: warning: macro `AM_CONDITIONAL' not found in library
aclocal:configure.ac:1229: warning: macro `AM_CONDITIONAL' not found in library
configure.ac:2: error: Autoconf version 2.63 or higher is required
configure.ac:2: the top level
autom4te: /usr/bin/m4 failed with exit status: 63
aclocal: autom4te failed with exit status: 63
</code></pre>

<p>別のエラーが出てしまい、なおかつ、参照先のパスが変更できなかった。</p>

<h2 id="automake-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E2%86%92%E5%A4%B1%E6%95%97">automake のビルド→失敗</h2>

<p>それならば、ということで今度は <code>automake</code> をビルドしてみることにした。</p>

<p>とりあえず、 <a href="http://ftp.gnu.org/gnu/automake/?C=M;O=D">GNU Project Archives</a> からダウンロード＆解凍。</p>

<pre><code class="bash"># cd ..
# pwd
~/build
# curl -kLO http://ftp.gnu.org/gnu/automake/automake-1.15.tar.xz
# tar xf automake-1.15.tar.xz
# cd automake-1.15
</code></pre>

<p>そして <code>configure</code> をしてみると、、、</p>

<pre><code class="bash"># ./configure  --prefix=$HOME/usr/automake
checking whether make supports nested variables... yes
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether ln -s works... yes
checking for perl... /usr/local/bin/perl
checking for tex... no
checking for yacc... yacc
checking for lex... lex
checking whether autoconf is installed... yes
checking whether autoconf works... yes
checking whether autoconf is recent enough... no
configure: error: Autoconf 2.65 or better is required.
</code></pre>

<p>！！！ <code>Autoconf 2.65 or better is required.</code> なん、、、だと？</p>

<p>ぐぬぬ</p>

<h2 id="autoconf-2.65-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E2%86%92%E5%A4%B1%E6%95%97">Autoconf 2.65 のビルド→失敗</h2>

<pre><code class="bash"># cd ..
# pwd
~/build
# curl -OL http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz
# tar xzf autoconf-2.69.tar.gz
# cd autoconf-2.69
# ./configure --prefix=$HOME/usr/autoconf
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
configure: autobuild project... GNU Autoconf
configure: autobuild revision... 2.69
configure: autobuild hostname... s152
configure: autobuild timestamp... 20150530T042915Z
checking whether /bin/sh -n is known to work... yes
checking for characters that cannot appear in file names... none
checking whether directories can have trailing spaces... yes
checking for expr... /usr/bin/expr
checking for GNU M4 that supports accurate traces... configure: error: no acceptable m4 could be found in $PATH.
GNU M4 1.4.6 or later is required; 1.4.16 or newer is recommended.
GNU M4 1.4.15 uses a buggy replacement strstr on some systems.
Glibc 2.9 - 2.12 and GNU M4 1.4.11 - 1.4.15 have another strstr bug.
</code></pre>

<p>ぐぬぬ</p>

<h2 id="m4-1.4.17-%E3%82%92%E3%83%93%E3%83%AB%E3%83%89%EF%BC%86%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E2%86%92%E6%88%90%E5%8A%9F">m4 1.4.17 をビルド＆インストール→成功</h2>

<pre><code class="bash"># cd ..
# pwd
~/build
# curl -OL http://ftp.gnu.org/gnu/m4/m4-1.4.17.tar.xz
# tar xf m4-1.4.17.tar.xz
# cd m4-1.4.17
# ./configure --prefix=$HOME/usr/m4
# make
# make install
</code></pre>

<h2 id="autoconf-2.65-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%EF%BC%86%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E2%86%92%E6%88%90%E5%8A%9F">Autoconf 2.65 のビルド＆インストール→成功</h2>

<pre><code class="bash"># cd ../autoconf-2.69
# pwd
~/build/autoconf-2.69
# PATH=$HOME/usr/m4/bin:$PATH ./configure --prefix=$HOME/usr/autoconf
# PATH=$HOME/usr/m4/bin:$PATH make
# PATH=$HOME/usr/m4/bin:$PATH make install
</code></pre>

<h2 id="automake-1.15-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%EF%BC%86%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E2%86%92%E6%88%90%E5%8A%9F">Automake 1.15 のビルド＆インストール→成功</h2>

<pre><code class="bash"># cd ../automake-1.15
# pwd
~/build/automake-1.15
# PATH=$HOME/usr/autoconf/bin:$PATH ./configure --prefix=$HOME/usr/automake
# PATH=$HOME/usr/autoconf/bin:$PATH make
# PATH=$HOME/usr/autoconf/bin:$PATH make install
</code></pre>

<h2 id="libxml-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E2%86%92%E5%A4%B1%E6%95%97">libxml のビルド→失敗</h2>

<pre><code class="bash"># cd ../libxml2-2.9.2
# pwd
~/build/libxml2-2.9.2
# mkdir m4
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH aclocal
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH autoheader
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH automake
configure.ac:52: warning: AM_INIT_AUTOMAKE: two- and three-arguments forms are deprecated.  For more info, see:
configure.ac:52: http://www.gnu.org/software/automake/manual/automake.html#Modernize-AM_005fINIT_005fAUTOMAKE-invocation
Makefile.am:22: error: Libtool library used but 'LIBTOOL' is undefined
Makefile.am:22:   The usual way to define 'LIBTOOL' is to add 'LT_INIT'
Makefile.am:22:   to 'configure.ac' and run 'aclocal' and 'autoconf' again.
Makefile.am:22:   If 'LT_INIT' is in 'configure.ac', make sure
Makefile.am:22:   its definition is in aclocal's search path.
                         :
    # PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH autoscan
    # PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH autoconf
    # PATH=$HOME/usr/automake/share/automake-1.15/:$PATH ./configure --prefix=$HOME/usr/libxml
</code></pre>

<p>なんか LibTool も居るみたい。</p>

<h2 id="libtool-2.4.6-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%EF%BC%86%E3%83%93%E3%83%AB%E3%83%89%E2%86%92%E6%88%90%E5%8A%9F">LibTool 2.4.6 のインストール＆ビルド→成功</h2>

<pre><code class="bash"># cd ..
# pwd
~/build
# curl -OL http://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.xz
# tar xf libtool-2.4.6.tar.xz
# cd libtool-2.4.6
# PATH=$HOME/usr/m4/bin:$PATH ./configure --prefix=$HOME/usr/libtool
# make
# make install
</code></pre>

<h2 id="3-%E5%BA%A6%E7%9B%AE%E3%81%AE%E6%AD%A3%E7%9B%B4%E3%81%AA-libxml-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%EF%BC%86%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E2%86%92%E6%88%90%E5%8A%9F">3 度目の正直な libxml のビルド＆インストール→成功</h2>

<pre><code class="bash"># cd ../libxml2-2.9.2
# pwd
~/build/libxml2-2.9.2
# PATH=$HOME/usr/libtool/bin:$PATH libtoolize
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH aclocal
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH autoheader
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH automake --add-missing
# PATH=$HOME/usr/autoconf/bin:$HOME/usr/m4/bin:$HOME/usr/automake/bin:$PATH autoconf
# PATH=$HOME/usr/automake/share/automake-1.15/:$PATH ./configure --prefix=$HOME/usr/libxml --without-python
                           :
Checking lzma
./configure: line 13094: syntax error near unexpected token `LZMA,liblzma,'
./configure: line 13094: `    PKG_CHECK_MODULES(LZMA,liblzma,'
</code></pre>

<p>と <code>configure</code> 時にエラーが出るので少し修正。</p>

<pre><code class="bash"># cp configure configure.old 
# vi configure
# diff configure.old configure
13094,13096c13094,13096
&lt;     PKG_CHECK_MODULES(LZMA,liblzma,
&lt;         have_liblzma=yes,
&lt;         have_liblzma=no)
---
&gt;     #PKG_CHECK_MODULES(LZMA,liblzma,
&gt;     #    have_liblzma=yes,
&gt;     #    have_liblzma=no)
# PATH=$HOME/usr/automake/share/automake-1.15/:$PATH ./configure --prefix=$HOME/usr/libxml --without-python
# make
# make install
</code></pre>

<p>ちなみに <code>--without-python</code> オプションを指定しないと、システムディレクトリにインストール使用としてエラーが出てしまいます。
インストール先のディレクトリを指定してもいいけど、まあ要らないので省いています。</p>

<h2 id="sculpin-%E3%81%AE%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D">Sculpin の動作確認</h2>

<pre><code class="bash"># LD_PRELOAD=~/usr/libxml/lib/libxml2.so php55cli sculpin.phar
Sculpin version 2.0.x-dev (v2.0.0-46-g0862cc9) - app/dev/debug

Usage:
 [options] command [arguments]
               :
theme
 theme:list        List currently installed themes.
</code></pre>

<p>と、うまく動くようになりました。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>とりあえず、依存関係は</p>

<pre><code class="mermaid">graph LR
    libtool  --&gt; m4
    libxml   --&gt; m4
    libxml   --&gt; libtool
    libxml   --&gt; automake
    libxml   --&gt; autoconf
    automake --&gt; autoconf
</code></pre>

<p>とこのようになっていました。</p>

<p>ビルドは、</p>

<ol>
<li>m4</li>
<li>libtool</li>
<li>autoconf</li>
<li>automake</li>
<li>libxml</li>
</ol>

<p>の順でビルドしていくのが良いと思います。</p>

<p>実際のコマンドラインは、</p>

<p>まず、 <code>libxml</code> のビルドに必要なツール類のビルドを、</p>

<pre><code class="bash"># mkdir -p build $HOME/usr/buildtools
# cd build
# for I in http://ftp.gnu.org/gnu/m4/m4-1.4.17.tar.xz http://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.xz http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz http://ftp.gnu.org/gnu/automake/automake-1.15.tar.xz ; do curl -LO $I ; done
# for I in m4-1.4.17 libtool-2.4.6 autoconf-2.69 automake-1.15 ; do tar xf $I.tar.* ; pushd $I ; PATH=$HOME/usr/buildtools/bin:$PATH ./configure --prefix=$HOME/usr/buildtools ; PATH=$HOME/usr/buildtools/bin:$PATH make ; PATH=$HOME/usr/buildtools/bin:$PATH make install ; popd ; done
</code></pre>

<p>と、こんな感じで、 <code>$HOME/usr/buildtools</code> の下にインストールを行い、</p>

<pre><code class="bash"># curl -kLO https://git.gnome.org/browse/libxml2/snapshot/libxml2-2.9.2.tar.xz
# tar xf libxml2-2.9.2.tar.xz
# pushd libxml2-2.9.2
# for I in libtoolize aclocal autoheader "automake --add-missing" autoconf ; do PATH=$HOME/usr/buildtools/bin:$PATH $I ; done
# sed -e 's/PKG_CHECK_MODULES(LZMA/#\0/g' -e 's/^        have_liblzma=/#\0/g' configure &gt; configure~ ; mv -f configure~ configure ; chmod +x configure
# for I in "./configure --prefix=$HOME/usr/libxml --without-python" make "make install" ; do PATH=$HOME/usr/buildtools/bin:$HOME/usr/buildtools/share/automake-1.15/:$PATH $I ; done
# popd
</code></pre>

<p>以上の感じで <code>libxml</code> をビルドすることが出来ると思います。</p>

<pre><code class="bash"># ls -l ~/usr/libxml/*
~/usr/libxml/bin:
total 156
-rwxr-xr-x  1 guest users   1684 2015-05-31 21:16 xml2-config
-rwxr-xr-x  1 guest users  27475 2015-05-31 21:16 xmlcatalog
-rwxr-xr-x  1 guest users 124327 2015-05-31 21:16 xmllint

~/usr/libxml/include:
total 0
drwxr-xr-x  3 guest users 72 2015-05-31 21:16 libxml2

~/usr/libxml/lib:
total 7139
drwxr-xr-x  3 guest users      72 2015-05-31 21:16 cmake
-rw-r--r--  1 guest users 4103164 2015-05-31 21:16 libxml2.a
-rwxr-xr-x  1 guest users     975 2015-05-31 21:16 libxml2.la
lrwxrwxrwx  1 guest users      16 2015-05-31 21:16 libxml2.so -&gt; libxml2.so.2.9.2
lrwxrwxrwx  1 guest users      16 2015-05-31 21:16 libxml2.so.2 -&gt; libxml2.so.2.9.2
-rwxr-xr-x  1 guest users 3188079 2015-05-31 21:16 libxml2.so.2.9.2
drwxr-xr-x  2 guest users      80 2015-05-31 21:16 pkgconfig
-rw-r--r--  1 guest users     254 2015-05-31 21:16 xml2Conf.sh

~/usr/libxml/share:
total 0
drwxr-xr-x  2 guest users 80 2015-05-31 21:16 aclocal
drwxr-xr-x  3 guest users 80 2015-05-31 21:16 doc
drwxr-xr-x  3 guest users 72 2015-05-31 21:16 gtk-doc
drwxr-xr-x  4 guest users 96 2015-05-31 21:16 man
</code></pre>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://qiita.com/ikedahidenori/items/8e533a9c168e269c4191">CORESERVERにgitをインストールする - Qiita</a></li>
<li><a href="https://git.gnome.org/browse/libxml2/">libxml2 - XML parser and markup toolkit</a></li>
<li><a href="http://www.xmlsoft.org/FAQ.html">FAQ</a></li>
<li><a href="http://nopipi.hatenablog.com/entry/2013/01/14/025509">configureの作り方(autotoolsの使い方） - メモ。。メモ。。</a></li>
<li><a href="https://bugs.archlinux.org/task/20172#comments">FS#20172 : [progsreiserfs] underquoted definition of AC_CHECK_LIBREISERFS</a></li>
<li><a href="http://stackoverflow.com/questions/16612791/automake-demands-autoconf-2-65-or-better-and-yet-i-already-have-autoconf-2-69">Automake demands "Autoconf 2.65 or better" and yet I already have Autoconf 2.69 installed - Stack Overflow</a></li>
<li><a href="https://github.com/dirkvdb/ffmpegthumbnailer/issues/37">aclocal: couldn't open directory `m4': No such file or directory · Issue #37 · dirkvdb/ffmpegthumbnailer</a></li>
<li><a href="http://stackoverflow.com/questions/18978252/error-libtool-library-used-but-libtool-is-undefined#answer-18980043">c - error: Libtool library used but 'LIBTOOL' is undefined - Stack Overflow</a></li>
</ul>
]]></content>
        </entry>
    </feed>