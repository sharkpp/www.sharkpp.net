<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/atom.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2017-11-19T02:42:11+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[FREETEL RAIJIN 開封の儀と一月ほど使ってみた感じ]]></title>
            <link href="http://www.sharkpp.net/blog/2017/11/17/unboxing-and-used-one-month-of-freetel-raijin.html"/>
            <updated>2017-11-17T02:31:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/11/17/unboxing-and-used-one-month-of-freetel-raijin.html</id>
            <content type="html"><![CDATA[<p>前に使っていた <a href="/blog/2015/12/07/unboxing-and-used-one-month-of-nexus-5x.html">Google Nexus 5X</a> が、巷で話題の再起動ループに陥ったので、新しいスマホを購入しました。</p>

<p>今回は、長々と代替機で過ごしていると<a href="https://play.google.com/store/apps/details?id=com.nianticlabs.pokemongo&amp;hl=ja">某ボールを投げて何某をゲットするゲーム</a>が遊べないのでサクッと選びました。
まあ、前のスマホが二年も前のなので、そこそこのスペックでほぼ同等ぐらいだからいいやと思って、<a href="https://www.freetel.jp/product/smartphone/raijin/">FREETEL RAIJIN</a>を選びました。
本当は Google PIXEL 2 がよかったんですが、あれ絶対日本では発売しないよなーと。</p>

<p><a href="/images/2017_1117_raijin_outerbox.jpg"><img src="/thumbs/0e99fd9e7890ad2bd78ab2a7c6cc9f67-256x256.jpg" alt="雷神 -RAIJIN-"></a></p>

<h2 id="%E3%81%95%E3%82%88%E3%81%AA%E3%82%89-nexus-5x">さよなら Nexus 5X</h2>

<p>とうとうお家の Nexus 5X にも再起動ループがやってきました。</p>

<p><code>fastboot</code> コマンドで、OSを更新しようとしたら、「ロックが掛かっているのでできない」と言われ、ロックを解除しようにも、OSが正常起動していないと、だめと言う、ああ、これは詰んだ状態でした。
そのままの状態で一晩放っておいたら、いつのまにか復帰していました（少ししたら再起動しましたけど）
ただまあ、後から考えると、OS書き込んでも治らなかった可能性が高いなぁと。</p>

<p>ともあれ、これで保有している LG のスマホは、２台ともが故障したことになります（１台は修理交換済み）。
もう二度と LG のスマホは買わないことを誓った 2017年の秋でした。</p>

<p>まあ、ともかく、さよならです、Nexus 5X 、２年間ありがとう。</p>

<h2 id="%E9%96%8B%E5%B0%81%E3%81%AE%E5%84%80">開封の儀</h2>

<p>10月某日、FREETEL RAIJIN がお家にやってきた。</p>

<p><a href="/images/2017_1117_raijin_outerbox.jpg"><img src="/thumbs/0e99fd9e7890ad2bd78ab2a7c6cc9f67-256x256.jpg" alt="雷神 -RAIJIN- 外箱"></a></p>

<p>ともかく、ご開帳です！</p>

<p><a href="/images/2017_1117_raijin_logo_zoom.jpg"><img src="/thumbs/de750b41f64c932fd740b24c098ba1f4-256x256.jpg" alt="雷神 -RAIJIN- ロゴ拡大"></a></p>

<p><a href="/images/2017_1117_raijin_bundles.jpg"><img src="/thumbs/9f24a1075eb00d927dfcd485ccdecbd1-256x256.jpg" alt="同梱品一覧"></a></p>

<p><a href="/images/2017_1117_raijin_charge_cable.jpg"><img src="/thumbs/370465992277354ba46ac2f7fdb12d35-256x256.jpg" alt="本体＆充電ケーブル"></a></p>

<p><a href="/images/2017_1117_raijin_backside.jpg"><img src="/thumbs/ef3d4cb58579c2736d0ab11b31052d80-256x256.jpg" alt="裏面"></a></p>

<p>SIMスロットは、microSDカードリーダと兼用も含めて二つ付いているようです。</p>

<p><a href="/images/2017_1117_raijin_sim_slot.jpg"><img src="/thumbs/535717116b1c0b95c023ae7965e2187e-256x256.jpg" alt="nanoSIM収納"></a></p>

<p>前のスマホ <a href="https://www.google.co.jp/intl/ja_jp/nexus/5x/">Google Nexus 5X</a>との比較</p>

<p><a href="/images/2017_1117_raijin_vs_nexus5x_size.jpg"><img src="/thumbs/ceb439f8179534ccd5865514844dcd94-256x256.jpg" alt="大きさ FREETEL RAIJIN vs Google Nexus 5X"></a></p>

<p><a href="/images/2017_1117_raijin_vs_nexus5x_size2.jpg"><img src="/thumbs/a43a83d6d8a8f97d0618ee6b4125e56f-256x256.jpg" alt="大きさ FREETEL RAIJIN vs Google Nexus 5X その２"></a></p>

<p>少し大きいですね。</p>

<p>保護シートを慌てて購入したので、欲しかったのぞき見防止じゃなくて普通を選んでしまっていた、不覚！</p>

<h2 id="%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E4%B8%AD">セットアップ中</h2>

<p><a href="/images/2017_1117_raijin_setup01.png"><img src="/thumbs/2da765528e9949e154cb0422db13a813-256x256.png" alt="セットアップ：ようこそ"></a>
<a href="/images/2017_1117_raijin_setup02.png"><img src="/thumbs/eaa3c212f3575eef8c9eb5cb4d335967-256x256.png" alt="セットアップ：SIM挿入"></a>
<a href="/images/2017_1117_raijin_setup03.png"><img src="/thumbs/083c6702a923b670bff64237ce1e2315-256x256.png" alt="セットアップ：挿入したらSMSが届いた"></a>
<a href="/images/2017_1117_raijin_setup04.png"><img src="/thumbs/ab1340eb57047b9782e93bb50dbffa43-256x256.png" alt="セットアップ：セットアップ"></a>
<a href="/images/2017_1117_raijin_setup05.png"><img src="/thumbs/377717b7868c55e91dfb475bf31ec4b5-256x256.png" alt="セットアップ：データの引き継ぎ"></a>
<a href="/images/2017_1117_raijin_setup06.png"><img src="/thumbs/eb410e034c92cd435bd9e45c048206b1-256x256.png" alt="セットアップ：ソフトウエアアップデート"></a>
<a href="/images/2017_1117_raijin_setup07.png"><img src="/thumbs/c05041aba6aaffa1f0b308a3dceb76e3-256x256.png" alt="セットアップ：別端末からコピー"></a>
<a href="/images/2017_1117_raijin_setup08.png"><img src="/thumbs/b8b468b8c152063a4314e3a03ff58a9d-256x256.png" alt="セットアップ：あと少しで完了です(Nexus 5X側)"></a>
<a href="/images/2017_1117_raijin_setup09.png"><img src="/thumbs/6b13b367004fb7041244adcc7480a356-256x256.png" alt="セットアップ：指紋ロック設定"></a>
<a href="/images/2017_1117_raijin_setup10.png"><img src="/thumbs/3a5407eea1a11b64d9e08c6f03bdac56-256x256.png" alt="セットアップ：指紋センサー位置の確認"></a>
<a href="/images/2017_1117_raijin_setup11.png"><img src="/thumbs/66826955db53897dec77d535b4dc4fce-256x256.png" alt="セットアップ：指紋登録完了"></a>
<a href="/images/2017_1117_raijin_setup12.png"><img src="/thumbs/38b5445f0b289494c9bc08f222d02080-256x256.png" alt="セットアップ：設定完了"></a></p>

<h2 id="%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E5%AE%8C%E4%BA%86">セットアップ完了</h2>

<p><a href="/images/2017_1117_raijin_welcome.png"><img src="/thumbs/20b3c103b01637a7fdd21111ad9235cb-256x256.png" alt="ようこそ"></a>
<a href="/images/2017_1117_raijin_info.png"><img src="/thumbs/a2f373bb39ae57c397255385205f5439-256x256.png" alt="端末の情報"></a></p>

<h2 id="%E3%82%A4%E3%83%BC%E3%82%B9%E3%82%BF%E3%83%BC%E3%82%A8%E3%83%83%E3%82%B0">イースターエッグ</h2>

<p>Android 7 のイースターエッグはネコ集めらしい。</p>

<p><a href="/images/2017_1117_raijin_android7_logo.png"><img src="/thumbs/524b7814dc466b0ac5e24a78db7733f1-256x256.png" alt="ロゴ"></a></p>

<p><a href="/images/2017_1117_raijin_first_cat.png"><img src="/thumbs/7174af1ada79ded9376eccd9e1927cec-256x256.png" alt="最初の猫"></a></p>

<h2 id="%E4%B8%80%E6%9C%88%E3%81%BB%E3%81%A9%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%81%9F%E6%84%9F%E3%81%98">一月ほど使ってみた感じ</h2>

<h3 id="%E3%82%AB%E3%83%A1%E3%83%A9">カメラ</h3>

<p>カメラアプリは独自性を出しやすい部分。</p>

<p>まあ、カメラの性能としてはトントンかなぁと。</p>

<h4 id="%E6%A8%99%E6%BA%96%E3%81%AE%E3%82%AB%E3%83%A1%E3%83%A9%E3%82%A2%E3%83%97%E3%83%AA%E3%81%A7%E6%92%AE%E3%81%A3%E3%81%9F%E5%86%99%E7%9C%9F">標準のカメラアプリで撮った写真</h4>

<h4 id="%E7%89%B9%E6%AE%8A%E3%81%AA%E6%92%AE%E5%BD%B1%E3%83%A2%E3%83%BC%E3%83%89">特殊な撮影モード</h4>

<p>こんな感じで</p>

<p><a href="/images/2017_1117_raijin_camera_mode.png"><img src="/thumbs/dda70048243c3680e4e84d519539bb35-256x256.png" alt="カメラ：カメラモード"></a></p>

<ul>
<li>オート</li>
<li>マニュアル</li>
<li>ビューティー</li>
<li>パノラマ</li>
<li>暗がり撮影</li>
<li>色鮮やかHDR</li>
<li>一眼レフ</li>
<li>残像</li>
<li>ハイスピード</li>
</ul>

<p>と、いろんな撮影方法ができるみたいです。</p>

<p>カメラの設定はこんな感じ。</p>

<h5 id="%E3%80%8C%E4%B8%80%E7%9C%BC%E3%83%AC%E3%83%95%E3%80%8D%E3%83%A2%E3%83%BC%E3%83%89">「一眼レフ」モード</h5>

<p><a href="/images/2017_1117_raijin_camera_mode01.png"><img src="/thumbs/925a53b71a293e2b5ea781d2f415070e-256x256.png" alt="「一眼レフ」モード"></a></p>

<p>２枚？を焦点をずらして撮影して、自動でぼかしを入れるようです。</p>

<p>こんな感じ。</p>

<p><a href="/images/2017_1117_raijin_camera01.jpg"><img src="/thumbs/31923ce3dbbc64bc8353e7bdfd0b58f8-256x256.jpg" alt="お寿司その１：「一眼レフ」モード"></a></p>

<h5 id="%E3%80%8C%E6%AE%8B%E5%83%8F%E3%80%8D%E3%83%A2%E3%83%BC%E3%83%89">「残像」モード</h5>

<p><a href="/images/2017_1117_raijin_camera_mode02.png"><img src="/thumbs/9d64a195c3312d177c37a1c12cb1ab54-256x256.png" alt="「残像」モード"></a></p>

<p>何枚か撮影して、複数枚選んだ画像に移る目標物を抜き出し、合成するようです。</p>

<h5 id="%E3%80%8C%E3%83%8F%E3%82%A4%E3%82%B9%E3%83%94%E3%83%BC%E3%83%89%E3%80%8D%E3%83%A2%E3%83%BC%E3%83%89">「ハイスピード」モード</h5>

<p><a href="/images/2017_1117_raijin_camera_mode03.png"><img src="/thumbs/a0a0ad379e69beb3731c5ccc1dda6d53-256x256.png" alt="「ハイスピード」モード"></a></p>

<p>何枚か撮影して、選んだ画像に写る目標物以外にモーションブラーを掛けるようです。</p>

<h4 id="%E3%82%AB%E3%83%A1%E3%83%A9%E3%81%AE%E3%82%B7%E3%83%A3%E3%83%83%E3%82%BF%E3%83%BC%E9%9F%B3">カメラのシャッター音</h4>

<p>このカメラアプリ、なんとシャッター音が消せるんです。
公式アプリで、良いのこれ？</p>

<p>まあ、ともかく消してみると、困ったことに写真を撮ったかどうかがわかりにくいので微妙かも。</p>

<h4 id="%E6%A8%99%E6%BA%96%E3%81%AE%E3%82%AB%E3%83%A1%E3%83%A9%E3%81%A7%E6%92%AE%E3%81%A3%E3%81%9F%E3%81%82%E3%82%8C%E3%81%93%E3%82%8C">標準のカメラで撮ったあれこれ</h4>

<p><a href="/images/2017_1117_raijin_camera02.jpg"><img src="/thumbs/3ff4905e54ebc1550ab8faf846f36c42-256x256.jpg" alt="お寿司その２：「一眼レフ」モード"></a>
<a href="/images/2017_1117_raijin_camera03.jpg"><img src="/thumbs/d1f47c8c67ea68e7bac9fb4b534e6fb1-256x256.jpg" alt="お寿司その３：「一眼レフ」モード失敗"></a>
<a href="/images/2017_1117_raijin_camera04.jpg"><img src="/thumbs/1739d902ac3cc30a9ae2e3d0d84bae17-256x256.jpg" alt="お寿司その４：「一眼レフ」モード"></a>
<a href="/images/2017_1117_raijin_camera05.jpg"><img src="/thumbs/6f018ad225f9140fa26679cfdec47168-256x256.jpg" alt="お寿司その５：「一眼レフ」モード"></a>
<a href="/images/2017_1117_raijin_camera06.jpg"><img src="/thumbs/345d232b76916c3c8f700d76c0afc51d-256x256.jpg" alt="さんまの蒲焼：「一眼レフ」モード"></a>
<a href="/images/2017_1117_raijin_camera07.jpg"><img src="/thumbs/dcd849faa87043064ce5e4601fcdfa85-256x256.jpg" alt="お空"></a>
<a href="/images/2017_1117_raijin_camera08.jpg"><img src="/thumbs/fbb4deaa273ebc9dcd3fba6f8ab80e03-256x256.jpg" alt="道端の植物"></a>
<a href="/images/2017_1117_raijin_camera09.jpg"><img src="/thumbs/40e74677f92faddf1e8aad3b18ab5a1d-256x256.jpg" alt="夜の鳥居：夜間・最大ズーム"></a></p>

<h3 id="%E3%81%93%E3%81%93%E3%81%8C-good%21">ここが GOOD!</h3>

<h4 id="%E3%83%90%E3%83%83%E3%83%86%E3%83%AA%E3%83%BC%E5%AE%B9%E9%87%8F">バッテリー容量</h4>

<p>バッテリー容量が、<code>2,700 mAh</code> から <code>5,000mAh</code> になったので、ゲームを長時間やっていてもまだ余裕がある。</p>

<p>減り具合も、巷で言われるほどひどくはない気がする。</p>

<p>まあ、まだバッテリーが新品だからなのかもしれないけど。</p>

<h4 id="%E3%82%B2%E3%83%BC%E3%83%A0%E4%B8%AD%E3%81%AE%E7%99%BA%E7%86%B1">ゲーム中の発熱</h4>

<p>ゲーム中も <code>Nexus 5X</code> よりも発熱はなさそうな感じ。
もう、<code>Nexus 5X</code> でゲームをやったら、画面上部が手で触ると辛いぐらいの温度になってたので、これはうれしい。</p>

<p>まあ、２年もたてばCPUなどの性能も上がってるし、こんな感じだよね、と。</p>

<h4 id="%E9%8C%B2%E9%9F%B3">録音</h4>

<p>通話中の会話の録音が標準機能？でできるようになった。
自動録音ではないのがちょっと残念。</p>

<h3 id="%E3%81%93%E3%81%93%E3%81%8C-bad%21">ここが BAD!</h3>

<h4 id="gps%E3%81%AE%E7%B2%BE%E5%BA%A6%E3%81%8C%E6%82%AA%E3%81%84">GPSの精度が悪い</h4>

<p>どうも、GPSの精度、というか掴む数が少ない気がする。</p>

<p>Nexus 5X に比べて、室内だと特に乱れやすい。</p>

<p>位置ゲームをやっている身としては困る...</p>

<h4 id="%E6%99%82%E8%A8%88%E3%81%8C%E7%9C%81%E7%95%A5%E3%81%95%E3%82%8C%E3%82%8B%EF%BC%81">時計が省略される！</h4>

<p>何故か時計が <code>...</code> で省略されて、今何時か、しかわからない。
<del>とりあえず、バッテリーの残り容量が数字で表示されている部分を表示しないようにするだけで直った様子。</del>
直りませんでした。</p>

<p>※ 縦横を切り替えると直る様子。</p>

<h4 id="%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%83%90%E3%83%BC%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B8%E3%82%B1%E3%83%BC%E3%82%BF%E3%81%8C%E9%87%8D%E3%81%AA%E3%82%8B">ステータスバーのインジケータが重なる</h4>

<p>Bluetooth の状態インジケータが隣のアイコンと重なる。</p>

<h4 id="%E6%99%82%E8%A8%88%E3%81%8C%E9%80%B2%E3%81%BE%E3%81%AA%E3%81%84">時計が進まない</h4>

<p>ゲームをしている最中などに、ステータスバーの時計が進まなくなることがある様子。</p>

<p>ウィジェットや通知領域の時刻は進んでいるのでなんだかなーと。</p>

<p><a href="/images/2017_1117_raijin_clock_not_working.png"><img src="/thumbs/af861fc8f79d9f0f208215abb11e64b6-256x256.png" alt="時刻が進まない"></a></p>

<p>※ 縦横を切り替えると直る様子。</p>

<h4 id="%E6%A8%99%E6%BA%96%E3%83%A9%E3%83%B3%E3%83%81%E3%83%A3%E3%83%BC%E3%81%AE%E8%A1%8C%E6%95%B0%E3%81%8C%E5%B0%91%E3%81%AA%E3%81%84">標準ランチャーの行数が少ない</h4>

<p>解像度は Nexus 5X と同じはずだけど、なぜだかランチャーで並べられる数が少ない。</p>

<p>比較画像</p>

<p><a href="/images/2017_1117_raijin_welcome.png"><img src="/thumbs/20b3c103b01637a7fdd21111ad9235cb-256x256.png" alt="FREETEL RAIJIN ランチャースクショ"></a></p>

<p><a href="/images/2015_1207_nexus5x_17_setup.png"><img src="/thumbs/44a9a648a8ff0199dd758ee702235cb2-256x256.png" alt="Google Nexus 5X ランチャースクショ"></a></p>

<p>を見てみるとよくわかるけど、RAIJIN の方は置けるアプリの数が Nexus 5X よりも少ない模様。</p>

<p>間抜けなことに、最初なんだか画面が狭いなーと思ってたけど、何のことはない、5 x 5 から 4 x 4 に減っただけだった。</p>

<h4 id="%E6%80%A5%E9%80%9F%E5%85%85%E9%9B%BB%E3%81%AB%E3%81%AA%E3%82%89%E3%81%AA%E3%81%84">急速充電にならない</h4>

<p>急速充電に対応していないらしく... あれ？対応しているって「<a href="https://blg.freetel.jp/faq/17254.html">急速充電に対応していますか？ </a>」に書かれてるな。</p>

<p>充電中のステータスが「充電中」のままのようだ。</p>

<p>充電器によってはそもそも給電がされないか、消費が多くて充電が進まなことがある模様。</p>

<h3 id="%E7%AD%90%E4%BD%93%E8%87%AA%E4%BD%93%E3%81%AB%E6%AC%B2%E3%81%97%E3%81%8B%E3%81%A3%E3%81%9F%E3%82%82%E3%81%AE">筐体自体に欲しかったもの</h3>

<ul>
<li>防水機能
まあ、そこまで神経質にならなくてもいいけど、水没にだけは気をつけよう。</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://mobareco.jp/a77458/">FREETEL SAMURAI REIを買ったら設定しておきたい10のこと - モバレコ</a></li>
<li><a href="https://mobareco.jp/a95780/">最新モデル「FREETEL RAIJIN」レビュー！フリーテルならではのこだわりを感じる1台 - モバレコ</a></li>
<li><a href="https://www.dream-seed.com/weblog/note/android-7-nougat-easteregg">Android 7.0 Nougatのイースターエッグの遊び方 – Dream Seed</a></li>
<li><a href="http://wnkhs.net/2017/02/android-7-easter-egg-watch/">Android 7 Nougatのイースターエッグは時計でも確認できる – wnkhs.net</a></li>
<li><a href="https://www.freetel.jp/product/smartphone/raijin/faq.html">RAIJINのFAQ｜FTJ162E-RAIJIN｜FREETEL(フリーテル) のSIMフリースマホ</a></li>
<li><a href="https://www.freetel.jp/product/smartphone/raijin/spec.html">RAIJINのスペック｜FTJ162E-RAIJIN｜FREETEL(フリーテル) のSIMフリースマホ</a></li>
<li><a href="http://monomoney.hatenablog.com/entry/2017/02/09/165434">FREETELのRAIJIN 雷神のカメラの設定項目 - M,LIFE</a></li>
<li><a href="https://zenfone3-asus-wiki.fxtec.info/wiki.cgi?page=FREETEL%20%CD%EB%BF%C0%20RAIJIN%20vs%20ZenFone%203%20%A5%B9%A5%DA%A5%C3%A5%AF%A4%CE%B0%E3%A4%A4%A1%A2%A5%AC%A5%C1%C8%E6%B3%D3%A1%AA">FREETEL 雷神 RAIJIN vs ZenFone 3 スペックの違い、ガチ比較！ - ZenFone 3（ASUS）まとめWiki</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[技術書典３にサークル手伝いとして参加してきた]]></title>
            <link href="http://www.sharkpp.net/blog/2017/10/23/techbookfest3.html"/>
            <updated>2017-10-23T02:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/10/23/techbookfest3.html</id>
            <content type="html"><![CDATA[<p>去年から始まった技術書オンリーな同人イベント、「技術書典」の第三回、<a href="https://techbookfest.org/event/tbf03">技術書典３</a> が 10月22日 (日) に開催されました。
前回は一年以上間が空いていましたが、今回は約半年での開催となっています。
次回以降も同じスパンでやるのでしょう…か？</p>

<p>ともかく、普通に一般参加しようと思っていましたが、 <a href="https://twitter.com/IoriAYANE">@IoriAYANE</a> さんから、<a href="https://twitter.com/IoriAYANE/status/920595682238504961">当日のお手伝い</a>を頼まれたので、またとない機会なのでお手伝いを引き受けて、サークル側として参加してきました。</p>

<p><a href="/images/2017_1022_tf3.jpg"><img src="/thumbs/3efc7875eddb11ca8108b13ccd251554-256x256.jpg" alt="会場前にて"></a></p>

<h2 id="%E5%BD%93%E6%97%A5%E3%81%AE%E6%A7%98%E5%AD%90">当日の様子</h2>

<p>近づく台風のため雨がザーザーと降る中、お宿から電車を乗り継いで、9時ぐらいに秋葉原に到着、そして秋葉原駅５番ホーム（総武線）の <a href="https://tabelog.com/tokyo/A1310/A131001/13049969/">パンと牛乳の店 ミルクスタンド[食べログ]</a> で少し遅めの朝食です。</p>

<p><a href="/images/2017_1022_akihabara_05_home.jpg"><img src="/thumbs/11ad833ff0a937dc7fdcea4d87b0548c-256x256.jpg" alt="総武線ホーム"></a>
<a href="/images/2017_1022_milkstand.jpg"><img src="/thumbs/e7b0a7eeffef7c928c2f79ce1a312a67-256x256.jpg" alt="ミルクスタンド"></a>
<a href="/images/2017_1022_breakfast1.jpg"><img src="/thumbs/5168501a3f59bb24b906a7791fd42bb3-256x256.jpg" alt="朝食１"></a>
<a href="/images/2017_1022_breakfast2.jpg"><img src="/thumbs/0e2bc01f16c26a4e53eb13d9f1a9f24c-256x256.jpg" alt="朝食２"></a></p>

<p>その後、ブースが狭いためおっきい荷物入れておけないとの事だったのでホームの外のコインロッカーを探して荷物を入れます。</p>

<p><a href="/images/2017_1022_akihabara_udx.jpg"><img src="/thumbs/b0eff505f9ea3b240fa574d387c889a5-256x256.jpg" alt="秋葉原UDX"></a></p>

<p>9時半過ぎに会場の「秋葉原UDX」に向かうと、すでに少し行列が……</p>

<p><a href="/images/2017_1022_tf3_circles_queue.jpg"><img src="/thumbs/0f8891d1e8c8b1ccaaa54cb570244164-256x256.jpg" alt="サークル参加者入場待機列"></a></p>

<p>と思ったら、どうやら、サークル参加者の入場待ちだった。</p>

<p>会場自体の設営は７時半過ぎから始まって、９時頃には完了していたようです。</p>

<p>そして、事前のやり取りでは10時少し前の予定だったけど、9時半過ぎ<a href="https://twitter.com/IoriAYANE">@IoriAYANE</a> さんと合流できたので、サークルチケットを貰って会場入り。</p>

<p>それから、机の上の椅子をどかして、テーブルクロスを広げたり、既刊本や新刊本（印刷屋さんから会場に直接届く）を広げたり、と設営を行い10時半には設営完了。</p>

<p><a href="/images/2017_1022_tf3_booth_setup.jpg"><img src="/thumbs/c629685df616bcd7386053352cc3333c-256x256.jpg" alt="設営完了"></a></p>

<p>時間だけ見ると、結構かかっているようだけど、意外とやることが多かった。
ちなみに、会場内で出たゴミはお持ち帰りです。</p>

<p>一般入場は11時だったのですが、すでに10時半の段階で結構な人が並んでいました。
今回は、整理券配布だったようですが、それでも皆さんお早いお待ちで……</p>

<p>12時過ぎには入場制限が解除されて、ほぼ待ちなしで入場できていた（と会場案内があったと思う）ようです。</p>

<p>11時を数秒過ぎた辺りで運営から案内があり、会場内拍手で一般の入場が始まりました。</p>

<p><a href="/images/2017_1022_catch_copy.jpg"><img src="/thumbs/273ce2723afbd79ee56ce9eea90f7460-256x256.jpg" alt="キャッチコピー"></a></p>

<p>今回自分は、11時から会場内を回って本を確保したり、他サークルさんの本の確保のお使いをしたり、お昼を買いに行ったり（雨で大変だった）と、一般参加に毛が生えたような感じだったのですが、<a href="https://twitter.com/IoriAYANE">@IoriAYANE</a> さんの方は、</p>

<ul>
<li>設営作業</li>
<li>訪ねてこられた顔見知りさんの対応</li>
<li>購入手続き対応</li>
<li>撤収作業</li>
<li>新刊本の余りの送付手続き</li>
</ul>

<p>などなど、大変だったようです。
会場も見て回れたのは午後からのようでしたので、サークル参加は大変そうだ、と遠い眼を……
もちろん、微力ながら自分もお手伝いしました。</p>

<p>今回、運営さんが「<a href="https://play.google.com/store/apps/details?id=org.techbookfest">かんたん後払いアプリ</a>」なるものをリリースしていたので、利用して見ました。
故実の請求の金額が怖い……</p>

<p>ともかく、サークルごとに対応している所と、していない所があったので、現金を全く持たずに回れたかというとそうではなかったですが、それでもなかなか面白い試みだったなと思います。
まあ、アプリ自体は突貫でリリースされたようなので決済以外は今後に期待、なところもありましたが。</p>

<p><a href="/images/2017_1022_tf3_buy.png"><img src="/thumbs/f077d5dc55b36616b0e3a5045c9c2e46-256x256.png" alt="購入"></a></p>

<p>全体の客足は、開場直後から昼ぐらいまでが多くて、それ以降はある程度落ち着きつつ、それでも人は入ってきていたようです。
まあ、夕方少なくなったのは台風の影響があるのかもしれませんが……</p>

<p>今回、新しい試みとして、2Fの会場だけでなく、4Fにも部屋を2箇所借りて、「立ち読み会場」と「戦利品会場」を設けていました。</p>

<p>こちらには、昼食時についでに訪ねました。</p>

<p>立ち読み会場の方は、部屋に折り畳み机をロ形に並べ、その上に任意のサークルさんから提出された本（これは新刊、既刊は問わないようです）を並べ、訪れた人が自由に手に取って見れるようにしていました。
そういえば、見本誌とは別でしたが、最終的にどうなったんでしょうかね？</p>

<p>もう一方の、戦利品会場の方は、椅子に座って戦利品を見たりできる、休憩スペースのような感じでした。
まあ、殆ど席は埋まっていましたが……</p>

<p><a href="/images/2017_1022_tf3_trophy_room1.jpg"><img src="/thumbs/b1d5fe56e035061eca3486b392fab364-256x256.jpg" alt="戦利品会場１"></a></p>

<p><a href="/images/2017_1022_tf3_trophy_room2.jpg"><img src="/thumbs/e857e8a43e2e85f9eb5463c258adb77c-256x256.jpg" alt="戦利品会場２"></a></p>

<p>そして……</p>

<p>閉場の17時近くにもなると、完売したためかすでに撤収作業済みの所や、ブースを撤収して帰る前に会場内を回って目ぼしい物がないかと物色するサークル参加者がいたり。</p>

<p>自分がお手伝いをした、サークル「理ろぐ」さんでは撤収は閉場してから始めました。</p>

<p><a href="/images/2017_1022_tf3_booth_withdraw.jpg"><img src="/thumbs/4400cfa0b4fec130323f30977fbcd8f6-256x256.jpg" alt="撤収完了"></a></p>

<p>まあ、撤収は10分程度で終了しましたね。</p>

<p>会場自体の撤収も1時間程度で終わったようです。</p>

<p>結局、運営発表によると台風が近づく中でも「<a href="https://twitter.com/techbookfest/status/922010073890615296">ユニーク来場者数：2750名、再入場者含むのべ：3100名</a>」と前回の「<a href="https://twitter.com/TechBooster/status/850983169037697024">一般来場：3100人</a>」とほぼ同じぐらいの来場があったそうです。</p>

<p><a href="/images/2017_1022_tf3_see_you_next.jpg"><img src="/thumbs/2fd36138a47da3a708b9f65edc820373-256x256.jpg" alt="次回また！"></a></p>

<h2 id="%E6%88%A6%E5%88%A9%E5%93%81">戦利品</h2>

<p>今回の戦利品</p>

<p><a href="/images/2017_1022_tf3_booty.jpg"><img src="/thumbs/f3afa0c686b763d75e363a078828a6bc-256x256.jpg" alt="戦利品"></a></p>

<table>
<thead>
<tr>
  <th>ブース</th>
  <th>サークル名</th>
  <th>備考</th>
</tr>
</thead>
<tbody>
<tr>
  <td>い01</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5747272637743104">TechBooster</a></td>
  <td>「技術季報 Vol.2」※技術書典カタログ</td>
</tr>
<tr>
  <td>あ09</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5762702576189440">日経BP出版局</a></td>
  <td>「クラウディアさんB5クリアファイル（非売品）」 ※ジャンケンで勝って貰った</td>
</tr>
<tr>
  <td>あ13</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5692896204292096">シス管系女子会</a></td>
  <td>「シス管系女子リーフレット」 ※無料配布</td>
</tr>
<tr>
  <td>い03</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5644572721938432">KLab 株式会社</a></td>
  <td>「KLab Tech Book Vol. 1」</td>
</tr>
<tr>
  <td>い10</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5764321241989120">clear-mint</a></td>
  <td>「Gijutsu-san-saku 2017 Autumn」</td>
</tr>
<tr>
  <td>う12</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5713274213498880">カウプラン機関極東支部</a></td>
  <td>「オブジェクト指向言語 解体新書」</td>
</tr>
<tr>
  <td>え17</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5132766970642432">べころもち工房</a></td>
  <td>「Vue.jsでポートフォリオサイト制作記」 ※電子書籍</td>
</tr>
<tr>
  <td>お06</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/6027786883956736">TomoriNao</a></td>
  <td>「TomoriNao Vol.1 -We are TomoriNao! いろいろな友利奈緒が大集合！-」</td>
</tr>
<tr>
  <td>お11</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5644534738321408">Code Craft Works</a></td>
  <td>「オブジェクト指向とQt」</td>
</tr>
<tr>
  <td>お12</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5767047069827072">理ろぐ</a></td>
  <td>「QtQuickを使いこなす クロスプラットフォームUIプログラミング３」</td>
</tr>
<tr>
  <td>お18</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5659569942429696">74th</a></td>
  <td>「ViualStudioCodeデバッグ技術」</td>
</tr>
<tr>
  <td>か22</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5686003050217472">めがねをかけるんだ</a></td>
  <td>「TensorFlowはじめました Object Detection - 物体認識」</td>
</tr>
<tr>
  <td>か43</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/6207522675359744">Indie Visual Lab</a></td>
  <td>「Unity Graphics Programming」</td>
</tr>
<tr>
  <td>き05</td>
  <td><a href="https://techbookfest.org/event/tbf03/circle/5174530561540096">こくだランド</a></td>
  <td>「わか(った気がす)るWebRTC」</td>
</tr>
</tbody>
</table>

<p>※敬称略、ブース順</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<ul>
<li>一般入場とはまた違った視点で見られまたとない経験ができた</li>
<li>一人でサークル参加は厳しいものがありそうだ</li>
<li>運営さんもいろんな試みをしている様子</li>
<li>また次回も一般なのかサークルなのかはわからないですが参加したい！</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://twitter.com/techbookfest">技術書典公式アカウント(@techbookfest)さん | Twitter</a></li>
<li><a href="https://twitter.com/consomme72">こんそめ(@consomme72)さん | Twitter</a></li>
<li><a href="https://twitter.com/consomme72/status/921869169267687424">こんそめさんのツイート: "これから設営です #技術書典 https://t.co/1KqJSF3e68"</a></li>
<li><a href="https://twitter.com/consomme72/status/921889799392206848">こんそめさんのツイート: "設営中です #技術書典 https://t.co/CfdynRWSvz"</a></li>
<li><a href="https://twitter.com/consomme72/status/922023704892096512">こんそめさんのツイート: "兵どもが夢の跡 #技術書典 https://t.co/9HdJIHFgfz"</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その８]]></title>
            <link href="http://www.sharkpp.net/blog/2017/10/21/jugemutter-development-diary-8th.html"/>
            <updated>2017-10-21T17:41:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/10/21/jugemutter-development-diary-8th.html</id>
            <content type="html"><![CDATA[<p>今回は、明日行われる <a href="https://techbookfest.org/event/tbf03">技術書典３</a> に前日入りして、<a href="https://qt-users.connpass.com/event/68878/">Qt 勉強会 @ Tokyo #52</a> に参加してきました。</p>

<p>東京の勉強会はすごく久しぶりの参加でした。
以前は、誰かしらが発表をして、それを聞く感じの会でしたが、最近はもくもくがメインのようでした。</p>

<p>レポジトリは ... <a href="https://github.com/sharkpp/Jugemutter">sharkpp/Jugemutter: 長文投稿専用クライアント「じゅげむったー」</a> となります。</p>

<h2 id="twitter-api-%E3%81%AE-%22could-not-authenticate-you.%22-%E5%95%8F%E9%A1%8C">Twitter API の "Could not authenticate you." 問題</h2>

<p>Twitter API への要求で <code>Could not authenticate you.</code> とレスポンスが返ってくる問題、どうも <a href="https://bugreports.qt.io/browse/QTBUG-61125">[QTBUG-61125] QOAuth1 creates an invalid signature for percent encoded query - Qt Bug Tracker</a> のバグが原因ではなかった様子。</p>

<p>なので、ちょっと踏み込んで調べて見ることにする。</p>

<p>とりあえず、比較のために PHP で同じように Twitter API を使って見ることに。</p>

<p>ライブラリは <a href="https://github.com/risan/oauth1">risan/oauth1: 🔐 OAuth 1.0 client library for PHP</a> をとりあえず試して見る。</p>

<p>何はともあれ composer をインストール</p>

<pre><code class="console">$ php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
$ php -r "if (hash_file('SHA384', 'composer-setup.php') === '544e09ee996cdf60ece3804abc52599c22b1f40f4323403c44d44fdfdd586475ca9813a858088ffbc1f233e9b180f061') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
$ php composer-setup.php
$ php -r "unlink('composer-setup.php');"
</code></pre>

<p>ライブラリをインストール</p>

<pre><code class="console">$ php composer.phar require risan/oauth1
</code></pre>

<p>で、いろいろ試している..</p>

<p>ソースは <a href="https://github.com/risan/oauth1#basic-usage">risan/oauth1: Basic Usage</a> を基に <code>$ sudo php -S localhost:80 -t .</code> で動かします。</p>

<pre><code class="php">&lt;?php

// Start session.
session_start();

// Include Composer autoload file.
require 'vendor/autoload.php';

// Create a new instance of OAuth1 client for Twitter.
$oauth1 = new OAuth1\OAuth1([
    'consumer_key'      =&gt; 'YOUR_TWITTER_CONSUMER_KEY',
    'consumer_secret'   =&gt; 'YOUR_TWITTER_CONSUMER_SECRET',
    'request_token_url' =&gt; 'https://api.twitter.com/oauth/request_token',
    'authorize_url'     =&gt; 'https://api.twitter.com/oauth/authorize',
    'access_token_url'  =&gt; 'https://api.twitter.com/oauth/access_token',
    'callback_url'      =&gt; 'http://localhost:80', // Optional
    'resource_base_url' =&gt; 'https://api.twitter.com/1.1/'
]);

// STEP 4: ACCESS PROTECTED RESOURCE.
if (isset($_SESSION['access_token'])) {
    // Retrieve the saved AccessToken instance (see STEP 3).
    $accessToken = unserialize($_SESSION['access_token']);

    // Set access token.
    $oauth1-&gt;setGrantedAccessToken($accessToken);

    // Get authenticated user's timeline.
    // @return Psr\Http\Message\ResponseInterface instance
    //$response = $oauth1-&gt;get('statuses/user_timeline.json');
    $response = $oauth1-&gt;post('statuses/update.json', [
        'query' =&gt; [
        //'form_params' =&gt; [ // risan/oauth1 が対応していない様子
            'status' =&gt; 'test',
        ]
    ]);

    echo $response-&gt;getBody()-&gt;getContents();
}

// STEP 3: GET ACCESS TOKEN.
elseif (isset($_GET['oauth_token']) &amp;&amp; isset($_GET['oauth_verifier'])) {
    // Retrieve the previously generated request token (see STEP 1).
    $requestToken = unserialize($_SESSION['request_token']);

    // Get access token.
    // @return OAuth1\Tokens\AccessToken instance
    $accessToken = $oauth1-&gt;accessToken($requestToken, $_GET['oauth_token'], $_GET['oauth_verifier']);

    // Serialize AccessToken instance and save it to session.
    $_SESSION['access_token'] = serialize($accessToken);

    // No longer need request token.
    unset($_SESSION['request_token']);

    // Reload page.
    header("Location: {$_SERVER['PHP_SELF']}");
    exit();
}

// STEP 1: Get request token.
// STEP 2: Redirect to authorization page.
else {
    // Get request token.
    // @return OAuth1\Tokens\RequestToken instance
    $requestToken = $oauth1-&gt;requestToken();

    // Serialize RequestToken instance and save to session.
    $_SESSION['request_token'] = serialize($requestToken);

    // Redirect to authorization url.
    $authorizationUrl = $oauth1-&gt;buildAuthorizationUrl($requestToken);
    header("Location: {$authorizationUrl}");
    exit();
}
</code></pre>

<p>あれ？</p>

<p><del><code>{"code":32,"message":"Could not authenticate you."}</code> になるっぽい、なぜだろう？</del> <code>risan/oauth1</code> の実装が POST の フォームに対応していなかっただけのようだ。</p>

<p>↑から、URLのクエリ形式で送れば大丈夫っぽい。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr">むぅPOSTのフォームではなくURLのクエリで送れば(や%も大丈夫っぽいなぁ (おわり <a href="https://twitter.com/hashtag/qtjp?src=hash&amp;ref_src=twsrc%5Etfw">#qtjp</a> <a href="https://twitter.com/hashtag/jugemutter?src=hash&amp;ref_src=twsrc%5Etfw">#jugemutter</a></p>&mdash; これでチーム「さめたすたす」は最強だ！ (@sharkpp) <a href="https://twitter.com/sharkpp/status/921656868535021570?ref_src=twsrc%5Etfw">2017年10月21日</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>何か勘違いしているのか？</p>

<p>というところでタイムアップ。</p>

<h2 id="twitter-api-reference-%E3%81%AE-url-%E3%81%8C%E5%A4%89%E3%82%8F%E3%81%A3%E3%81%9F%EF%BC%9F">Twitter API reference の URL が変わった？</h2>

<p>なんか、Twitter API のリファレンスページのアドレスが変わっている様子。</p>

<pre><code>https://dev.twitter.com/rest/reference/post/statuses/update
</code></pre>

<p>↓</p>

<pre><code>https://developer.twitter.com/en/docs/tweets/post-and-engage/api-reference/post-statuses-update
</code></pre>

<p>リダイレクトで飛ばして欲しかったなぁ。</p>

<h2 id="%E5%8B%89%E5%BC%B7%E4%BC%9A">勉強会</h2>

<h3 id="qt-contributors-summit-2017-%E3%81%A8-qt-world-summit-2017-%E3%81%AE%E5%A0%B1%E5%91%8A">Qt contributors summit 2017 と Qt World Summit 2017 の報告</h3>

<p>2017年10月9日〜10月10日に開催された <a href="https://www1.qt.io/event/qt-contributors-summit-2017/">Qt Contributors' Summit 2017</a> および、2017年10月10日〜10月12日に開催された <a href="https://www1.qt.io/event/qt-world-summit-2017/">Qt World Summit</a> の<a href="https://twitter.com/takumiasaki">朝木卓見(@takumiasaki)</a> さんによる報告。</p>

<p>関連するリンク</p>

<ul>
<li><a href="https://wiki.qt.io/Qt_contributors_summit_2017">Qt contributors summit 2017 - Qt Wiki</a></li>
<li><a href="https://wiki.qt.io/Qt_contributors_summit_2017_Program">Qt contributors summit 2017 Program - Qt Wiki</a> - セッションプログラム一覧</li>
<li><a href="https://wiki.qt.io/QtCS2017_QtCore">QtCS2017 QtCore - Qt Wiki</a> - 該当のセッションで出た話</li>
<li><a href="http://blog.qt.io/blog/2017/10/11/qt-3d-studio-source-code-pre-release-snapshots-available/">Qt 3D Studio Source Code and Pre-Release Snapshots Available - Qt Blog</a></li>
<li><a href="https://github.com/KDAB">KDAB</a></li>
</ul>

<h3 id="qt-3d-studio-%E3%81%AE%E7%B4%B9%E4%BB%8B">Qt 3D Studio の紹介</h3>

<p><a href="https://twitter.com/shin1_okada">岡田 真一(@shin1_okada)</a> さんによる、Qt 3D Studio の紹介。</p>

<p>現状、macOS向けは、ビルドできるけど大きなデモを動かす、Qt Creator から動作させる、などでクラッシュする、とのこと。</p>

<p>関連するリンク</p>

<ul>
<li><a href="http://blog.qt.io/blog/2017/10/11/qt-3d-studio-source-code-pre-release-snapshots-available/">Qt 3D Studio Source Code and Pre-Release Snapshots Available - Qt Blog</a></li>
<li><a href="https://codereview.qt-project.org/#/admin/projects/qt3dstudio/qt3dstudio">codereview.qt-project Code Review</a> - デフォルトだと submodule が取得されないので注意</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://qiita.com/hnw/items/d72815e2d45f898d9184">SipHashについてのメモ - Qiita</a></li>
<li><a href="http://docs.guzzlephp.org/en/5.3/clients.html">Clients — Guzzle Documentation</a></li>
<li><a href="https://qiita.com/k-holy/items/4362b8cce85642e477ec">Windows + Goutte 3.0でHTTPSでのリクエストで発生するSSL証明書のエラー - Qiita</a></li>
<li><a href="https://qiita.com/mikakane/items/58c30b243bba697ec3fe">guzzle で Http通信する - Qiita</a></li>
<li><a href="https://developer.twitter.com/en/docs/tweets/post-and-engage/api-reference/post-statuses-update">POST statuses/update — Twitter Developers</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その７]]></title>
            <link href="http://www.sharkpp.net/blog/2017/10/04/jugemutter-development-diary-7th.html"/>
            <updated>2017-10-04T01:05:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/10/04/jugemutter-development-diary-7th.html</id>
            <content type="html"><![CDATA[<p>前回に引き続き <a href="https://qt-users.connpass.com/event/67390/">Qt 勉強会 @ Nagoya No13 一区切り会 - connpass</a> に参加しました。
とりあえず、今回でもくもく会は一旦一区切りとなるので、このあとはボチボチと進めていこうかなと思います。</p>

<p>レポジトリは ... <a href="https://github.com/sharkpp/Jugemutter">sharkpp/Jugemutter: 長文投稿専用クライアント「じゅげむったー」</a> となります。</p>

<p>画面は、多言語対応をしたので載っけます。</p>

<p><img src="/images/2017_0930_jugemutter_jp.png" alt="日本語版" /></p>

<p>次はなんちゃっての英語版です。</p>

<p><img src="/images/2017_0930_jugemutter_en.png" alt="英語版" /></p>

<h2 id="twitter-api-%E3%81%A7-%22could-not-authenticate-you.%22-%E3%81%8C%E5%87%BA%E3%82%8B">Twitter API で "Could not authenticate you." が出る</h2>

<p>Twitter API への要求で <code>Could not authenticate you.</code> とレスポンスが返ってくる件、HMACとかの計算を手動でやって検証しようかと考えたけど、そうだその前に、Qtのバグトラッカーで登録ないか、と、探して見たら...</p>

<p><a href="https://bugreports.qt.io/browse/QTBUG-61125">[QTBUG-61125] QOAuth1 creates an invalid signature for percent encoded query - Qt Bug Tracker</a></p>

<p>まさに、ドンピシャなものが、４ヶ月も前の 5/31 に報告が上がっていました。</p>

<p>それでもって、修正完了の 5.9.2 でリリースらしい。</p>

<p><a href="https://wiki.qt.io/Qt_5.9_Release">Qt 5.9 Release - Qt Wiki</a> によると、この記事を書いている時点では <code>September 2017</code> に公開予定らしいので、もう少し待つ必要があるみたい。</p>

<p>まあ、今回の教訓は先にバグトラッカーを探すべきだったのかなぁと、言うこと。</p>

<h2 id="%E3%80%90%E6%82%B2%E5%A0%B1%E3%80%91%E3%81%98%E3%82%85%E3%81%92%E3%82%80%E3%81%A3%E3%81%9F%E3%83%BC%E7%94%A8twitter%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%8C%E5%87%8D%E7%B5%90%E3%81%95%E3%82%8C%E3%81%A6%E3%81%9F%E4%BB%B6%E3%80%90%E3%81%84%E3%81%A4%E3%81%AE%E3%81%BE%E3%81%AB%E3%80%91">【悲報】じゅげむったー用Twitterアカウントが凍結されてた件【いつのまに】</h2>

<p>とりあえず、APIの要求は、Qtのバグが原因で特定文字で必ずエラーが返ってくるらしいので、とりあえず諦めて他のことを進めることにしました。</p>

<p>で、何をやろうかと考えたところで、せっかくマルチアカウント管理を実装したので試してみようと久しぶりにサブ垢（公式垢として利用しようと登録したもの）へログインしたところ...</p>

<p><img src="/images/2017_0930_twitter_frozen_acctount.png" alt="凍結済みアカウント(再現)" /></p>

<p>ん？ んん？ は？ と、凍結！？ 
※ スクショは撮り忘れたので当時の状況を可能な限り再現しています</p>

<p>と、言うわけで、何時のまにか今流行り（？）の凍結祭りに参加していたようです。
とりあえず、慌てて解除方法をググり、凍結の解除申請をしました。</p>

<p>そして、30分後...</p>

<p><img src="/images/2017_0930_twitter_thawed_account.png" alt="凍結解除" /></p>

<p>ほっ。</p>

<p>ヘッダー画像やプロフィール画像、あとは本垢への相互フォロー、そして鍵垢と、諸々設定しました。</p>

<h2 id="%E5%A4%9A%E8%A8%80%E8%AA%9E%E5%AF%BE%E5%BF%9C">多言語対応</h2>

<p>Qt で .ts / .qm でのラベルなどの多言語対応、昔々もやった記憶があるけど、忘却の彼方に近いので、改めて調べた。</p>

<h3 id="%E8%A8%80%E8%AA%9E%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%8C%87%E5%AE%9A">言語ファイルの指定</h3>

<p><code>.pro</code> を開き、言語ファイルのパスを設定。パスは適時読み替えてください。
 複数言語ある場合は、、スペース区切りで後ろに追加します。</p>

<pre><code class="ini">     :
TRANSLATIONS = src/i18n/ja_JP.ts
     :
</code></pre>

<h3 id="%E7%BF%BB%E8%A8%B3%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF">翻訳ファイルの読み込み</h3>

<p>起動時に現在のロケールを元に言語ファイルを読み込む処理を実装します。</p>

<p><code>.qm</code> ファイルはアプリケーションのリソースとして埋め込み、そこから読むようにしています。</p>

<pre><code class="cpp">            :
    // 翻訳
    QString locale = QLocale::system().name();
    QTranslator translator;
    translator.load(locale, ":/i18n");
    a.installTranslator(&amp;translator);
            :
</code></pre>

<p><code>locale</code> の値は、日本語環境だったら <code>ja_JP</code> です。</p>

<p>リソースへの登録はこんな感じ</p>

<p><img src="/images/2017_0930_qm_in_qrc.png" alt="qmファイルのqrcへの登録" /></p>

<h3 id="%E7%BF%BB%E8%A8%B3%E5%AF%BE%E8%B1%A1%E3%81%AE%E6%8C%87%E5%AE%9A">翻訳対象の指定</h3>

<p>まずは、翻訳したいものを <a href="http://doc.qt.io/qt-5/qobject.html#tr"><code>tr(...)</code></a> で囲います。</p>

<pre><code class="diff">     if (tweetQueue.isEmpty()) {
          finishPost();
 -        QMessageBox::information(this, qAppName(), "投稿を完了しました。");
 +        QMessageBox::information(this, qAppName(), tr("Your post has been completed."));
          return;
      }
</code></pre>

<p>こんな感じ。</p>

<h3 id="%E7%BF%BB%E8%A8%B3%E5%AF%BE%E8%B1%A1%E3%81%AE%E6%8A%BD%E5%87%BA">翻訳対象の抽出</h3>

<p>QtCreator のメニューから「ツール」→「外部」と辿り「翻訳を更新(lupdate)」を実行します。</p>

<p><img src="/images/2017_0930_qtcreator_extrnal_tools_linguist.png" alt="翻訳を更新" /></p>

<p>すると、 先ほど、<code>tr(...)</code> で囲った部分や <code>.ui</code> ファイルから翻訳対象が抽出されファイルへ書き出されます。
ソース側の記述が変わった時は、同じように「翻訳を更新(lupdate)」を実行すると、変更が適用されます。</p>

<h3 id="%E7%BF%BB%E8%A8%B3">翻訳</h3>

<p>Linguist を起動し</p>

<p><img src="/images/2017_0930_linguist.png" alt="Linguist" /></p>

<p>抽出された文字列を翻訳していきます。</p>

<h3 id="qt-message-file-format-%E3%82%92%E3%83%93%E3%83%AB%E3%83%89">Qt message file format をビルド</h3>

<p><code>.ts</code> を <code>.qm</code> (Qt message file format)へと変換します。
GNU gettext の <code>.po</code> と <code>.mo</code> との関係と同じですね。</p>

<p>QtCreator のメニューから「ツール」→「外部」と辿り「翻訳をリリース(lrelease)」を実行します。
これで <code>.ts</code> から <code>.qm</code> へと変換します。</p>

<h3 id="%E8%B5%B7%E5%8B%95%E7%A2%BA%E8%AA%8D">起動確認</h3>

<p>実際に翻訳できているかどうかは、ロケールを切り替えると確認できます。</p>

<p>普通に起動すると……</p>

<p><img src="/images/2017_0930_jugemutter_jp.png" alt="日本語版" /></p>

<p>こう。</p>

<p>言語を英語にすると……</p>

<pre><code class="console"># LANG=en_US.UTF-8 open ./Jugemutter.app
</code></pre>

<p><img src="/images/2017_0930_jugemutter_en.png" alt="英語版" /></p>

<p>こうなります。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://kazuto-yoshida.com/twitter-unfreeze-application.html">Twitterアカウント凍結解除方法と申請入力例</a></li>
<li><a href="https://forum.qt.io/topic/57863/solved-how-to-embed-qm-translation-files-into-executable">[solved]How to embed qm translation files into executable | Qt Forum</a></li>
<li><a href="https://github.com/wireshark/wireshark/tree/master/ui/qt">wireshark/ui/qt at master · wireshark/wireshark</a></li>
<li><a href="http://doc.qt.io/qt-5/qtlinguist-hellotr-example.html">Hello tr() Example | Qt Linguist Manual</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その６]]></title>
            <link href="http://www.sharkpp.net/blog/2017/09/27/jugemutter-development-diary-6th.html"/>
            <updated>2017-09-27T12:40:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/09/27/jugemutter-development-diary-6th.html</id>
            <content type="html"><![CDATA[<p>遅くなりましたが、今月も引き続き参加した <a href="https://qt-users.connpass.com/event/65548/">Qt 勉強会 @ Nagoya No12 - connpass</a> のまとめです。</p>

<p>重大発表があってちょっとびっくりでした。
それはともかく今回も長文投稿専用Twitterクライアントの開発の続きでした。</p>

<p>レポジトリは ... <a href="https://github.com/sharkpp/Jugemutter">sharkpp/Jugemutter: 長文投稿専用クライアント「じゅげむったー」</a> となります。</p>

<p>画面は...変わってないからいいですね。</p>

<h2 id="%E9%80%B2%E6%8D%97">進捗</h2>

<p>相変わらず <code>Could not authenticate you.</code> がなぜか出る、と。</p>

<p>そこで、先日に <a href="https://github.com/sharkpp/http-peeper">sharkpp/http-peeper: This is a proxy server for peeping HTTP/HTTPS communication, mainly for debugging.</a> と言うツールを NodeJS でサクッと作ってみました。
一言で言うと https 通信の間に割り込んで中身を見てしまうツールです。</p>

<p>今回は、これの改良というか改善？をして、他のソフトの通信の内容と比較してみました。</p>

<p>まあ、結果として、少なくともパラメータやヘッダなどには特に違いがなさそうだ、という事がわかりました。
困ったことに、全く解決になっていないです...</p>

<p>あとは、HMACなどの計算時に無駄にエスケープしている事で、サーバー側での検証時と値が違うのかなぁと。
まあ、そうだとすると Qt 側のバグなのですが...</p>

<p>と、まあそんなところで終了。</p>

<p>まあ、あとは重大発表として Qt 勉強会 @ Nagoya が残念なことに今回で一旦休止の発表があり（次回が一旦の〆）となってしまいました。
なかなか、会場の都合が付かないので難しいですねぇ。</p>

<h2 id="%E4%BB%96%E3%81%AE%E3%82%BD%E3%83%95%E3%83%88%E3%81%AE%E9%80%9A%E4%BF%A1%E3%82%92%E8%A6%97%E3%81%8D%E8%A6%8B">他のソフトの通信を覗き見</h2>

<p>先のツール（<a href="https://github.com/sharkpp/http-peeper">http-peeper</a>）、証明書は当然本物ではなく所謂オレオレ証明書と呼ばれているものを使っている都合、証明書の検証をしている（OpenSSL等のライブラリを使っている場合は基本検証している）とエラーが出てしまうのです。
そのために、そのままだと他のソフトには使えないのでした。
さてどうするか？と考えていたところ、そういえばオレオレ認証局の証明書を作りシステムに登録して信頼、その認証局で署名することで対応と書かれている記事を見かけた覚えがあったので、とりあえずツールに組み込む前に手作業でやって見ました。</p>

<h3 id="%E6%89%8B%E9%A0%86">手順</h3>

<p><code>openssl.conf</code> をコピーして書き換えたり、いろいろして見ましたが結局こんな感じで試しました。</p>

<pre><code class="console">$ mkdir demoCA
$ cd demoCA
$ mkdir newcerts certs crl private
$ chmod 700 private
$ touch index.txt
$ echo 00 |tee serial
$ openssl req -batch -new -x509 -sha256 -days 36500 -newkey rsa:4096 -out ca.crt -keyout demoCA/private/ca.key -subj "/C=JP/ST=Tokyo/L=Tokyo/O=root.http-peeper.local/OU=root.http-peeper.local/CN=root.http-peeper.local"
$ openssl rsa -in demoCA/private/ca.key -out demoCA/private/ca.key
$ openssl req -batch -new -sha256 -days 36500 -newkey rsa:4096 -out demoCA/server.csr -keyout demoCA/private/server.key -batch -subj "/C=JP/ST=Tokyo/L=Tokyo/O=root.http-peeper.local/OU=api.twitter.com/CN=api.twitter.com"
$ openssl rsa -in demoCA/private/server.key -out demoCA/private/server.key
$ openssl ca -batch -days 36500 -keyfile demoCA/private/ca.key -cert demoCA/ca.crt -in demoCA/server.csr -out demoCA/server.crt
</code></pre>

<p>そして <code>ca.crt</code> を開き</p>

<p><img src="/images/2017_0916_macos_cert_reg_to_system.png" alt="証明書の追加" /></p>

<p>と、システムに登録します。</p>

<p>登録したら「キーチェーンアクセス」から証明書を探し</p>

<p><img src="/images/2017_0916_macos_view_cert_detail.png" alt="証明書を右クリック" /></p>

<p>右クリックで「情報を見る」から「常に信頼」を選び</p>

<p><img src="/images/2017_0916_macos_trust_root_cert.png" alt="証明書を信頼" /></p>

<p>と信頼させます。</p>

<p><img src="/images/2017_0916_macos_trusted_cert.png" alt="キーチェーンアクセス" /></p>

<p>「キーチェーンアクセス」では「この証明書はこのアカウントにとって信頼されている物として指定されています」と表示されています。</p>

<p>あとは、 <code>server.key</code> と <code>server.crt</code> を</p>

<pre><code class="console">$ openssl x509 -in server.crt -out tmp.der -outform DER
$ openssl x509 -in tmp.der -inform DER -out server-cert.pem -outform pem
$ openssl rsa -in server.key -out tmp.der -outform DER
$ openssl rsa -in tmp.der -inform DER -out server-key.pem -outform pem
</code></pre>

<p>と .pem 形式に変換（元々.pemで利用していたため）し利用しました。</p>

<p>手順はツールに組み込んで自動化したいところですが、とりあえず他のソフトの通信を覗き見できるようになりました。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://qiita.com/mkgask/items/8d66dcada58a485e3585#_reference-0c1fe982bfae4639fb65">Chrome58以降でハネられないSHA-2でオレオレ認証局署名のあるオレオレ証明書 - Qiita</a></li>
<li><a href="http://qiita.com/ll_kuma_ll/items/13c962a6a74874af39c6#20170508%E8%BF%BD%E8%A8%98">オレだよオレオレ認証局で証明書つくる - Qiita</a></li>
<li><a href="http://qiita.com/softark/items/15a5280bd38c5dd97b48">オレオレ認証局とオレオレ証明書 - Qiita</a></li>
<li><a href="http://qiita.com/NakashimaKeisuke_zerodaynet/items/bfc77e5fe98b587532d0">SSL証明書設定でよくやってることをまとめる。 - Qiita</a></li>
<li><a href="http://qiita.com/kunichiko/items/12cbccaadcbf41c72735">RSA鍵、証明書のファイルフォーマットについて - Qiita</a></li>
<li><a href="https://hacknote.jp/archives/13939/">SSL証明書を.crtから.pemに変換する方法 | ハックノート</a></li>
<li><a href="http://certificate.fyicenter.com/2134_OpenSSL_ca_Error_..._directory_for_new_certificate_..._.html">OpenSSL - OpenSSL "ca" Error "... directory for new certificate ..."</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その５]]></title>
            <link href="http://www.sharkpp.net/blog/2017/08/23/jugemutter-development-diary-5th.html"/>
            <updated>2017-08-23T01:50:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/08/23/jugemutter-development-diary-5th.html</id>
            <content type="html"><![CDATA[<p>さて、今月も引き続き参加した <a href="https://qt-users.connpass.com/event/62861/">Qt 勉強会 @ Nagoya No11 - connpass</a> のまとめ。</p>

<p>つぶやきは <a href="https://togetter.com/li/1146658">Qt 勉強会 @ Nagoya No11 つぶやきまとめ - Togetterまとめ</a> でまとめられています。</p>

<p>先月の勉強会から日付(YY.MM)が付かなくなりました。</p>

<p>さて、今回も長文投稿専用Twitterクライアントの開発の続きをしました。</p>

<p>レポジトリは ... <a href="https://github.com/sharkpp/Jugemutter">sharkpp/Jugemutter: 長文投稿専用クライアント「じゅげむったー」</a> です。</p>

<p><img src="/images/2017_0819_jugemutter1.png" alt="画面" /></p>

<h2 id="%E9%80%B2%E6%8D%97">進捗</h2>

<p><img src="/images/2017_0819_jugemutter2.png" alt="テスト画面" /></p>

<p>とりあえず、分割処理のいろんなパターンのテストがやっと通ったので、ようやく一山越えた感じです。
ここまで長かった。</p>

<p>で、<code>Could not authenticate you.</code> がなぜか出る、と。
これは、<a href="https://dev.twitter.com/overview/api/response-codes">Error Codes &amp; Responses — Twitter Developers</a> によると、『<ruby>ダイヤルしても通話を完了できませんでした。<rp>(</rp><rt>Your call could not be completed as dialed.</rt><rp>)</rp></ruby>』って意味らしい。</p>

<h2 id="wireshark-%E3%81%A7-https-%E3%81%AE%E4%B8%AD%E8%BA%AB%E3%81%AE%E7%A2%BA%E8%AA%8D">Wireshark で https の中身の確認</h2>

<p>Twitter の API への指示がおかしいらしいので、なんとか調べられないかとググってた所、Wiresharkでhttpsの中身が確認できるとの記事を発見。</p>

<pre><code># SSLKEYLOGFILE=~/tls_key.log {ChromeやFirefox、cURLなどのパス}
</code></pre>

<p>で起動し、Wireshark で</p>

<p><img src="/images/2017_0819_https_decrypt_in_wireshark.png" alt="Wireshark" /></p>

<p>と、このような設定をすれば良いらしい。</p>

<p>が、解析画面</p>

<p><img src="/images/2017_0819_wireshark.png" alt="Wireshark" /></p>

<p>を見ても、 <del><code>Decrypted SSL Data</code> なんてタブはもちろん、<code>Frame</code> などのタブも表示されていないので、もしかしてUIがQtベースになった時に何か変わったのかもしれない。</del></p>

<p><img src="/images/2017_0831_wireshark.png" alt="Wireshark" /></p>

<p><code>RSA keys list</code> の設定を触って居たら、なぜかタブが出るようになった。
実装自体はされているようだ。</p>

<p>あと、そもそもの話、Qtの通信を覗きたいのが目的。
なので、Qtで上の方法が使えないと意味がないんだけど使えるのだろうか？</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://qiita.com/Hexa/items/ce0ac23526df12a64ad0">暗号化された Application Data を復号する - Qiita</a></li>
<li><a href="https://f-o.org.uk/2017/decrypting-https-traffic-without-a-key.html">Floating Octothorpe: Decrypting HTTPS traffic without a key</a></li>
<li><a href="https://serverfault.com/questions/263530/how-can-i-filter-https-when-monitoring-traffic-with-wireshark">How can I filter https when monitoring traffic with Wireshark? - Server Fault</a></li>
<li><a href="http://troushoo.blog.fc2.com/blog-entry-234.html">Wireshark を用いて、クライアント側の情報のみでHTTPS 通信を複合する方法</a></li>
<li><a href="http://qiita.com/toshihirock/items/acbf9800f7e784118e46">HTTPSのパケットをwiresharkで見てみる - Qiita</a></li>
<li><a href="https://gist.github.com/summerwind/a482dd1f8e9887d26199">Wireshark で HTTP/2 over TLS の通信をダンプする方法</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Key_Log_Format">NSS Key Log Format - Mozilla | MDN</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その４]]></title>
            <link href="http://www.sharkpp.net/blog/2017/07/16/jugemutter-development-diary-4th.html"/>
            <updated>2017-07-16T18:10:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/07/16/jugemutter-development-diary-4th.html</id>
            <content type="html"><![CDATA[<p>ただいま、<a href="https://github.com/sharkpp/Jugemutter">じゅげむったー</a> の実装中なのです。</p>

<p>まあ、それはともかくとして、「じゅげむったー」実装中に Qt 関連で躓いた部分や発生した問題の解決方法を、メモしておいたら溜まってきたので一度放出しようかと。</p>

<h2 id="%E3%83%89%E3%83%AD%E3%83%83%E3%83%97%E3%83%80%E3%82%A6%E3%83%B3%E5%9E%8B%E3%81%AE%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8Bmacos">ドロップダウン型のダイアログを表示する(macOS)</h2>

<p>macOS でウインドウのタイトルバーの直下からまるで舌ベロのように垂れ下がるドロップダウン形式のダイアログの実装方法。</p>

<p><img src="/images/2017_0716_macOS_QDialog_sheet_style.png" alt="QDialogのSheetスタイル" /></p>

<p>こんな感じのダイアログの表示スタイルです。</p>

<p>Apple 的には <code>[Sheet](https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Sheets/Concepts/AboutSheets.html)</code> って名称らしいですね。</p>

<pre><code class="cpp">#if defined(Q_OS_MAC)
    setWindowFlags(Qt::Sheet);
#endif
</code></pre>

<p>これだけです。</p>

<p><code>#if</code> と <code>#endif</code> はなくても良さそうですが、一応。</p>

<p>そうして <code>.exec()</code> などを呼び出せば表示できます。</p>

<h2 id="%E3%83%AA%E3%82%B9%E3%83%88%E4%B8%8B%E9%83%A8%E3%81%AE%E8%BF%BD%E5%8A%A0%E3%82%84%E5%89%8A%E9%99%A4%E3%83%9C%E3%82%BF%E3%83%B3macos">リスト下部の追加や削除ボタン(macOS)</h2>

<p><img src="/images/2017_0716_macOS_list_buttons.png" alt="リスト下部のボタン" /></p>

<p>こんな感じでリストの下部に追加や削除のボタンがついているやつ。</p>

<p>これは Apple 的には <code>NSAddTemplate</code> と <code>NSRemoveTemplate</code> って言うらしい。</p>

<p>この機能はどうやら実装されていないようなので、レイアウトとボタンをそれらしく配置することで再現するしかない様です。
まあ、Windows や Linux でも同じ機能にしたいなら、そちらの方が良いかもですね。</p>

<h2 id="qdialog-%E3%81%AE%E5%A4%A7%E3%81%8D%E3%81%95%E3%82%92%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%81%AB%E5%90%88%E3%82%8F%E3%81%9B%E3%82%8B">QDialog の大きさをコンテンツに合わせる</h2>

<p>コンストラクタで <a href="http://doc.qt.io/qt-5/qwidget.html#adjustSize">void QWidget::adjustSize()</a> を呼び出せばOK。</p>

<pre><code class="cpp">MyDialog::MyDialog(QWidget *parent)
    : QDialog(parent)
    , ui(new Ui::MyDialog)
{
    ui-&gt;setupUi(this);
    adjustSize();
}
</code></pre>

<h2 id="%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%AD%E3%83%BC%E3%83%89%E3%81%95%E3%82%8C%E3%81%9F%E3%82%B7%E3%82%B0%E3%83%8A%E3%83%AB%E3%81%A8%E3%81%AE%E6%8E%A5%E7%B6%9A%E6%96%B9%E6%B3%95">オーバーロードされたシグナルとの接続方法</h2>

<p>Qt 5 から？だったか <code>connect(hoge, SIGNAL(...), ...)</code> ではなく <code>connect(hoge, &amp;..., ...)</code> で記述できるようになった。
なったのだけど、じゃあオーバーロードして宣言されているシグナルとの接続はどうするんだろう、と。</p>

<p>ちょうど必要な状況にぶち当たったので調べてみることに。</p>

<p>まず、</p>

<pre><code class="cpp">    connect(m_tagListWidget, &amp;QComboBox::currentIndexChanged,
            this, &amp;TagInput::onTagListSelected);
</code></pre>

<p>こんな感じで記述すると <code>error: no matching member function for call to 'connect'</code> みたいなエラーが出ます。</p>

<p>解決方法は、<code>QtGlobal</code> の <a href="http://doc.qt.io/qt-5/qtglobal.html#qOverload">QOverload</a> テンプレートクラスを利用すればいいみたいです。</p>

<pre><code class="cpp">    connect(m_tagListWidget, QOverload&lt;int&gt;::of(&amp;QComboBox::currentIndexChanged),
            this, &amp;MyClass::onCurrentIndexChanged);
</code></pre>

<p>C++14 が有効であれば、</p>

<pre><code class="cpp">    connect(m_tagListWidget, qOverload&lt;int&gt;(&amp;QComboBox::currentIndexChanged),
            this, &amp;MyClass::onCurrentIndexChanged);
</code></pre>

<p>こうれば良いようです。</p>

<h2 id="%E5%AD%90%E8%A6%81%E7%B4%A0%E3%81%B8%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E3%82%B7%E3%83%BC%E3%83%88%E3%82%92%E9%81%A9%E7%94%A8%E3%81%95%E3%81%9B%E3%81%AA%E3%81%84">子要素へスタイルシートを適用させない</h2>

<p>ウィジェットをカスタマイズするためにスタイルシートで単純に</p>

<pre><code class="css">QFrame { background: #F90; }
</code></pre>

<p>とした場合、これはもちろん、指定した要素に適用されます。</p>

<p>そして、実はこの時に子要素が存在していた場合、その子要素にまでその指定が効いてしまいます。
まあ、HTML のスタイルシートとして考えた場合には、確かにそれはそれで正しいのですが、ちょっと困り者ですね。</p>

<p>では、どうするか？</p>

<pre><code class="css">.QFrame { background: #F90; }
</code></pre>

<p>もしくは</p>

<pre><code class="css">#orangeColor { background: #F90; }
</code></pre>

<p>と要素を限定すればOKです。</p>

<h2 id="qtcreator-%E3%81%A7-qtoolbar-%E3%82%92%E8%87%AA%E7%94%B1%E3%81%AB%E8%A8%AD%E7%BD%AE%E3%81%99%E3%82%8B">QtCreator で QToolBar を自由に設置する</h2>

<p>QtCreator のデザイナでは、どうやら <a href="http://doc.qt.io/qt-5/qtoolbar.html">QToolBar</a> は、ウインドウ内に一つで、<code>QLabel</code> など他のウィジェットのように自由には配置できないようです。
もっとも、普通のアプリケーションでは問題ないとは思います。</p>

<p><code>QToolBar</code> をウィジェット的に扱う場合にはどうするか？</p>

<p>直接 .ui ファイルを編集します。
開くと、「このファイルはデザインモード以外では編集できません。」と出ますし、本来はダメなのですが...
どうしてもデザイナ上で扱いたかったんです。</p>

<p>手順は</p>

<ol>
<li>デザイナで QWidget を追加し、<code>objectName</code> を指定</li>
<li>対象の .ui を「エディタを指定して開く」→「テキストエディタ」で開く</li>
<li>1で指定した名前を探す</li>
<li>クラス名を変更する</li>
<li>ファイルを保存し閉じる</li>
<li>デザイナで開き直す</li>
</ol>

<p>となります。</p>

<p>クラス名の変更は</p>

<pre><code class="diff">      &lt;item&gt;
-      &lt;widget class="QWidget" name="widget1"&gt;
+      &lt;widget class="QToolBar" name="widget1"&gt;
        &lt;property name="sizePolicy"&gt;
</code></pre>

<p>こんな感じですね。</p>

<h2 id="qtoolbar-%E3%81%A7%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E3%82%B7%E3%83%BC%E3%83%88%E3%81%AE%E6%8C%87%E5%AE%9A%E3%81%8C%E5%8F%8D%E6%98%A0%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84macos%E9%99%90%E5%AE%9A%EF%BC%9F">QToolbar でスタイルシートの指定が反映されない(macOS限定？)</h2>

<p>macOS ではどうやらスタイルシートの実装に不具合なのか仕様なのかがあるようで、背景色の指定がうまくできない時があるようです。
<a href="https://bugreports.qt.io/browse/QTBUG-12717?focusedCommentId=216435&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-216435">[QTBUG-12717] Background color for QToolBar is not stylable on Mac - Qt Bug Tracker</a> では <code>border</code> を指定し問題を回避できると書かれていました。</p>

<pre><code class="css">QToolBar {
    background: red;
    border: none;
}
</code></pre>

<p>こんな感じです。</p>

<h2 id="qtoolbar-%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%82%92%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA">QToolbar のデザインをカスタマイズ</h2>

<p>完全にメモです。</p>

<p><a href="https://github.com/sharkpp/QToolbarCustomStyleSample">sharkpp/QToolbarCustomStyleSample</a> で利用したサンプルを公開しています。</p>

<h3 id="%E3%81%98%E3%82%85%E3%81%92%E3%82%80%E3%81%A3%E3%81%9F%E3%83%BC">じゅげむったー</h3>

<p><img src="/images/2017_0716_QToolbar_customize_Jugemutter.png" alt="QToolbar カスタマイズ：じゅげむったー" /></p>

<pre><code class="css">QToolBar {
    background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(54, 54, 67, 255), stop:1 rgba(84, 84, 104, 255));
    border: none;
    icon-size: 48px;
}
QToolButton {
    background: transparent;
    padding: 2px;
    margin: 0;
    spacing: 0;
    border: none;
    width: 56px;
    height: 48px;
}
QToolButton:checked {
    background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(13, 13, 16, 255), stop:1 rgba(33, 33, 41, 255));
}
QToolButton:hover, QToolButton:checked:hover {
    background-color: rgb(96, 96, 96);
}
QToolButton:pressed {
    background-color: rgb(64, 64, 64);
}
</code></pre>

<h3 id="qt-creator-%E9%A2%A8">Qt Creator 風</h3>

<p>あくまで、Qt Creator 風です。
選択時にアイコンの色が変わるとかその辺りは実装できていません。</p>

<p><img src="/images/2017_0716_QToolbar_customize_QtCreatorLike.png" alt="QToolbar カスタマイズ：Qt Creator 風" /></p>

<pre><code class="css">QToolBar {
    background: #444;
    border: none;
    icon-size: 24px;
    padding: 0;
    margin: 0;
    spacing: 0;
}
QToolBar QToolButton {
    background: transparent;
    border: none;
    width: 70px;
    padding: 4px;
    margin: 0;
    spacing: 0;
    color: #fff;
}
QToolBar QToolButton:checked,
QToolBar QToolButton:pressed {
    background: #282828;
}
</code></pre>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://qiita.com/false-git@github/items/cbda9ddaaac5b6c81427">Qtアプリのサンプル - Qiita</a></li>
<li><a href="http://doc.qt.io/qt-5/appicon.html">Setting the Application Icon | Qt 5.8</a></li>
<li><a href="http://doc.qt.io/qt-5/qtwidgets-widgets-windowflags-example.html">Window Flags Example | Qt Widgets 5.8</a></li>
<li><a href="http://doc.qt.io/qt-5/qt.html#WindowType-enum">Qt Namespace #WindowType-enum | Qt Core 5.8</a></li>
<li><a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/Sheets/Concepts/AboutSheets.html">About Sheets</a></li>
<li><a href="https://forum.qt.io/topic/33448/solved-resize-qdialog-to-fit-all-contents/9">[Solved] Resize QDialog to fit all contents? | Qt Forum</a></li>
<li><a href="http://www.qtcentre.org/threads/14099-How-to-stop-child-widgets-from-inheriting-parent-s-StyleSheet-and-use-system-default">How to stop child widgets from inheriting parent's StyleSheet and use system default?</a></li>
<li><a href="https://stackoverflow.com/questions/16794695/connecting-overloaded-signals-and-slots-in-qt-5">c++ - Connecting overloaded signals and slots in Qt 5 - Stack Overflow</a></li>
<li><a href="https://bugreports.qt.io/browse/QTBUG-12717">[QTBUG-12717] Background color for QToolBar is not stylable on Mac - Qt Bug Tracker</a></li>
<li><a href="https://stackoverflow.com/questions/10706357/nstableview-with-plus-and-minus-buttons">cocoa - NSTableView with Plus and Minus buttons - Stack Overflow</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Xperia Touch 開封の儀]]></title>
            <link href="http://www.sharkpp.net/blog/2017/06/27/unboxing-xperia-touch.html"/>
            <updated>2017-06-27T00:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/06/27/unboxing-xperia-touch.html</id>
            <content type="html"><![CDATA[<p><a href="http://www.sonymobile.co.jp/product/smartproducts/g1109/">Xperia Touch G1109</a> を買ってみたので開封の儀を執り行いました。</p>

<p>IT系のニュース記事で紹介されたときから気になっていましたが、先日の事、ついに予約開始している事に数日たってから気が付きました。
で、少し悩んだ末にえいやーで、ポチリ、ついにお家に届きました。</p>

<p><img src="/thumbs/9174c9d23a5280589de703c62f101b68-256x256.jpg" alt="開封の儀"></p>

<h2 id="%E9%96%8B%E5%B0%81%E3%81%AE%E5%84%80">開封の儀</h2>

<p>箱の梱包テープには燦然と輝く「SONY」の文字が...</p>

<p><a href="/images/2017_0627_xperia_touch_01.jpg"><img src="/thumbs/f83e6288cbce499b0d286620cf1ce7c2-256x256.jpg" alt="SONYな梱包テープ"></a></p>

<p>厳重な梱包</p>

<p><a href="/images/2017_0627_xperia_touch_02.jpg"><img src="/thumbs/9174c9d23a5280589de703c62f101b68-256x256.jpg" alt="梱包財から出て来たのは？"></a></p>

<p>そして、大きな化粧箱。いろんな製品がこんな感じの化粧箱に入っているけど、一番最初はどこだったんだろう？</p>

<p><a href="/images/2017_0627_xperia_touch_03.jpg"><img src="/thumbs/84b4925001632555113afc6b734dd683-256x256.jpg" alt="四角い化粧箱"></a></p>

<p>裏面</p>

<p><a href="/images/2017_0627_xperia_touch_04.jpg"><img src="/thumbs/8ef6ca2bafaf6f750ba7c9a716e0e423-256x256.jpg" alt="スペックなど"></a></p>

<p>化粧箱をぱかりと開く。</p>

<p><a href="/images/2017_0627_xperia_touch_05.jpg"><img src="/thumbs/90bb0d6fa54877c1e3e77ae0b8628e0f-256x256.jpg" alt="開封"></a></p>

<p>取説や電源などの付属品はスポンジの下に。</p>

<p><a href="/images/2017_0627_xperia_touch_06.jpg"><img src="/thumbs/bfc1a5d557bc0666599c45c06303c623-256x256.jpg" alt="付属品など"></a></p>

<p>大きさを「パックンフラワー」と比較。</p>

<p><a href="/images/2017_0627_xperia_touch_07.jpg"><img src="/thumbs/e8da2167a595a4673c03f8adb1e6b8a3-256x256.jpg" alt="大きさ比較"></a></p>

<p>XPERIA な起動ロゴ</p>

<p><a href="/images/2017_0627_xperia_touch_08.jpg"><img src="/thumbs/e3e26bed4313351a3eab0b97495b0964-256x256.jpg" alt="起動ロゴ"></a></p>

<p>解像度は 1366 x 768 の Full-WXGA ですね。</p>

<p><a href="/images/2017_0627_xperia_touch_09.png"><img src="/thumbs/cefdeea267be8e248ab0ed692193639c-455x455.png" alt="画面の大きさ"></a></p>

<p>中身は Android 7.0 のタブレットの模様</p>

<p><a href="/images/2017_0627_xperia_touch_10.png"><img src="/thumbs/7e42b73f537d0a0c993f7baff5431237-455x455.png" alt="Androidのバージョン"></a></p>

<h2 id="%E3%81%8A%E7%B5%B5%E6%8F%8F%E3%81%8D%E3%81%97%E3%81%A6%E8%A6%8B%E3%81%9F">お絵描きして見た</h2>

<p><a href="/images/2017_0627_xperia_touch_11.png"><img src="/thumbs/625d79158d79b3b312773879e096007a-455x455.png" alt="お絵描き"></a></p>

<h2 id="%E6%98%A0%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F">映してみた</h2>

<p>いろんな材質のテーブルや壁に投影して見ました。</p>

<h3 id="%E9%BB%92%E3%81%A3%E3%81%BD%E3%81%84%E9%9D%A2%E3%81%AB%E3%81%BA%E3%81%8B%E3%83%BC">黒っぽい面にぺかー</h3>

<p><a href="/images/2017_0627_xperia_touch_12.jpg"><img src="/thumbs/f02e4ec549f2fd3b48b0c6a44ea8db3d-256x256.jpg" alt="黒っぽい面に"></a></p>

<h3 id="%E7%99%BD%E3%81%84%E5%A3%81%E3%81%AB%E3%81%BA%E3%81%8B%E3%83%BC">白い壁にぺかー</h3>

<p><a href="/images/2017_0627_xperia_touch_13.jpg"><img src="/thumbs/c834161ebb4509ec60a15f4b428f604b-256x256.jpg" alt="白い壁に"></a></p>

<h3 id="%E6%9C%A8%E7%9B%AE%E5%A3%81%E3%81%AB%E3%81%BA%E3%81%8B%E3%83%BC">木目壁にぺかー</h3>

<p><a href="/images/2017_0627_xperia_touch_14.jpg"><img src="/thumbs/62005a7575ea5a7220403df15a396125-256x256.jpg" alt="木目壁に"></a></p>

<h3 id="%E7%9C%9F%E3%81%A3%E6%9A%97%E9%97%87%E3%81%AB%E3%81%BA%E3%81%8B%E3%83%BC">真っ暗闇にぺかー</h3>

<p><a href="/images/2017_0627_xperia_touch_15.jpg"><img src="/thumbs/406096b7290da0a6019f0d2c8389a4bf-256x256.jpg" alt="真っ暗闇に"></a></p>

<h2 id="%E3%82%82%E3%81%97%E3%81%8B%E3%81%97%E3%81%A6%E5%88%9D%E6%9C%9F%E4%B8%8D%E8%89%AF%EF%BC%9F">もしかして初期不良？</h2>

<p>色々と遊んでいたところ、ボイスコントロールが効かないことに気が付き、すわ！初期不良か！？と思いましたが、どうやら違っていました。</p>

<p>原因から書くと、電源ボタンのある面の保護フィルムを剥がしていなかったことで、マイクに蓋がされていて音声入力がうまくされていなかっただけでした。
気が付くまで、すごい焦ってましたが、気が付いてみると、何だそんな事かいというぐらいの拍子抜けな原因でした。</p>

<p><a href="/images/2017_0627_xperia_touch_16.jpg"><img src="/thumbs/5bd4b4cdc777cc2516ce4ef28a399e3d-256x256.jpg" alt="マイクはここ"></a></p>

<p>投影レンズがある面の保護フィルムは剥がしましたが、電源の方はボタン押せるしいいか、と思ってたのが仇となったようで。</p>

<p>参考に、確認した時のことをメモしておきます。</p>

<ol>
<li>ボイスコントロールのアプリをクリックしてセットアップ</li>
<li>セットアップ完了後に、「Hi Xperia (ハイ エクスペリア)」と呼び掛けて、と表示があったので呼びかける</li>
<li>何回か呼びかけるも、反応しないため、この時点でおかしいことに気が付く</li>
<li>大声で叫んでみたりするも反応なし</li>
<li>カメラで録画してみるも、ほとんどささやくような音量で記録されている</li>
<li>「設定」→「オーディオ設定」→「マイク感度」を探し当て、感度を「自動」から「大」へ変更</li>
<li>やはりだめ。初期不良か？と思い始める</li>
<li>ホーム画面のGoogle検索ボックスのマイクで音声認識してみると、「いまなんじ？」→「今汝」「今何時」と怪しいけど認識はされる</li>
<li>ここで、そういえばマイクはどこにあるのだろうと考え、はっと気が付く</li>
<li>保護フィルムを剥がためすと、認識された！</li>
</ol>

<p>と、当時を再現するとこのような感じでした。</p>

<h2 id="%E6%B0%97%E3%81%AB%E3%81%AA%E3%82%8B%E6%89%80">気になる所</h2>

<ul>
<li>待機状態(映像を映していないタイミング)でのバッテリーの減りが激しい(数時間でなくなる)
バッテリーで持ち運ぶ場合は電源Offの方がよさそう</li>
<li>待機状態でもボイスコントロールは反応するけど、画面ロック時は操作がブロックされる
これはしょうがないので、ロックをしないで使うしかない</li>
<li>ACアダプタのケーブルの長さが、85cmと意外と短い
USB type-C 延長、は大丈夫かわからないから、テーブルタップなどの現現の延長が必要かもしれない</li>
<li>壁側に投影した時のタッチの反応が悪い</li>
</ul>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>しばらく遊んで見た感じ、投影されるキーボードでカタカタ、ターン！は難しいかなと。
結構、誤入力が発生する感じがする。
それよりも bluetooth キーボードを使ったほうがいい気がする。</p>

<p>じゃあ、何に向いているかというと、ゲームやお絵かきなど、指一本でできる作業であれば、いい感じに操作できそう。
公式ページからリンクが貼られている、フルーツを斬るゲームやエアーホッケーなゲームなどは思った通りに反応してかなり楽しい。
あとは、スマホ用のゲームは縦向き固定のことが多いのでちょっと操作し難しいかもしれない。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://www.sonymobile.co.jp/product/smartproducts/g1109/">Xperia Touch G1109 | ソニーモバイルコミュニケーションズ</a></li>
<li><a href="http://datapro.jbmia.or.jp/data/DPJ_Guide_3rd_JP_.pdf">データプロジェクター表記ガイドライン 第３版</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その３]]></title>
            <link href="http://www.sharkpp.net/blog/2017/06/17/jugemutter-development-diary-3rd.html"/>
            <updated>2017-06-17T22:57:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/06/17/jugemutter-development-diary-3rd.html</id>
            <content type="html"><![CDATA[<p>さて、先月に引き続いて今月も参加した <a href="https://qt-users.connpass.com/event/58337/">Qt 勉強会 @ Nagoya No9(17.06) - connpass</a> のまとめ。</p>

<p>つぶやきは <a href="https://togetter.com/li/1127556">Qt勉強会 Tokyo #48 + @Nagoya #9 つぶやきまとめ</a> でまとめられています。</p>

<p>今回も長文投稿専用Twitterクライアントの開発の続きをしました。
そろそろ終わらせたいです...</p>

<p>レポジトリは ... <a href="https://github.com/sharkpp/Jugemutter">sharkpp/Jugemutter: 長文投稿専用クライアント「じゅげむったー」</a> です。</p>

<p><img src="/images/2017_0617_jugemutter1.png" alt="画面" /></p>

<h2 id="%E9%80%B2%E6%8D%97">進捗</h2>

<p>とりあえず、作ってた設定画面ができて、設定した内容も保存できたぞ！</p>

<p><img src="/images/2017_0617_jugemutter1.png" alt="設定画面" /></p>

<p>投稿画面の本文前後のテキストも表示できるようになったし、</p>

<p><img src="/images/2017_0617_jugemutter2.png" alt="投稿画面" /></p>

<p>インストーラ作るの？って聞かれた。
たしかに、配布どうするか、って問題はある。</p>

<p><a href="https://booth.pm/ja/items/122098">インストーラを作ろう！</a> を持ってたはずなので、それを参考にやってみようかとは思ってる。</p>

<h2 id="%E3%81%9D%E3%81%AE%E4%BB%96%E3%83%A1%E3%83%A2">その他メモ</h2>

<h3 id="%E3%83%87%E3%83%BC%E3%82%BF%E3%83%90%E3%82%A4%E3%83%B3%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">データバインディングについて</h3>

<p>データバインディングは QML の方が Widget より素直？直感的？で実装が楽、らしい。</p>

<p>QML は、かなり昔( <a href="https://github.com/sharkpp/TaskMemGraph">sharkpp/TaskMemGraph: sample of QtQuick2 application</a> )に触ってそれっきりなので、また色々覚えないとダメかもしれないけど、 Android とか iOS のアプリ作るなら Widget よりも最近は QML っぽいので、またやってみようと思う。</p>

<p>そういえば、 <a href="https://github.com/sharkpp/TaskMemGraph">TaskMemGraph</a> っていまビルド通るのだろうか？</p>

<h3 id="%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90">ディレクトリ構成</h3>

<p>ファイル数増えて困る、って問題。</p>

<p>何かキッチリ答えがあるわけでもないけど、</p>

<ul>
<li>機能ごと</li>
<li>モジュールごと</li>
</ul>

<p>みたいな感じで良いのでは、とアドバイス。</p>

<h3 id="qt-%E6%9C%AC%E4%BD%93%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">Qt 本体について</h3>

<p>Qt 5.9 は、ある人曰く、アップデートしても大丈夫なバージョンな気がする、とのこと。</p>

<p>LTS(=Long Term Support)版だけあって、最初から安定しているのかも。</p>

<h3 id="qtcretor-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">QtCretor について</h3>

<p>QtCretor 4.3.0 はどうも動作が怪しい部分があるらしい（自分はまだ 4.2.1 なので、あくまでらしい）。</p>

<p>前のバージョン、 4.2.1 では大丈夫だけど、ある機能のメニューをクリックしても反応しなかったり、クラスを追加しても、プロジェクトビューに追加されなかったり（再起動すると追加されている）、など。</p>

<p>Qt 5.9 に付属の QtCretor 4.3.1 は大丈夫かも？と言う話。
なお QtCretor 4.3.1 はこの記事を書いている時点では、単体でのダウンロードはできないようです。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://www.qt.io/download-open-source/#section-9">Qt - Download Open Source Step 3</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[じゅげむったーの開発日記 その２]]></title>
            <link href="http://www.sharkpp.net/blog/2017/05/20/jugemutter-development-diary-2nd.html"/>
            <updated>2017-05-20T17:04:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/05/20/jugemutter-development-diary-2nd.html</id>
            <content type="html"><![CDATA[<p>さて、先月に引き続いて今月も参加した <a href="https://qt-users.connpass.com/event/57080/">Qt 勉強会 @ Nagoya No8(17.05) - connpass</a> のまとめ。</p>

<p>今月も、長文投稿専用Twitterクライアントの開発の続きをしました。</p>

<p>レポジトリは ... <a href="https://github.com/sharkpp/Jugemutter">sharkpp/Jugemutter: 長文投稿専用クライアント「じゅげむったー」</a> です。</p>

<p><img src="/images/2017_0520_jugemutter.png" alt="画面" /></p>

<h2 id="%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">はじめに</h2>

<p>今日は、会場にほぼ時間ぴったりで到着(どうやら参加者中、最後だった模様)。</p>

<p>反時計回りで、本日のやることを宣言。</p>

<p>自分は、「じゅげむったー」の続き。</p>

<h2 id="%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8">やったこと</h2>

<p>アカウント周りの管理処理の実装を組んだ。</p>

<p>とりあえず、アカウントの管理がUIが主だったのを別のクラスで管理するようにして、それの変更でUIが変わるように変更をした。</p>

<p>いつのまにか、投稿ができなくなってたので、ソースを追ったら、今表示しているビューに対してドキュメントが設定されてなかった様子。</p>

<p>なので、ビューにドキュメントを設定する処理を実装するが、完了にはもう少し時間が足らなかった。</p>

<p>暗号化処理、Qt標準でないのでどうしたものか？
<a href="https://github.com/roop/qblowfish">roop/qblowfish</a> とか <a href="https://github.com/xcoder123/QBlowfish">xcoder123/QBlowfish</a> とか使おうかな？
でも、<a href="https://ja.wikipedia.org/wiki/Twofish">Twofish</a> よりも設計年代が古いので Twofish のラッパーを作ったほうがいいのかも？</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://github.com/roop/qblowfish">roop/qblowfish: An implementation of the Blowfish encryption algorithm in Qt.</a></li>
<li><a href="https://github.com/xcoder123/QBlowfish">xcoder123/QBlowfish: Simple blowfish encryption implementation in Qt with QByteArray support</a></li>
<li><a href="https://ja.wikipedia.org/wiki/Twofish">Twofish - Wikipedia</a></li>
</ul>
]]></content>
        </entry>
    </feed>