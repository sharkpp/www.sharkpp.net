<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/blog/categories/%E3%83%96%E3%83%AD%E3%82%B0.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2020-02-29T14:35:16+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[あれから16年経ったようです]]></title>
            <link href="http://www.sharkpp.net/blog/2020/02/29/happy-anniversary-16th.html"/>
            <updated>2020-02-29T23:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2020/02/29/happy-anniversary-16th.html</id>
            <content type="html"><![CDATA[<p>世間では新型コロナウイルスによって展示会やらイベントが次々に中止や延期に追い込まれています。
個人的な部分でもついにリモートワークが推奨になってきた感じで影響が出始めましたね。</p>

<p>さて、本日はいつの間にかホームページ開設が16年を過ぎ17年目になったことに気がついて、去年何かやっておけばよかったとすこし後悔していたところで今からでも遅くないというそらみみが聞こえてきたので、このページの過去をざっくりと振り返ってみたいと思います。</p>

<h2 id="%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8%E9%96%8B%E8%A8%AD">ホームページ開設</h2>

<p>2004-02-24 ホームページを開設</p>

<p>たしか、契約しているプロバイダのおまけでついてくるジオシティーズのアカウントで公開していたと思う。</p>

<p>phpを動かすために、別のサービス(これもすでに閉鎖)も借りていた記憶もありますね。</p>

<p>ジオシティーズも去年完全閉鎖され時代の流れを感じますのぅ。
<a href="https://info-geocities.yahoo.co.jp/close/"><img src="/images/20200229_geocities_closed.png" alt="サービス終了のお知らせ - Yahoo!ジオシティーズ" /></a></p>

<h2 id="%E3%83%89%E3%83%A1%E3%82%A4%E3%83%B3%E5%8F%96%E5%BE%97">ドメイン取得</h2>

<p>2005-08-13 独自ドメインへ移転</p>

<p>数日前の 2005-08-05 に <code>sharkpp.net</code> を取得し、独自ドメインでの運営に変更。
この当時契約していたドメインレジストラも独自運営からGMOに買収されたりと、これまた結構変遷があります。</p>

<p><a href="http://web.archive.org/">Wayback Machine</a>に残っている最古は 2005-10-20 15:34:50 でこんなデザインでした。</p>

<p><a href="http://web.archive.org/web/20051020153450/http://www.sharkpp.net:80/"><img src="/images/20200229_webarc20051020153450.png" alt="2005-10-20 15:34:50 当時のページ" /></a></p>

<h2 id="%E6%A7%8B%E7%AF%89%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%92%E6%89%8B%E6%89%93%E3%81%A1%E3%81%8B%E3%82%89-frog-cms-%E3%81%AB%E5%A4%89%E6%9B%B4">構築システムを手打ちから Frog CMS に変更</h2>

<p>2008-08-XX 構築システムを手打ちから Frog CMS に変更</p>

<p>ホームページを手打ちから <a href="https://github.com/philippe/FrogCMS">Frog CMS</a> というCMSに変更。
この時同時に、デザインの変更や、掲示板の廃止などもしています。
Frog CMS も更新が続くと思ってたらしばらくしたら更新されなくなりましたなぁ...</p>

<p><a href="http://web.archive.org/web/20081007190559/http://www.sharkpp.net:80/"><img src="/images/20200229_webarc20081007190559.png" alt="2008-10-07 19:05:59 当時のページ" /></a></p>

<h2 id="%E6%A7%8B%E7%AF%89%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%92-frog-cms-%E3%81%8B%E3%82%89-sculpin-%2B-github-pages-%E3%81%AB%E5%A4%89%E6%9B%B4">構築システムを Frog CMS から Sculpin + GitHub pages に変更</h2>

<p>2015-05-31 構築システムを Frog CMS から Sculpin + GitHub pages に変更</p>

<p>レンタルサーバーの仕様変更で、しばらく Frog CMS がエラーを吐いていたことやもはや保守されてないものを使うのもってことで、重い腰を上げ <a href="https://sculpin.io/">Sculpin</a> という、php で動作する静的サイトジェネレータを利用し GitHub に push したら GitHub pages で運用しているサイトが更新される仕組みを構築しました。
その時の記録は「<a href="/blog/2015/06/28/site-reboot-by-sculpin.html">Sculpin でホムペを再構築したときのメモ</a>」として記事にしています。
この時同時に、デザインやホームページのタイトルの変更もしています。</p>

<h2 id="%E6%A7%8B%E7%AF%89%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E9%81%8B%E7%94%A8%E3%82%92-xrea-%E3%81%8B%E3%82%89-travis-ci-%E3%81%AB%E5%A4%89%E6%9B%B4">構築システムの運用を xrea から Travis CI に変更</h2>

<p>2016-06-12 構築システムの運用を xrea から Travis CI に変更</p>

<p>レンタルサーバーの XREA でサイトのビルドを行なっていたけど、だんだんとビルドに失敗したりすることが多くなってきたので Travis CI を使ってビルドするように変更。
今なら、GitHub Actions を使う感じかも。
今と違って、ヘッダ部分にカテゴリリンクがなかったりしてるけど、それはおいおいと細かく変更していった結果。</p>

<p><a href="http://web.archive.org/web/20150613052025/http://www.sharkpp.net:80/"><img src="/images/20200229_webarc20150613052025.png" alt="2015-06-13 05:20:25 当時のページ" /></a></p>

<h2 id="%E3%81%9D%E3%81%97%E3%81%A6%E7%8F%BE%E5%9C%A8">そして現在</h2>

<p>もろもろ細かなデザインが変わったりしているけど、根本のシステムは変わらず。</p>

<p><img src="/images/20200229_now.png" alt="現在のページ" /></p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>とりあえず、大きな変更をざっくりとまとめてみました。
16年も経つとオギャーといってた赤ちゃんが高校１年とか２年とかになっている感じなので、世間でも大きなところでは、携帯電話がガラゲー（フューチャーフォン）からスマホに変わったりしていますね。</p>

<p>光陰矢の如しとはよくいったもので、ここ数年は一年があっという間に過ぎていく感じで、なかなかに恐ろしいです。</p>

<p>まあ、そんな感じな雑な締めかたですが、16年経ち17年目を迎えた「さめたすたすのお部屋」をよろしくお願いします。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[macOS 上に Inkscape をインストールする]]></title>
            <link href="http://www.sharkpp.net/blog/2020/01/02/install-inkscape-for-macos-mojave-or-later.html"/>
            <updated>2020-01-02T11:48:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2020/01/02/install-inkscape-for-macos-mojave-or-later.html</id>
            <content type="html"><![CDATA[<p>macOS を Mojave 10.14 にしてから Inkscape が起動しなくなっていた。
が、まぁ、とりあえず使わないからいいか... と、そのままにしていたところ... 年末に急に使う事態が発生して大慌てで色々調べ入れ直したときの記録。</p>

<p><a href="/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html">以前試した方法</a>ではうまくいかなかったので調べました。</p>

<p><img src="/thumbs/0d867646943062ca30f59487e83c8755-384x384.png" alt="Inkscape 1.0beta2 version"></p>

<h2 id="%E7%B5%90%E8%AB%96">結論</h2>

<p>結論から書くと、公式に 0.92.2 もしくは 1.0 beta 2 があるのでそちらを利用しましょうということになります。</p>

<p><img src="/thumbs/7284f6bfabb921bb3c259938794f8558-256x256.png" alt="Inkscape 1.0beta2 download page"></p>

<p>色々調べましたが、どうもそういうことらしいです。</p>

<p><a href="https://inkscape.org/ja/release/inkscape-0.92.4/mac-os-x/dmg/dl/">Inkscape 0.92.4 - macOS : dmg | Inkscape</a> によると</p>

<blockquote>
  <p>Note:
  There is no .dmg file for macOS for the current Inkscape version at this time.
  Please use Inkscape 0.92.2 on macOS &lt;= 10.14. For Catalina (macOS 10.15), there is no stable version available, please use the latest beta version of Inkscape 1.0 or the development version.</p>
  
  <p>There will be a notarized and signed .dmg file for the upcoming Inkscape 1.0.</p>
  
  <blockquote>
    <p>注：
    現時点では、現在の Inkscape バージョンの macOS 用の .dmg ファイルはありません。
    macOS &lt;= 10.14 では Inkscape 0.92.2 を利用してください。Catalina（macOS 10.15）の場合、利用可能な安定バージョンはありません。Inkscape 1.0 の最新ベータバージョンまたは開発バージョンを利用してください。</p>
    
    <p>今後の Inkscape 1.0 には、公証され署名された .dmg ファイルがあります。</p>
  </blockquote>
</blockquote>

<p>と書かれています。</p>

<p><img src="/thumbs/9b8563bd587010d545f5a46a588e4bc4-256x256.png" alt="Inkscape 1.0beta2 download page"></p>

<p>Launchpad やファイルとの関連付けもできるようになって快適です。
ただ、高確率で突然強制終了するので自動保存の設定は必須かなと、思います。</p>

<p><img src="/thumbs/72f639e6f1156f3a2cbd727116bda4ac-256x256.png" alt="Inkscape 1.0beta2 download page"></p>

<h2 id="homebrew-%E7%B5%8C%E7%94%B1%E3%81%A7%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Homebrew 経由でのインストール</h2>

<p><a href="/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html">以前はできた</a> Homebrew 経由でのインストールは <code>"cxx11" is not a recognized standard</code> と怒られて、現時点ではできないようです。</p>

<pre><code class="console">$ brew install caskformula/caskformula/inkscape
==&gt; Tapping caskformula/caskformula
Cloning into '/usr/local/Homebrew/Library/Taps/caskformula/homebrew-caskformula'...
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 5 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (5/5), done.
Error: Invalid formula: /usr/local/Homebrew/Library/Taps/caskformula/homebrew-caskformula/Formula/inkscape.rb
inkscape: "cxx11" is not a recognized standard
Error: Cannot tap caskformula/caskformula: invalid syntax in tap!
</code></pre>

<p>こんな感じでエラーとなります。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<ul>
<li>現状、macOS 10.14 Mojave 以降では Homebrew でのインストールが失敗する</li>
<li>macOS 10.15 Catalina では 1.0 beta 2 以降が唯一の選択</li>
<li>macOS 10.14 Mojave もしくはそれ以下の macOS 10.x では、 1.0 beta 2 もしくは 0.92.2 が利用できる</li>
<li>公式バージョンをインストールすれば Launchpad やファイルの関連付けも設定される</li>
<li>Inkscape 1.0 beta 2 は高確率で強制終了するので自動保存の設定は必須</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://inkscape.org/release/inkscape-1.0/?latest=1">Download Inkscape 1.0beta2 | Inkscape</a></li>
<li><a href="https://inkscape.org/ja/release/inkscape-0.92.4/mac-os-x/dmg/dl/">Inkscape 0.92.4 - macOS : dmg | Inkscape</a></li>
<li><a href="https://github.com/caskformula/homebrew-caskformula/issues/89">brew install fails on bad "cxx11" · Issue #89 · caskformula/homebrew-caskformula</a></li>
<li><a href="https://github.com/caskformula/homebrew-caskformula/issues/90">"cxx11" is not a recognized standard · Issue #90 · caskformula/homebrew-caskformula</a></li>
<li><a href="https://github.com/caskformula/homebrew-caskformula/issues/74">Many brew commands fail with :cxx is disabled! There is no replacement. · Issue #74 · caskformula/homebrew-caskformula</a></li>
<li><a href="https://trsasasusu.com/blog/58/">Error: Calling needs :cxx11 is disabled! There is no replacement. というエラーがbrewで出た話 | 水面下のブログ</a></li>
<li><a href="/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html">macOS 上に Homebrew を利用して Inkscape をインストールする — さめたすたすのお家</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[HAPPY NEW YEAR 2020]]></title>
            <link href="http://www.sharkpp.net/blog/2020/01/01/happy-new-year-2020.html"/>
            <updated>2020-01-01T17:55:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2020/01/01/happy-new-year-2020.html</id>
            <content type="html"><![CDATA[<p>明けましておめでとうございます。</p>

<p>ほむぺ開設 16 年目🎉 (たぶん)。
今年も色々ありそうですが一年よろしくお願いします。</p>

<p>では、今年の目標をば。</p>

<h2 id="%E7%9B%AE%E6%A8%99">目標</h2>

<ul>
<li>定期的なホムペの更新</li>
<li>ホームページを GitHub Action ＆ GatsbyJS ベースに移行してモダーンな感じに</li>
<li>PWAとかQtとかもろもろ勉強... というか遊ぶ</li>
<li>Rust頑張ってみる... Rust難しい...</li>
<li><a href="https://github.com/sharkpp/FrameExtract">FrameExtract</a> を完成させる</li>
</ul>

<p>ではでは、今年もよろしくお願いいたします。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[大晦日@2019]]></title>
            <link href="http://www.sharkpp.net/blog/2019/12/31/new-years-eve-2019.html"/>
            <updated>2019-12-31T19:08:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/12/31/new-years-eve-2019.html</id>
            <content type="html"><![CDATA[<h2 id="1-%E5%B9%B4%E3%82%92%E6%8C%AF%E3%82%8A%E8%BF%94%E3%82%8A">1 年を振り返り</h2>

<p>今年も残すところ大晦日、そしてあと数時間で令和二年といったところ。
令和最初の大晦日も暮れようとしています。</p>

<p>しかし、予告ありの改元が発生するとは思わなかったですね... ほんと。</p>

<p>今年は５月に令和になり、新しい時代が始まりつつ、それでも変わったものも変わらないものもたくさんあった一年でした。
個人的には京アニの件が一番の大ニュースでしたね。</p>

<p>自分自身のことについてはまあ諸々の理由があって勉強会もほとんど参加できなかったのが残念ですが、来年の後半ぐらいから多少マシになる... といいなと。</p>

<p>そして、ここ数年恒例の仮想除夜の鐘アプリ「<a href="https://sharkpp.github.io/joya_no_kane/">除夜の鐘</a>」を突いてみては如何でしょうか？
PWAとかにもできた気がしますが、ちょっと間に合わなかったです...</p>

<p>とつらつらと前置きを書いたところで、今年の反省をば。</p>

<h2 id="%E7%B5%90%E6%9E%9C">結果</h2>

<p>まずは、今年の正月 <a href="/blog/2019/01/01/happy-new-year-2019.html">HAPPY NEW YEAR 2019</a> に掲げた目標です。</p>

<ul>
<li>定期的なホムペの更新</li>
<li>HSPコンテスト作品の製作！</li>
<li><a href="http://hsp-users.jp/">HSP関連サイト</a>の定期的な更新。</li>
<li>WINEの最新版でHSPが動くように！</li>
<li><a href="https://github.com/sharkpp/TimestampFreezer">TimestampFreezer</a> のバイナリ公開</li>
<li><a href="https://github.com/sharkpp/Jugemutter">Jugemutter</a> の完成</li>
</ul>

<p>と、こんな感じ。</p>

<p>成果としては...</p>

<ul>
<li><a href="https://github.com/sharkpp/delayedmotion">画像を揺らすと一部がなぜか遅れて揺れる画像を作るジェネレータ</a></li>
<li><a href="https://github.com/sharkpp/amazon-price-check">sharkpp/amazon-price-check</a> ※こちらはまだ記事書いてないけど... まあ一応動く</li>
</ul>

<p>全体的にサボりぐせというか気力がなくなっている感じで、何をするにも億劫な感じ... いかんなぁとは思うのですが...</p>

<p>HSPコンテストは……　見事に落としました。</p>

<p>HSPの関連サイトもだめですね。</p>

<p>Franz 5 recipe 関連はどうもバグっているっぽいですが、かなり放置気味。</p>

<p>Qt 関連も、勉強会でわずかに進む感じ。</p>

<p>今年も<a href="https://togetter.com/li/1343390">よんた@keita44_f4 さんの日本酒の感想ツイートまとめ</a>を更新してました。というか全然更新できてなかったです。
しかし、お酒美味しそうです</p>

<h2 id="%E5%8F%8D%E7%9C%81">反省</h2>

<p>もう、全然全くいろいろ進めてないのでなんとかしたいなって思う今日この頃。</p>

<p>と言うあたりで今年の反省会終了です。</p>

<p>来年もよろしくお願いします。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[名古屋Qt勉強会#31.1 に参加しました]]></title>
            <link href="http://www.sharkpp.net/blog/2019/11/23/qt-nagoya-31.html"/>
            <updated>2019-11-23T17:38:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/11/23/qt-nagoya-31.html</id>
            <content type="html"><![CDATA[<p>2019年11月23日(土) に開催された <a href="https://qt-users.connpass.com/event/155325/">Qt 勉強会 @ Nagoya #31.1 - connpass</a> へ参加しました。</p>

<p>そのまとめです。</p>

<h2 id="%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B">自己紹介</h2>

<p>毎回の通り、自己紹介と本日やることを宣言。</p>

<p>初めて参加の方が一人いた。</p>

<p>久しぶりの開催なのと初めての人がいるためか開催の趣旨などが説明された。</p>

<h2 id="%40kazuo_asa-%E3%81%95%E3%82%93%E3%81%AB%E3%82%88%E3%82%8B%E7%99%BA%E8%A1%A8">@kazuo_asa さんによる発表</h2>

<p><a href="https://twitter.com/kazuo_asa">@kazuo_asa</a> による</p>

<ul>
<li>はじめてのQt入門 シグナルとスロット</li>
</ul>

<p>の発表がありました。</p>

<h2 id="%E8%87%AA%E5%88%86%E3%81%AE%E6%9C%AC%E6%97%A5%E3%81%AE%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8">自分の本日のやること</h2>

<ul>
<li>前回の続きの動画からフレームを切り出し動画のメタ情報とフレーム位置に応じた時刻を設定するツールを実装</li>
</ul>

<p>前回までの状況</p>

<ul>
<li>UIの実装途中</li>
</ul>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E7%9F%A5%E8%A6%8B">本日の知見</h2>

<h2 id="path%E7%92%B0%E5%A2%83%E5%A4%89%E6%95%B0">PATH環境変数</h2>

<p>QtCreator で値を上書きできるので、コンソールでの実行結果と違うことがある...</p>

<h2 id="%E3%82%B7%E3%82%B0%E3%83%8A%E3%83%AB%2F%E3%82%B9%E3%83%AD%E3%83%83%E3%83%88%E3%81%A7%E3%81%AE%E6%8E%A5%E7%B6%9A%E3%82%BF%E3%82%A4%E3%83%97">シグナル/スロットでの接続タイプ</h2>

<p>オプションで指定できたみたい... 知らなかった...</p>

<p><a href="https://doc.qt.io/qt-5/qt.html#ConnectionType-enum">enum Qt::ConnectionType</a> より</p>

<table>
<thead>
<tr>
  <th>Constant</th>
  <th>Value</th>
  <th>Description</th>
</tr>
</thead>
<tbody>
<tr>
  <td>Qt::AutoConnection</td>
  <td>0</td>
  <td>（デフォルト）シグナルを発信するスレッド内にレシーバーが存在する場合、Qt::DirectConnection が使用されます。それ以外の場合、Qt::QueuedConnection が使用されます。接続タイプは、信号が発信されるときに決定されます。</td>
</tr>
<tr>
  <td>Qt::DirectConnection</td>
  <td>1</td>
  <td>スロットは、信号が発信されるとすぐに呼び出されます。スロットはシグナリングスレッドで実行されます。</td>
</tr>
<tr>
  <td>Qt::QueuedConnection</td>
  <td>2</td>
  <td>スロットは、制御がレシーバーのスレッドのイベントループに戻るときに呼び出されます。スロットは受信者のスレッドで実行されます。</td>
</tr>
<tr>
  <td>Qt::BlockingQueuedConnection</td>
  <td>3</td>
  <td>Qt::QueuedConnection と同じです。ただし、シグナルスレッドは、スロットが戻るまでブロックします。レシーバがシグナリングスレッドに存在する場合、この接続を使用しないでください。使用すると、アプリケーションがデッドロックします。</td>
</tr>
<tr>
  <td>Qt::UniqueConnection</td>
  <td>0x80</td>
  <td>これは、ビット単位のORを使用して、上記の接続タイプのいずれかと組み合わせることができるフラグです。 Qt::UniqueConnection が設定されている場合、接続が既に存在する場合（つまり、同じオブジェクトの同じペアの同じスロットに同じ信号が既に接続されている場合）、QObject::connect() は失敗します。このフラグはQt 4.6で導入されました。</td>
</tr>
</tbody>
</table>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E9%80%B2%E6%8D%97">本日の進捗</h2>

<ul>
<li>前回の続きを思い出すところからスタート</li>
<li>QProcess::start() で絶対パスではなく <code>ffmpeg</code> だけでコマンドが呼び出せないのを調べていたが、結局 QtCreater の設定に追加することで解決</li>
<li>あとは QML で 思った UI の表現がうまくいかなかったのでそれを実現するためにサンプルを作ってたりしてタイムアップ</li>
</ul>

<p>なかなかに、思ったUIを作るのが難しい...</p>

<h2 id="%E3%83%A1%E3%83%A2">メモ</h2>

<ul>
<li><a href="https://scoop.sh/">Scoop</a> いいぞぉ</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://doc.qt.io/qt-5/qt.html#ConnectionType-enum">Qt Namespace | Qt Core 5.13.2</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Reactでウェブアプリを作ってみた]]></title>
            <link href="http://www.sharkpp.net/blog/2019/10/14/webapp-made-by-reactjs.html"/>
            <updated>2019-10-14T18:05:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/10/14/webapp-made-by-reactjs.html</id>
            <content type="html"><![CDATA[<p>React を利用してオフラインでも簡単な画像編集をできる１画面ウェブアプリを作ってみました。</p>

<p>作ったものは<a href="https://sharkpp.github.io/delayedmotion/">揺れる<ruby>※<rp>(</rp><rt>ちょめ</rt><rp>)</rp>※<rp>(</rp><rt>ちょめ</rt><rp>)</rp></ruby>画像ジェネレータ</a>です。
ネーミングはまあ微妙かな…(汗</p>

<p>それを作るなかで調べたことなどをまとめました。</p>

<p><img src="/images/20191014_delayedmotion_lightmode.png" alt="Light mode" /></p>

<h2 id="%E5%9F%BA%E6%9C%AC%E3%81%AE%E5%9F%BA">基本の基</h2>

<p>まずは、今回利用したツールについて。</p>

<p>利用したのは <a href="https://github.com/facebook/create-react-app">create-react-app</a> です。</p>

<blockquote>
  <p>Set up a modern web app by running one command.</p>
</blockquote>

<p>とあるようにコマンド一発で</p>

<ul>
<li><a href="https://ja.reactjs.org/">React</a> を利用するのに最適な環境を構築</li>
<li>PWA に簡単に対応できる <a href="https://developer.mozilla.org/ja/docs/Web/API/Service_Worker_API">Service Worker</a> などの実装</li>
<li>開発用サーバー＆ビルド環境</li>
<li>ユニットテスト</li>
</ul>

<p>がそろったプロジェクトが設定要らずで作成できます。</p>

<h2 id="ui-%E5%91%A8%E3%82%8A">UI 周り</h2>

<p>UI は <a href="https://react-bootstrap.github.io/">React Bootstrap</a> と…</p>

<p><img src="/thumbs/df8a1082f8a8dec3ddd6cee787881add-640x640.png" alt="React Bootstrap"></p>

<p>ダークモードに対応するためにカスタマイズされたテーマの <a href="https://github.com/ForEvolve/bootstrap-dark">bootstrap-dark</a> を…</p>

<p><img src="/thumbs/a4e325e2ce0633081cfb3bbbe526faa8-640x640.png" alt="bootstrap-dark"></p>

<p>利用しました。
ダークモードについてはこの後に記載があります。</p>

<p>アイコンは、React から利用できる Font Awesome である <a href="https://fontawesome.com/how-to-use/on-the-web/using-with/react">react-fontawesome</a> を利用しています。</p>

<p>あとは、</p>

<ul>
<li><a href="https://github.com/react-dropzone/react-dropzone">react-dropzone</a></li>
<li><a href="https://github.com/mu29/react-stepper">react-stepper(react-stepper-horizontal)</a></li>
<li><a href="https://github.com/DominicTobias/react-image-crop">react-image-crop</a></li>
</ul>

<p>などを、このアプリに固有の UI を実装するため利用しています。</p>

<h2 id="%E3%82%A2%E3%83%97%E3%83%AA%E5%9B%BA%E6%9C%89%E5%87%A6%E7%90%86">アプリ固有処理</h2>

<p>今回のアプリは、</p>

<ol>
<li>画像をアップロード</li>
<li>画像を加工</li>
<li>出来上がった画像をダウンロード</li>
</ol>

<p>という感じに順次進んでいく操作が主となります。</p>

<p>それらの処理の実装についてさらっと記載しておきます。</p>

<h3 id="%E7%94%BB%E5%83%8F%E3%82%92%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89">画像をアップロード</h3>

<p><img src="/images/20191014_delayedmotion_lightmode.png" alt="Light mode" /></p>

<p>ここでは、単なる画像のアップロードと URL を利用したとえば Public Domain な画像などを利用した加工をできるようにしてあります。</p>

<p>このうち画像のアップロード（といいつつサーバーにはアップロードしない）は、 react-dropzone を使ってサクッと実装してあります。</p>

<p>また、URL を指定しての画像編集は、 CORS などによりブロックされるので <a href="https://github.com/Rob--W/cors-anywhere">cors-anywhere</a> というプロキシを Heroku にデプロイし利用しています。</p>

<h3 id="%E7%94%BB%E5%83%8F%E3%82%92%E5%8A%A0%E5%B7%A5">画像を加工</h3>

<p><img src="/images/20191014_delayedmotion_select_phase.png" alt="Select Page" /></p>

<p>画像の加工は <a href="https://github.com/DominicTobias/react-image-crop">react-image-crop</a> を選択の UI に利用し、HTML5 Canvas をマスクや画像の加工に利用しています。</p>

<h3 id="%E5%87%BA%E6%9D%A5%E4%B8%8A%E3%81%8C%E3%81%A3%E3%81%9F%E7%94%BB%E5%83%8F%E3%82%92%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89">出来上がった画像をダウンロード</h3>

<p><img src="/images/20191014_delayedmotion_download_phase.png" alt="Download page" /></p>

<p>出来上がった画像のダウンロードには <a href="https://github.com/kennethjiang/js-file-download">js-file-download</a> を利用しています。</p>

<h2 id="pwa-%E5%AF%BE%E5%BF%9C">PWA 対応</h2>

<p>react-create-app では、標準で Service Worker の実装が含まれていますが、プロジェクトの作成直後は無効にされています。</p>

<p><code>src/index.js</code> の中身を</p>

<pre><code class="diff"><br />- serviceWorker.unregister();
+ serviceWorker.register();

</code></pre>

<p>と変更すると、Service Worker でリソースのキャッシュが有効にされ、オフラインでも利用できるようになります。</p>

<p>ただ、ローカルでは実行されなかったり http では動作しなかったりと色々制限はあります。
もっとも、オフラインの場合に特別な処理を行うような機能はないので追加で独自に実装しています。</p>

<h3 id="%E3%82%AA%E3%83%95%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%A2%E3%83%BC%E3%83%89%E3%81%AE%E6%A4%9C%E5%87%BA">オフラインモードの検出</h3>

<p>オフラインモードの検出は</p>

<pre><code class="javascript">    window.addEventListener('online',  () =&gt; console.log('change network: online mode'));
    window.addEventListener('offline', () =&gt; console.log('change network: offline mode'));
</code></pre>

<p>のような感じでできます。</p>

<p>また、今のモードの取得は</p>

<pre><code class="javascript">&gt; console.log(navigator.onLine);
true
</code></pre>

<p>のような感じで取得できます。</p>

<p>まあ、それ以外にはどうしようもないのですが…</p>

<h2 id="lighthouse-%E3%81%AB%E3%82%88%E3%82%8B%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%AE%E6%94%B9%E5%96%84">Lighthouse によるスコアの改善</h2>

<p><a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=ja">Lighthouse</a> によるスコアの改善などもしています。</p>

<p>大体は指摘に沿って直していけばいいのですが、不具合らしきものを見つけました。</p>

<h3 id="roles-are-not-contained-by-their-required-parent-element">[role]s are not contained by their required parent element</h3>

<p>具体的には React Bootstrap の <a href="https://react-bootstrap.github.io/components/cards/#navigation">Card Navigation</a> で <code>[role]s are not contained by their required parent element</code> (訳:[role]は必須の親要素に含まれていません) と指摘がされます。
どうやら <code>role</code> 属性が Card Navigation に対して設定できない(設定しても React で生成された要素に付加されていない)状態になるようです。</p>

<p><a href="https://react-bootstrap.netlify.com/components/navs/#nav-link-props">ドキュメント</a>によれば…</p>

<blockquote>
  <p>ARIA role for the Nav, in the context of a TabContainer, the default will be set to "tablist", but can be overridden by the Nav when set explicitly.
  When the role is "tablist", NavLink focus is managed according to the ARIA authoring practices for tabs:<br />
  訳: TabContainer のコンテキストでの Nav の ARIA ロールは、デフォルトが "tablist" に設定されますが、明示的に設定すると Nav によってオーバーライドできます。<br />
  ロールが「タブリスト」の場合、NavLinkフォーカスはタブの ARIA オーサリングプラクティスに従って管理されます。</p>
</blockquote>

<p><code>role="tablist"</code> がデフォルトで設定されるようですがどうやらそれすらも無視されているようです。</p>

<p>しばらく悩み、最終的に Nav の親に属性を着ける事でとりあえずの対応としています。</p>

<p>対応方法はこんな感じ。</p>

<pre><code class="javascript">  &lt;Card&gt;
-   &lt;Card.Header&gt;
+   &lt;Card.Header role="tablist"&gt;
      &lt;Nav variant="tabs" defaultActiveKey="#first"&gt;
        &lt;Nav.Item&gt;
</code></pre>

<h2 id="%E3%83%80%E3%83%BC%E3%82%AF%E3%83%A2%E3%83%BC%E3%83%89%E5%AF%BE%E5%BF%9C">ダークモード対応</h2>

<p>macOS や Windows 10 や Android 10 にはダークモードなる通常とは色調が反転した色合いのテーマに変更する機能があります。</p>

<table>
<thead>
<tr>
  <th>ライトモード</th>
  <th>ダークモード</th>
</tr>
</thead>
<tbody>
<tr>
  <td><img src="/images/20191014_delayedmotion_lightmode.png" alt="Light mode" /></td>
  <td><img src="/images/20191014_delayedmotion_darkmode.png" alt="Dark mode" /></td>
</tr>
</tbody>
</table>

<p><code>ダークモード 対応</code> などと検索すると、画面上で切り替えスイッチを実装し、その設定を保存してテーマを切り替えるサンプルやライブラリが色々見つかりました。
とりあえず今回は CSS のメディア特性 <a href="https://developer.mozilla.org/ja/docs/Web/CSS/@media/prefers-color-scheme">prefers-color-scheme</a> を利用し、システムの設定に沿って切り替わるようにしました。</p>

<p>現在の実装に落ち着くまで色々調べてみたのですが…</p>

<ul>
<li>CSS 全部に prefix をつけて JavaScript で切り替えるのは面倒(たぶん CSS をビルドすればできると思うけど…)</li>
<li><code>import('darkmode.css')</code> で読み込んで JavaScript で制御しようにもアンロードの方法が見つからない</li>
<li>CSS の <code>@media (prefers-color-scheme: dark) { ... }</code> のブロック内で <code>@import</code> してもビルド対象に含まれない(外側だと埋め込まれるがそれでは意味がない…)</li>
</ul>

<p>と、いろいろ課題があり、最終的には… <code>dark-theme.css</code> という名前の CSS を用意し、<code>@media (prefers-color-scheme: dark) { ... }</code> のブロック内に <a href="https://github.com/ForEvolve/bootstrap-dark">bootstrap-dark</a> を直接埋め込む、という対応をしています。</p>

<p>それもこれも react-create-app で webpack のビルド設定が隠匿されているのでカスタマイズできないことが１番の要因だと思っています。</p>

<p>また、 react-dropzone や react-stepper-horizontal はダークモードに対応していないので追加でいい感じのスタイルを用意し、同じく <code>@media (prefers-color-scheme: dark)</code> のブロック内に追加しました。</p>

<p>react-dropzone 用</p>

<pre><code class="css">@media (prefers-color-scheme: dark) {
  .dropzone {
    background-color: #444444;
  }
}
</code></pre>

<p>react-stepper-horizontal 用</p>

<pre><code class="css">@media (prefers-color-scheme: dark) {
  .stepper &gt; div &gt; div &gt; div &gt; a {
    color: #EEEEEE !important;
  }
  .stepper &gt; div &gt; div &gt; div &gt; div &gt; a,
  .stepper &gt; div &gt; div &gt; div &gt; div &gt; span {
    color: #333333 !important;
  } 
}
</code></pre>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li>React

<ul>
<li><a href="https://ja.reactjs.org/docs/create-a-new-react-app.html">新しい React アプリを作る – React</a></li>
<li><a href="https://create-react-app.dev/docs/code-splitting">Code Splitting · Create React App</a></li>
<li><a href="https://qiita.com/uhyo/items/246fb1f30acfeb7699da#usecallback">🎉React 16.8: 正式版となったReact Hooksを今さら総ざらいする - Qiita</a></li>
</ul></li>
<li>アクセシビリティ

<ul>
<li><a href="http://blog.e-riverstyle.com/2012/12/roleariawaiariahtml5-advent-ca.html">role属性とaria-*属性（WAI-ARIA）について【HTML5 Advent Calendar 2012 Day 9】 - E-riverstyle Vanguard</a></li>
<li><a href="https://www.osaka-kyoiku.ac.jp/~joho/html5_ref/role_attr.php?menutype=2dtaldl01l02l03A0">HTML5 &amp; CSS3 リファレンス - role属性　（要素の役割（WAI-ARIA））</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Tab_Role">ARIA: tab role - Accessibility | MDN</a></li>
<li><a href="http://blog.e-riverstyle.com/2011/01/waiariahtml5.html">WAI-ARIAを意識したタブパネルのマークアップを考えてみる【アクセシビリティ】【HTML5】 - E-riverstyle Vanguard</a></li>
<li><a href="https://www.dkrk-blog.net/a11y/tab">タブ切り替えを実装する時の注意点 | dkrkのブログ</a></li>
<li><a href="https://yourmystar-engineer.hatenablog.jp/entry/2018/12/21/162529">Google Lighthouseについて調べてみた vol.2 #lighthouse - ユアマイスター株式会社エンジニアブログ</a></li>
<li><a href="https://chaika.hatenablog.com/entry/2018/12/06/110000">HTML 本当は怖い target="_blank" 。rel="noopener" ってなに？ - かもメモ</a></li>
</ul></li>
<li>PWA

<ul>
<li><a href="https://qiita.com/pepo/items/9b25068a3123b99bcf18">create-react-appで作った雛形のコードがService Workerで何をしているのか - Qiita</a></li>
<li><a href="https://developers.google.com/web/tools/chrome-devtools/progressive-web-apps?hl=ja">Progressive Web App のデバッグ  |  Tools for Web Developers</a></li>
<li><a href="https://medium.com/better-programming/build-a-realtime-pwa-with-react-99e7b0fd3270">Build a Realtime PWA with React - Better Programming - Medium</a></li>
<li><a href="https://qiita.com/wktq/items/f9aa3496b57700db71eb">React+PWAを最速で試してみた - Qiita</a></li>
<li><a href="https://medium.com/@tylerargo/how-to-add-an-offline-notification-to-your-pwa-c11ee640822b">How to add an “Offline” notification to your PWA - Tyler Argo - Medium</a></li>
<li><a href="https://medium.com/@addyosmani/progressive-web-apps-with-react-js-part-3-offline-support-and-network-resilience-c84db889162c">Progressive Web Apps with React.js: Part 3 — Offline support and network resilience</a></li>
<li><a href="https://dragon-taro.com/college/post-767/">reactでオフラインでも実行可能なpwaの電卓を作ってみた │ どらごんテック</a></li>
<li><a href="https://developer.mozilla.org/ja/docs/Web/API/NavigatorOnLine/onLine">window.navigator.onLine - Web API | MDN</a></li>
</ul></li>
<li>ダークモード

<ul>
<li><a href="https://blanche-toile.com/web/dark-mode-css">CSS3のメディアクエリを利用してwebサイトをダークモードに対応させる | Free Style</a></li>
<li><a href="https://www.webcreatorbox.com/tech/dark-mode">Webサイトをダークモードに対応させよう | Webクリエイターボックス</a></li>
<li><a href="https://techacademy.jp/magazine/13018">外部ファイルを読み込む！CSSで@importを使う方法 | TechAcademyマガジン</a></li>
<li><a href="https://postd.cc/modular-css-with-react/">Reactを使ったモジュラーCSS : CSS-in-JSとCSS Module | POSTD</a></li>
</ul></li>
<li>その他

<ul>
<li><a href="https://qiita.com/wadahiro/items/eb50ac6bbe2e18cf8813">JavaScriptでファイルダウンロード処理を実現する - Qiita</a></li>
<li><a href="https://shinglyu.com/web/2019/02/09/js_download_as_file.html">Download JavaScript Data as Files on the Client Side | Shing's Blog</a></li>
<li><a href="https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary">Summary card — Twitter Developers</a></li>
<li><a href="https://www.tam-tam.co.jp/tipsnote/javascript/post13538.html">File APIとCanvasでローカルの画像をアップロード→加工→ダウンロードする ｜ Tips Note by TAM</a></li>
</ul></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[技術書典7に行ってきた]]></title>
            <link href="http://www.sharkpp.net/blog/2019/09/28/techbookfest7.html"/>
            <updated>2019-09-28T18:02:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/09/28/techbookfest7.html</id>
            <content type="html"><![CDATA[<p>2016年から始まった技術書オンリーな同人イベント「<a href="https://techbookfest.org/">技術書典</a>」が、
「<a href="https://techbookfest.org/event/tbf07">技術書典７</a>」として、2019年9月22日に開催されたので、今回も一般参加してきました。
場所は前回と変わらず、池袋のサンシャインシティですが、今回は文化会館ビルの 展示ホールD と 展示ホールC の２ホールを使っての開催です。</p>

<p><a href="/images/20190922_tbf7.jpg"><img src="/thumbs/40e6e2ca46fa8422b7e8c7ceb6d3c470-640x640.jpg" alt="技術書典7"></a></p>

<h2 id="%E5%A7%8B%E3%82%81%E3%81%AB">始めに</h2>

<p>前回のレポートは「<a href="/blog/2019/04/24/techbookfest6.html">技術書典6に行ってきた</a>」となります。</p>

<p>今回は、サークル数 650、参加者数は 9,700 人(速報値)だったようです。<br />
前回に引き続き、今回も開場直後に入場するには一般入場整理券の購入が必要でした。
ただ、前回は列待機中に販売していましたが、今回から約２週間前の9月10日にウェブで販売を開始し、11時に入場可能な先行発売分はCホールとDホールともに前日までには売り切れていたようです。</p>

<p>今回はお目当のサークルさんがCホールに多かったのでCホールから先に入場できる整理券を購入しました。</p>

<p><a href="https://docs.google.com/spreadsheets/d/1gNVy9ukLn3kYzOC0nyOpysD-Xl3fIzHl26WSSLHC-HY/edit?usp=sharing"><img src="/images/20190928_tbf1_tbf7_graph.png" alt="参加人数" /></a></p>

<h2 id="%E5%BD%93%E6%97%A5">当日</h2>

<p><a href="/images/20190922_tbf7_waiting.jpg"><img src="/thumbs/5ee55853d620c0901deeb03d713fb7a4-640x640.jpg" alt="待機列"></a></p>

<p>今回もいつもの通り09:30頃に会場に到着したところ、前回はほとんどなかったサークル入場の待機列ができていました。
公式には10時ごろから列待機可能ということでしたが、前回と同じぐらいにはすでに並んでいました。自分も含めなんだかな。<br />
一般参加者の列に並んでいる際に、その横に屋内から続いているであろうサークル参加者の列がどんどん伸びていくのが見えて、これはなかなかにやばいぞと思いながらただ眺めていましたが、10時を超えたあたりからだんだんとサークル入場待機列も解消していきました。</p>

<p>今回、ウェブで入場整理券を購入したのでそれをスマホに表示し入り口などで掲げ目視チェックを通り抜けながら案内に沿って列を移動していきました。</p>

<p><a href="/images/20190922_tbf7_ticket.png"><img src="/thumbs/65b00409c1e94200dc8287c2dd6aba9b-640x640.png" alt="入場券"></a></p>

<p>少なくとも今回に関しては特にバーコードをスキャンして確認するなどといったことはなかったので偽造し放題だったのかも...</p>

<p><a href="/images/20190922_tbf7_2f_to_3f.jpg"><img src="/thumbs/c80a2200cfa5464da3d2f88e834bb25f-640x640.jpg" alt="2Fから3Fへ"></a></p>

<p>屋外の待機列、DホールのCホール入場待機場所、Cホールの待機場所、の順に移動し10:40頃にはCホールの入場ゲート前で待機してました。
今回は、どうも全体的に時間が押していたようで、サークルの入場手続きや入場規制、開場も５分前後遅れた感じでした。</p>

<p>11:00になっても開場しなかったため戸惑う雰囲気がでてくる中、５分ほど経ち、開場しますのアナウンスがあり会場全体から拍手が上がり、２列づつの入場となりました。<br />
入場ゲートはまさかの組み立て式の机でした...</p>

<p><a href="/images/20190922_tbf7_hall_c1.jpg"><img src="/thumbs/355ac181b23ce537572932ab1e44cca6-640x640.jpg" alt="Cホールの様子"></a></p>

<p>Cホールにいた時間は50分ほどでしたが、サークル数もDホールと比べて少なかったというのもあるのか、それほど混んでおらず余裕を持って買い物ができた感じでした。</p>

<p><a href="/images/20190922_tbf7_hall_c2.jpg"><img src="/thumbs/39ce7611a5e8d53130ded5e1b98bb407-640x640.jpg" alt="Cホールの様子(開場直後))"></a></p>

<p>Cホールで思うままに買い物をした後はDホールに移動しました。</p>

<p><a href="/images/20190922_tbf7_3f_to_2f.jpg"><img src="/thumbs/95d4afa9ab89a574c09d78990ab9116e-640x640.jpg" alt="Cホールの様子"></a></p>

<p>少しわかりにくい案内に沿って移動し、Dホールに到着するとちょうど12時入場組の手続きが始まるところを横目に見につつそのままするっと会場に入れました。</p>

<p>Dホールは前回と同様か少し少ないぐらいの人口密度で人でごった返していました。
もっとも、当日分の入場整理券で入れる時間とホールとが重なっていた（当日分は12時にDホールからのみ入場可能）ために、人が多かった可能性もありますが...</p>

<p><a href="/images/20190922_tbf7_hall_d.jpg"><img src="/thumbs/e10f438c8cc19ce6980e536241a37fc5-640x640.jpg" alt="Dホールの様子"></a></p>

<p>戦利品はまた後ほどです。</p>

<p><a href="/images/20190922_tbf7_kanban.jpg"><img src="/thumbs/86c0a0f7891808f297277bc04c1bb39b-640x640.jpg" alt="看板"></a></p>

<p>運営ブースで、今回は公式カタログと２種類のトートバッグを買いました。</p>

<p>あと、Cホールになぜか進捗神社が出現していました。</p>

<p><a href="/images/20190922_tbf7_jinja1.jpg"><img src="/thumbs/682b811ebe1f28ae17da55ffd37a4226-640x640.jpg" alt="看板"></a>
<a href="/images/20190922_tbf7_jinja2.jpg"><img src="/thumbs/183c64ca49d20e73085a53d5e8909e78-640x640.jpg" alt="看板"></a></p>

<p>また、なぜか傘が置いてあって何かなって思ってたけど、どうやら写真撮影用のセットも設置してあったようです。</p>

<p><a href="/images/20190922_tbf7_booty_base.jpg"><img src="/thumbs/f0293f33f67c88e6f8e0218b4a6b7821-640x640.jpg" alt="看板"></a></p>

<p>今回もぐるっと回ったところで、蒸し暑いのと体力の限界を感じ、会場を後にしました。</p>

<h2 id="%E6%88%A6%E5%88%A9%E5%93%81">戦利品</h2>

<p>今回の戦利品</p>

<p><a href="/images/20190922_tbf7_booty.jpg"><img src="/thumbs/16785070cd442d1a6303d3aa87c940ce-640x640.jpg" alt="戦利品"></a></p>

<table>
<thead>
<tr>
  <th>配置</th>
  <th>サークル名/ペンネーム</th>
  <th>頒布物</th>
</tr>
</thead>
<tbody>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5681471662587904">運01</a></td>
  <td><a href="https://techbookfest.org/event/tbf07/">運営事務局</a></td>
  <td>技術季報 vol.7</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5681471662587904">運01</a></td>
  <td><a href="https://techbookfest.org/event/tbf07/">運営事務局</a></td>
  <td>BIGトートバック＋缶バッチ 2つ</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5743731428818944">協09</a></td>
  <td><a href="https://yumenosora.co.jp/tora-lab">虎の穴ラボ</a></td>
  <td>虎の穴ラボの薄い本。vol.3 ※無償配布</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5639891278888960">協06</a></td>
  <td><a href="https://www.mediado.jp/">Tech Do Book 編集部</a></td>
  <td>Tech Do Book ※無償配布</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5681561387139072">あ19C</a></td>
  <td><a href="http://techbooster.org/">TechBooster</a>/<a href="https://twitter.com/mhidaka">mhidaka</a></td>
  <td>ていねいに学ぶAndroidアプリ開発：Android 10 Modern Functions</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5637818621624320">い21C</a></td>
  <td><a href="https://qiita.com/argama147">エゥーゴ</a>/<a href="https://twitter.com/argama147">argama147</a></td>
  <td>QtでAndroidアプリを作ろう</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/4826840938053632">い22C</a></td>
  <td><a href="https://twpf.jp/CassisTurn">単体かしす</a>/<a href="https://twitter.com/CassisTurn">月見円</a></td>
  <td>Qt 2D Graphics 入門</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5199792342827008">い24C</a></td>
  <td><a href="http://relog.xii.jp/">理ろぐ</a>/<a href="https://twitter.com/IoriAYANE">理音伊織</a></td>
  <td>始める！Qt for WebAssembly</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5711109487067136">い25C</a></td>
  <td>豆部/<a href="https://twitter.com/shin1_okada">shin1</a></td>
  <td>Qt 3D を使ってみよう</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5651492576952320">え04C</a></td>
  <td><a href="http://ankokudan.org/d/d.htm?index-J.html">暗黒通信団</a>/<a href="https://twitter.com/ankokudan">シ</a></td>
  <td>暗黒通信団Tシャツ</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5651492576952320">え04C</a></td>
  <td><a href="http://ankokudan.org/d/d.htm?index-J.html">暗黒通信団</a>/<a href="https://twitter.com/ankokudan">シ</a></td>
  <td>円周率100万桁表</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5651492576952320">え04C</a></td>
  <td><a href="http://ankokudan.org/d/d.htm?index-J.html">暗黒通信団</a>/<a href="https://twitter.com/ankokudan">シ</a></td>
  <td>素数表150000個</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5694333814571008">え08C</a></td>
  <td><a href="https://chofu.tech/">調布技研</a>/<a href="https://twitter.com/chibiegg">chibiegg</a></td>
  <td>写真フィルムデジタイズ入門</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5760394706550784">え25C</a></td>
  <td><a href="http://agepeanuts.strikingly.com/">揚げピーナッツ</a>/<a href="https://twitter.com/nichi_DQX">nishiuchi</a></td>
  <td>プログラム言語神経衰弱 拡張セット3</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5982162377506816">お26C</a></td>
  <td><a href="https://blog.takuros.net/entry/2019/07/31/152210">ササキです</a>/<a href="https://twitter.com/dkfj">佐々木拓郎</a></td>
  <td>AWSの薄い本 IAMのマニアックな話</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5088238888812544">お41C</a></td>
  <td><a href="https://note.mu/oyakata2438">親方Project</a>/<a href="https://twitter.com/oyakata2438">親方</a></td>
  <td>ワンストップ見積もり</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5088238888812544">お41C</a></td>
  <td><a href="https://note.mu/oyakata2438">親方Project</a>/<a href="https://twitter.com/oyakata2438">親方</a></td>
  <td>ワンストップ目標設定 ※おまけでもらった</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5088238888812544">お41C</a></td>
  <td><a href="https://note.mu/oyakata2438">親方Project</a>/<a href="https://twitter.com/oyakata2438">親方</a></td>
  <td>レーザープロジェクターを作って学ぶESP32/Arduino ※おまけでもらった</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5171055656173568">お43C</a></td>
  <td><a href="https://llminatoll.booth.pm/">湊川あいの、わかば家。</a>/<a href="https://twitter.com/webdesignManga">湊川あい</a></td>
  <td>マンガでわかる痩せる技術【2ヶ月半で−8kg】デスクワークのエンジニア・デザイナーを救う</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5743121476354048">お47C</a></td>
  <td><a href="https://allsafe.booth.pm/">Allsafe</a>/er28-0652 <a href="https://twitter.com/PINKSAWTOOTH">@PINKSAWTOOTH</a></td>
  <td>Ghidra Pro Book</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5104458442735616">お56C</a></td>
  <td>そんなことより背脂食べたい/<a href="https://twitter.com/hasegawayosuke">はせがわようすけ</a></td>
  <td>難読化JavaScriptの本</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5634804615741440">お57C</a></td>
  <td>noraneco/<a href="https://twitter.com/graneed111">graneed</a></td>
  <td>curlコマンド完全に理解する</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5067313418076160">お73C</a></td>
  <td><a href="https://twitter.com/i10r_inc">インターステラ株式会社出版部</a>/<a href="https://twitter.com/i10r_inc">インターステラ株式会社出版部</a></td>
  <td>非エンジニアでもできるWebスクレイピング入門</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5654463700271104">か10C</a></td>
  <td>ブライトシステム/<a href="https://twitter.com/sapi_kawahara/status/1177563691874566146">さっぴー川原</a></td>
  <td>迷惑メールにされないメール設定方法 G Suite編</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5702345325281280">か23C</a></td>
  <td><a href="https://kauplan.org/books/wakarimisql/">カウプラン機関極東支部</a>/<a href="https://twitter.com/_kauplan">wanda4</a></td>
  <td>わかりみSQL</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5739755899715584">き15D</a></td>
  <td><a href="https://blog.mtb-production.info/">足跡出版</a>/<a href="https://twitter.com/mtb_beta">的場達矢</a> <a href="https://twitter.com/RyoheiKishi">岸良平</a></td>
  <td>デザイナーはどうやって作るか</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5645050461552640">き17D</a></td>
  <td><a href="https://out-of-kaya.hatenablog.com/entry/2019/08/27/225716">笹書房</a>/<a href="https://twitter.com/out_of_kaya">out_of_kaya</a></td>
  <td>入門リモートワーク</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5682501179670528">き50D</a></td>
  <td><a href="https://masuipeo.com/">増井技術士事務所</a>/<a href="https://twitter.com/masuipeo">masuipeo</a></td>
  <td>Composerの教科書</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5688901205229568">く50D</a></td>
  <td><a href="http://yuma.ohgami.jp/">へにゃぺんて</a>/<a href="https://twitter.com/yohgami">yohgami</a></td>
  <td>作って分かる！x86_64機械語入門</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5648262224674816">く60D</a></td>
  <td><a href="http://zob.club/">ZOB.Club</a>/<a href="https://twitter.com/yyhayami">速水 祐</a></td>
  <td>The Advanced Assembler 386 上ノ巻 第２版</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5648262224674816">く60D</a></td>
  <td><a href="http://zob.club/">ZOB.Club</a>/<a href="https://twitter.com/yyhayami">速水 祐</a></td>
  <td>The Advanced Assembler 386 下ノ巻 第２版</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5675663591735296">け26D</a></td>
  <td>じがへるつ工房/<a href="https://twitter.com/10mozet">Tomo</a></td>
  <td>USB雑記帳</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5675663591735296">け26D</a></td>
  <td>じがへるつ工房/<a href="https://twitter.com/10mozet">Tomo</a></td>
  <td>ディジタル変調復調の方式と仕組み</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5675663591735296">け26D</a></td>
  <td>じがへるつ工房/<a href="https://twitter.com/10mozet">Tomo</a></td>
  <td>伝送路とSパラメータ・スミスチャート</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5675663591735296">け26D</a></td>
  <td>じがへるつ工房/<a href="https://twitter.com/10mozet">Tomo</a></td>
  <td>電子工作でのType-C/USB PD活用の勘所</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5675663591735296">け26D</a></td>
  <td>じがへるつ工房/<a href="https://twitter.com/10mozet">Tomo</a></td>
  <td>電話交換機の歴史と仕組み</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/4806559565611008">け28D</a></td>
  <td>Motomation/<a href="https://twitter.com/yuki_eddy">zhiyou</a></td>
  <td>はじめてのケーブル・ハーネスの作り方</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5116704724090880">し21D</a></td>
  <td><a href="https://nico-lab.net/">ニコラボ</a>/<a href="https://twitter.com/nico_lab">ニコラボ</a></td>
  <td>FFmpegの本</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5756204831735808">し35D</a></td>
  <td><a href="http://affiliate-with.hatenablog.com/">こじくれワークス</a>/<a href="https://twitter.com/affiliate_with">ふくふく亭</a></td>
  <td>SSDとHDDが壊れるまで</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/6219803601666048">し36D</a></td>
  <td><a href="https://crystalmark.info/">水晶雫世界</a>/<a href="https://twitter.com/openlibsys">hiyohiyo</a></td>
  <td>水晶雫クリアファイル ※無償配布</td>
</tr>
<tr>
  <td><a href="https://techbookfest.org/event/tbf07/circle/5189022846550016">せ06D</a></td>
  <td><a href="https://pomepons.com/">秘密結社ポメポンズ</a>/<a href="https://twitter.com/SierYuki">Yuki</a></td>
  <td>超初心者向けの実用LINUXコマンド集</td>
</tr>
</tbody>
</table>

<p>※敬称略、配置順</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>反省点</p>

<ul>
<li>サークル＆頒布物チェックブラウザを自分用に作ってみたがいまいち機能が足りなかった

<ul>
<li>タグをつけたり、会場のブース順（≠配置順）でソートしたり、買い物リスト的な感じにしたり、圧倒的に時間が足りなかった...</li>
</ul></li>
<li>購入委託を受けてたが、微妙にジャンルがかぶっていたので購入数の判断で混乱した</li>
<li>買いすぎた...

<ul>
<li>前回、購入したものを会場でもらった袋を利用したためセーブしてしまったので今回はちゃんとしたカバンを持ってったら、簡単後払いに対応しているブールが多かった部分もあって逆に買いすぎた。</li>
</ul></li>
</ul>

<p>次回、参加することがあったらまた自重せずに購入したい</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://twitter.com/techbookfest/status/1175683304797794307">(1) 技術書典公式アカウントさんはTwitterを使っています: 「#技術書典 7は17:00をもちまして無事閉会いたしました。来場者数は速報値となりますが9,700人（再入場を含まず）でした。正確な来場者数は後日改めて発表いたします。ご来場、誠にありがとうございました。また次の技術書典でお会いしましょう！ https://t.co/57YAwkG6sG https://t.co/5xO4WISlnF」 / Twitter</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[名古屋Qt勉強会#30.1 に参加しました]]></title>
            <link href="http://www.sharkpp.net/blog/2019/08/24/qt-nagoya-30.html"/>
            <updated>2019-08-24T17:13:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/08/24/qt-nagoya-30.html</id>
            <content type="html"><![CDATA[<p>2019年8月24日(土) に開催された <a href="https://qt-users.connpass.com/event/143118/">Qt 勉強会 @ Nagoya #30.1 - connpass</a> へ参加しました。</p>

<p>そのまとめです。</p>

<p><img src="/images/20190824_frame_extract.png" alt="成果" /></p>

<h2 id="%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B">自己紹介</h2>

<p>毎回の通り、自己紹介と本日やることを宣言。</p>

<p>初めて参加の方が一人いた。</p>

<h2 id="%40kazuo_asa-%E3%81%95%E3%82%93%E3%81%AB%E3%82%88%E3%82%8B%E7%99%BA%E8%A1%A8">@kazuo_asa さんによる発表</h2>

<p><a href="https://twitter.com/kazuo_asa">@kazuo_asa</a> による</p>

<ul>
<li>Yoctoを使用して、Boot2Qtをraspberry pi用に構築してみよう。</li>
<li>Qt Creatorを使用して、raspberry piで動作するQtアプリのリモートデバックの仕方。</li>
</ul>

<p>の発表がありました。</p>

<p>発表資料: <a href="https://qiita.com/sazus/items/e3c12dc67b8d38667a20">Raspberry Pi 3 で Qt 5 をビルドして動かす方法(Yocto layer Boot2Qt編)</a></p>

<h2 id="%E8%87%AA%E5%88%86%E3%81%AE%E6%9C%AC%E6%97%A5%E3%81%AE%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8">自分の本日のやること</h2>

<ul>
<li>前回の続きの動画からフレームを切り出し動画のメタ情報とフレーム位置に応じた時刻を設定するツールを実装</li>
</ul>

<p>前回までの状況</p>

<ul>
<li>フレームの取得の高速化（フレーム数で取得するのを諦めフレーム数とフレームレートで秒数を求めて指定するようにした）</li>
<li>なぜかフレームデータの受け渡しでアクセス違反が... なぜだ！？</li>
</ul>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E7%9F%A5%E8%A6%8B">本日の知見</h2>

<h3 id="void%2A-%E2%86%92-qvariant">void* → QVariant</h3>

<p>たぶんこう。</p>

<p>```c++
    Hoge* hogePointer = this->getHoge();
    QVariant a = QVariant::fromValue(reinterpret_cast&lt;void*>(hogePointer));</p>

<pre><code><br />ただ、なんか逆がうまくいかないので Q_DECLARE_METATYPE で型を登録して利用するようにした。

### QVariant で自作のクラスのポインタを扱う

QVariant で自作のクラスのポインタを扱うための実装。 

定義 

このとき、一部だけで `Q_DECLARE_METATYPE` を使うと `static_assert failed "Type is not registered, please use the Q_DECLARE_METATYPE macro to make it known to Qt's meta-object system"` とエラーが出る。

```c++
// hoge.hpp

#include &lt;QObject&gt;

class Hoge {
  // ...
};

Q_DECLARE_METATYPE(Hoge*)
</code></pre>

<p>利用方法</p>

<pre><code>#include &lt;hoge.hpp&gt;

void fuga() {

  // to  QVariant()
  Hoge* hoge1 = new Hoge();
  QVariant a = QVariant::fromValue(hoge1);

  // from QVariant()
  Hoge* hoge2 = a.value&lt;Hoge*&gt;();
}
</code></pre>

<h3 id="qqmlengine%EF%BC%9Aqml%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3%E3%81%A8%E3%81%AF%E7%95%B0%E3%81%AA%E3%82%8B%E3%82%B9%E3%83%AC%E3%83%83%E3%83%89%E3%81%AB%E3%81%82%E3%82%8B%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%B8%E3%81%AE%E4%B8%8D%E6%AD%A3%E3%81%AA%E6%8E%A5%E7%B6%9A%E8%A9%A6%E8%A1%8C">QQmlEngine：QMLエンジンとは異なるスレッドにあるクラスへの不正な接続試行</h3>

<p><code>QQmlEngine: Illegal attempt to connect to XXXXXXX(0x99999999) that is in a different thread than the QML engine QQmlApplicationEngine(0x99999999.</code> というエラーが出た。</p>

<p>どうやら <code>QQmlApplicationEngine</code> とは別のスレッドで作成したインスタンスにアクセスしようとすると出るっぽい。</p>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E9%80%B2%E6%8D%97">本日の進捗</h2>

<p>なぜかアクセス違反で落ちると思ってたらそもそも想定した値が入ってなかった（つまるところ未初期化）
それは落ちるわけだ... とりあえずこれは直った。</p>

<p>やっとサムネイルが出るようになった。</p>

<p>画面はこんな感じで行きたいな。</p>

<p><img src="/images/20190824_frame_extract_ui1.png" alt="秒単位でのフレームの一覧" /> <img src="/images/20190824_frame_extract_ui2.png" alt="フレーム単位でのフレームの一覧" /></p>

<p>とりあえずの成果はこんな感じ</p>

<p><img src="/images/20190824_frame_extract.png" alt="成果" /></p>

<h2 id="%E3%83%A1%E3%83%A2">メモ</h2>

<ul>
<li>UIどうするか？

<ul>
<li>最終的にはスマホでも動くようにしたいなぁ</li>
</ul></li>
<li>複数の動画をドロップして全部一度に選べると良さそう</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://qiita.com/dNaga392/items/3b32fdb3d59b3c25fa6c">QVariantを便利に使おう - Qiita</a></li>
<li><a href="https://stackoverflow.com/questions/44501171/qvariant-with-custom-class-pointer-does-not-return-same-address">qt - QVariant with custom class pointer does not return same address - Stack Overflow</a></li>
<li><a href="https://forum.qt.io/topic/30169/qt-5-1-qml-property-through-threads">Qt 5.1 QML property through Threads | Qt Forum</a> の翻訳→ <a href="https://codeday.me/jp/qa/20190228/335153.html">c – スレッドを通したQt 5.1 QMLプロパティ - コードログ</a></li>
<li><a href="https://getting-started-qml-ja.readthedocs.io/ja/latest/chapter06.html">Qt C++を用いたQMLの拡張 — Getting started QML programming Japanese translation 2014.04.05 ドキュメント</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Qt メモ]]></title>
            <link href="http://www.sharkpp.net/blog/2019/07/29/qt-memo.html"/>
            <updated>2019-07-29T23:50:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/07/29/qt-memo.html</id>
            <content type="html"><![CDATA[<p>frame_extract を実装中に調べメモした、 Qt 関連の事を記事にしました。</p>

<h2 id="%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%89%B1%E3%81%86%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AA%E3%81%A9%E3%81%AE%E9%81%95%E3%81%84">文字列を扱うクラスなどの違い</h2>

<table>
<thead>
<tr>
  <th>型</th>
  <th>必要なヘッダ</th>
  <th>qmake</th>
  <th>特徴</th>
</tr>
</thead>
<tbody>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qstring.html">QString Class</a></td>
  <td><code>#include &lt;QString&gt;</code></td>
  <td><code>QT += core</code></td>
  <td>UTF-16で符号化。標準的な文字列の管理方法。生成コストは <code>QLatin1String</code> より高い</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qstring.html#QStringLiteral">QStringLiteral Macro</a></td>
  <td><code>#include &lt;QString&gt;</code></td>
  <td><code>QT += core</code></td>
  <td><code>QString</code> 構築処理の一部をコンパイル時に行うため生成コストが少ない</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qlatin1string.html">QLatin1String Class</a></td>
  <td><code>#include &lt;QLatin1String&gt;</code></td>
  <td><code>QT += core</code></td>
  <td>US-ASCII/Latin-1で符号化。<code>QLatin1String</code> を扱うためのオーバーロードが提供されていない場合は暗黙に <code>QString</code> へ変換されるため生成コストがかかる。</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qbytearray.html">QByteArray Class</a></td>
  <td><code>#include &lt;QByteArray&gt;</code></td>
  <td><code>QT += core</code></td>
  <td>１バイト単位で管理。データとして文字列を管理（つまり <code>'¥0'</code> もデータの一部として管理される）</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qbytearray.html#QByteArrayLiteral">QByteArrayLiteral Macro</a></td>
  <td><code>#include &lt;QByteArray&gt;</code></td>
  <td><code>QT += core</code></td>
  <td><code>QByteArray</code> 構築処理の一部をコンパイル時に行うため生成コストが少ない</td>
</tr>
</tbody>
</table>

<p>まとめるとこんな感じらしい。</p>

<p>サロゲートペアとかの扱いや絵文字とかの描画周りも調べて見たいところ。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://doc.qt.io/qt-5/qtquick-modelviewsdata-cppmodels.html">Using C++ Models with Qt Quick Views</a></li>
<li><a href="https://forum.qt.io/topic/78540/qstringliteral-vs-qlatin1string/2">QStringLiteral vs QLatin1String | Qt Forum</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[SoundPEATS TrueShift 開封の儀]]></title>
            <link href="http://www.sharkpp.net/blog/2019/06/30/unboxing-soundpeats-trueshift.html"/>
            <updated>2019-06-30T23:55:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/06/30/unboxing-soundpeats-trueshift.html</id>
            <content type="html"><![CDATA[<p>久しぶりにガジェットを買って少し使ってみたので、それの感想。
大体一週間前にアマゾンで少し値引きセールしてたので思わずBluetoothイヤホン、それも左右分離型の物を…　買ってしまった。</p>

<p><img src="/images/20190630_trueshift_001.jpg" alt="" /></p>

<p>とりあえず機種は <a href="https://www.amazon.co.jp/dp/B07RMFKL2M/">SoundPEATS TrueShift</a> です。</p>

<p>これ、公式ページに載ってないの何なんでしょう？</p>

<p>実のところ、Bluetoothイヤホン自体は持ってはいるんだけど、フィット感や充電の面倒くささでほぼ使わなくなってたりしたので、さらに増やすのはどうかと…　新しいのを買う前はそう思ってました。</p>

<h2 id="%E9%96%8B%E5%B0%81%E3%81%AE%E7%BE%A9%E5%86%8D%E7%8F%BE">開封の義(再現)</h2>

<p>開封の義を今回もやったのですが写真を取り忘れてたので再現となります。</p>

<p><img src="/images/20190630_trueshift_002.jpg" alt="" /></p>

<p><img src="/images/20190630_trueshift_003.jpg" alt="" /></p>

<p><img src="/images/20190630_trueshift_004.jpg" alt="" /></p>

<p><img src="/images/20190630_trueshift_005.jpg" alt="" /></p>

<p><img src="/images/20190630_trueshift_006.jpg" alt="" /></p>

<p>まず、イヤホンの本体左右に、充電兼用ケースは当然ですね  .</p>

<p>あとは、取説にカスタマーカード、充電ケーブルに予備もしくはサイズ違いのイヤーピースが入ってました。</p>

<p>なんか最近のガジェット、丈夫な箱に入ってて保管に困るんですよね…　みんなどうしてるんだろう？</p>

<h2 id="%E3%81%B5%E3%82%93%E3%82%8F%E3%82%8A%E3%81%AA%E4%BD%BF%E7%94%A8%E6%84%9F">ふんわりな使用感</h2>

<p>とりあえず朝夕一週間使ってみた感じ。</p>

<p>イヤホン自体は大体20分程度で10%減る感じ。
なので、3時間と少しぐらいが連続利用できる限度っぽい。
なので在来線からの新幹線での移動は若干厳しいかも。</p>

<p>あと、朝夕の使用中に他の電波と干渉したのか突然音飛びすることがありました。
場所によるものなのか何なのか...</p>

<p>音質に関してはまあそこそこな感じ、たぶん。</p>

<p>充電兼用ケースはイヤホンの充電だけに使ってる分には一週間は余裕で持つようです。
なのですごい楽！</p>

<p>あと気になる点として、少しフィット感が悪い(イヤーピース変えればよくなるかも？)部分があります。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>概ね満足している感じ。
ケースに放り込めば充電しているってのはすごく楽。
つまるところ買ってよかった。</p>
]]></content>
        </entry>
    </feed>