<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/blog/tags/Mac.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2021-01-01T13:34:26+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[macOS 上に Inkscape をインストールする]]></title>
            <link href="http://www.sharkpp.net/blog/2020/01/02/install-inkscape-for-macos-mojave-or-later.html"/>
            <updated>2020-01-02T11:48:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2020/01/02/install-inkscape-for-macos-mojave-or-later.html</id>
            <content type="html"><![CDATA[<p>macOS を Mojave 10.14 にしてから Inkscape が起動しなくなっていた。
が、まぁ、とりあえず使わないからいいか... と、そのままにしていたところ... 年末に急に使う事態が発生して大慌てで色々調べ入れ直したときの記録。</p>

<p><a href="/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html">以前試した方法</a>ではうまくいかなかったので調べました。</p>

<p><img src="/thumbs/0d867646943062ca30f59487e83c8755-384x384.png" alt="Inkscape 1.0beta2 version"></p>

<h2 id="%E7%B5%90%E8%AB%96">結論</h2>

<p>結論から書くと、公式に 0.92.2 もしくは 1.0 beta 2 があるのでそちらを利用しましょうということになります。</p>

<p><img src="/thumbs/7284f6bfabb921bb3c259938794f8558-256x256.png" alt="Inkscape 1.0beta2 download page"></p>

<p>色々調べましたが、どうもそういうことらしいです。</p>

<p><a href="https://inkscape.org/ja/release/inkscape-0.92.4/mac-os-x/dmg/dl/">Inkscape 0.92.4 - macOS : dmg | Inkscape</a> によると</p>

<blockquote>
  <p>Note:
  There is no .dmg file for macOS for the current Inkscape version at this time.
  Please use Inkscape 0.92.2 on macOS &lt;= 10.14. For Catalina (macOS 10.15), there is no stable version available, please use the latest beta version of Inkscape 1.0 or the development version.</p>
  
  <p>There will be a notarized and signed .dmg file for the upcoming Inkscape 1.0.</p>
  
  <blockquote>
    <p>注：
    現時点では、現在の Inkscape バージョンの macOS 用の .dmg ファイルはありません。
    macOS &lt;= 10.14 では Inkscape 0.92.2 を利用してください。Catalina（macOS 10.15）の場合、利用可能な安定バージョンはありません。Inkscape 1.0 の最新ベータバージョンまたは開発バージョンを利用してください。</p>
    
    <p>今後の Inkscape 1.0 には、公証され署名された .dmg ファイルがあります。</p>
  </blockquote>
</blockquote>

<p>と書かれています。</p>

<p><img src="/thumbs/9b8563bd587010d545f5a46a588e4bc4-256x256.png" alt="Inkscape 1.0beta2 download page"></p>

<p>Launchpad やファイルとの関連付けもできるようになって快適です。
ただ、高確率で突然強制終了するので自動保存の設定は必須かなと、思います。</p>

<p><img src="/thumbs/72f639e6f1156f3a2cbd727116bda4ac-256x256.png" alt="Inkscape 1.0beta2 download page"></p>

<h2 id="homebrew-%E7%B5%8C%E7%94%B1%E3%81%A7%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Homebrew 経由でのインストール</h2>

<p><a href="/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html">以前はできた</a> Homebrew 経由でのインストールは <code>"cxx11" is not a recognized standard</code> と怒られて、現時点ではできないようです。</p>

<pre><code class="console">$ brew install caskformula/caskformula/inkscape
==&gt; Tapping caskformula/caskformula
Cloning into '/usr/local/Homebrew/Library/Taps/caskformula/homebrew-caskformula'...
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 5 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (5/5), done.
Error: Invalid formula: /usr/local/Homebrew/Library/Taps/caskformula/homebrew-caskformula/Formula/inkscape.rb
inkscape: "cxx11" is not a recognized standard
Error: Cannot tap caskformula/caskformula: invalid syntax in tap!
</code></pre>

<p>こんな感じでエラーとなります。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<ul>
<li>現状、macOS 10.14 Mojave 以降では Homebrew でのインストールが失敗する</li>
<li>macOS 10.15 Catalina では 1.0 beta 2 以降が唯一の選択</li>
<li>macOS 10.14 Mojave もしくはそれ以下の macOS 10.x では、 1.0 beta 2 もしくは 0.92.2 が利用できる</li>
<li>公式バージョンをインストールすれば Launchpad やファイルの関連付けも設定される</li>
<li>Inkscape 1.0 beta 2 は高確率で強制終了するので自動保存の設定は必須</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://inkscape.org/release/inkscape-1.0/?latest=1">Download Inkscape 1.0beta2 | Inkscape</a></li>
<li><a href="https://inkscape.org/ja/release/inkscape-0.92.4/mac-os-x/dmg/dl/">Inkscape 0.92.4 - macOS : dmg | Inkscape</a></li>
<li><a href="https://github.com/caskformula/homebrew-caskformula/issues/89">brew install fails on bad "cxx11" · Issue #89 · caskformula/homebrew-caskformula</a></li>
<li><a href="https://github.com/caskformula/homebrew-caskformula/issues/90">"cxx11" is not a recognized standard · Issue #90 · caskformula/homebrew-caskformula</a></li>
<li><a href="https://github.com/caskformula/homebrew-caskformula/issues/74">Many brew commands fail with :cxx is disabled! There is no replacement. · Issue #74 · caskformula/homebrew-caskformula</a></li>
<li><a href="https://trsasasusu.com/blog/58/">Error: Calling needs :cxx11 is disabled! There is no replacement. というエラーがbrewで出た話 | 水面下のブログ</a></li>
<li><a href="/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html">macOS 上に Homebrew を利用して Inkscape をインストールする — さめたすたすのお家</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[macOS 上に Homebrew を利用して Inkscape をインストールする]]></title>
            <link href="http://www.sharkpp.net/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html"/>
            <updated>2017-04-30T23:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2017/04/30/Install-inkscape-using-homebrew-on-macos.html</id>
            <content type="html"><![CDATA[<p></p>
<div class="alert alert-danger alert-dismissible" role="alert">
  <div class="pull-left"><i class="fa fa-warning fa-2x"></i></div>
  <dl style="margin-bottom: 0; margin-left: 35px;">
    <dt>2020-01-02 追記</dt>
    <dd>Homebrew 経由でのインストールはできなくなっているようです。公式から動作可能なパッケージをインストールできます。詳しくは<a href="/blog/2020/01/02/install-inkscape-for-macos-mojave-or-later.html">macOS 上に Inkscape をインストールする</a>をご覧ください。</dd>
  </dl>
</div>

<p>開発中のアプリのアイコンを作成するために <a href="https://inkscape.org/ja/">Inkscape</a> が必要だったのですが、先日に Inkscape と <a href="https://www.xquartz.org/">XQuartz</a> をアップデートしてから何が悪いのか起動しなくて難儀していたところで、解決方法を見つけたのでその方法の記録です。</p>

<p><img src="/thumbs/632bbe45529a94416b0f7e519f24e6bf-384x384.png" alt="Inkscape 0.92.1 version"></p>

<h2 id="%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">はじめに</h2>

<p>解決方法ですが、実は公式のダウンロードページにしれっと書いてあったんですよね。</p>

<blockquote>
  <p><a href="https://inkscape.org/ja/download/mac-os/">Mac OS 版 | Inkscape</a></p>
  
  <p>For users who cannot wait to try out the new features and have some technical experience, alternative installation methods are available.</p>
  
  <p>(意訳：腕に覚えがあるなら新しいバージョンをインストールする別の方法があるけどどうする？)</p>
</blockquote>

<p>この記事を書いている時点(2017/04/30)では、どうやら最新バージョンの 0.92 系は .dmg が提供されていないので、ある意味、渡りに船かもと言うところも。</p>

<p>その方法 <a href="https://inkscape.org/ja/download/mac-os/#alternative_install_0.92">alternative installation methods</a> を確認すると、macOS の２大パッケージマネージャーの <a href="https://www.macports.org/">MacPorts</a> と <a href="https://brew.sh/">Homebrew</a> でのインストール方法が書いてあります。</p>

<p>自分の環境は、Homebrew なので、そちらでのビルドとインストールを試してみました。</p>

<p>ビルド時間などは、こんな感じ。</p>

<table>
<thead>
<tr>
  <th>パッケージ</th>
  <th>バージョン</th>
  <th align="right">ファイル数</th>
  <th align="right">サイズ</th>
  <th align="right">ビルド時間</th>
</tr>
</thead>
<tbody>
<tr>
  <td>openssl</td>
  <td>1.0.2k</td>
  <td align="right">1696</td>
  <td align="right">17.5MB</td>
  <td align="right">00:15:56</td>
</tr>
<tr>
  <td>python</td>
  <td>2.7.13</td>
  <td align="right">6337</td>
  <td align="right">86.7MB</td>
  <td align="right">00:04:03</td>
</tr>
<tr>
  <td>inkscape</td>
  <td>0.92.1</td>
  <td align="right">1019</td>
  <td align="right">128.3MB</td>
  <td align="right">00:27:50</td>
</tr>
</tbody>
</table>

<p>ちなみに、どうやらこの方法だとネイティブ版がビルドされるらしく日本語入力やシステムにインストールされているフォントが使えたりとか、嬉しい変化があったりもします。</p>

<h2 id="%E6%BA%96%E5%82%99">準備</h2>

<p>インストール前の準備として、Homebrew の環境を整えておきます。</p>

<p>まれに、パッケージのバージョンが上がっていたりするので、アップデートしておきます。</p>

<pre><code class="bash">$ brew update
</code></pre>

<p>また、以前に Homebrew で Inkscape をインストールしたことがある場合は、どうやらあらかじめアンインストールが必要のようです。</p>

<pre><code class="bash">$ brew uninstall inkscape
$ brew cleanup
</code></pre>

<h2 id="%E3%83%93%E3%83%AB%E3%83%89%EF%BC%86%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">ビルド＆インストール</h2>

<p>実際のところ、ビルド自体はコマンド一行で終わります。</p>

<pre><code class="bash">$ brew install caskformula/caskformula/inkscape
</code></pre>

<p>ビルドとインストールが</p>

<pre><code>$ brew install caskformula/caskformula/inkscape
==&gt; Tapping caskformula/caskformula
Cloning into '/usr/local/Homebrew/Library/Taps/caskformula/homebrew-caskformula'...
remote: Counting objects: 5, done.
           :
==&gt; make
==&gt; make install
🍺 /usr/local/Cellar/inkscape/0.92.1: 1,019 files, 128.3MB, built in 27 minutes 50 seconds
</code></pre>

<p>とこのような感じで終了したら、おもむろに</p>

<pre><code class="bash">$ inkscape
</code></pre>

<p>と入力します。
何もなければ Inkscape を起動できます。</p>

<p>インストール先の <code>/usr/local/Cellar/inkscape/0.92.1</code> は後で利用するので覚えておきます。</p>

<p>インストールした Inkscape のバージョンはこんな感じ。</p>

<p><a href="/images/2017_0430_inkscape_version.png"><img src="/thumbs/632bbe45529a94416b0f7e519f24e6bf-384x384.png" alt="Inkscape 0.92.1 version"></a></p>

<p>お疲れ様でした、と言いたいところですが、残念ながらこの状態では Launchpad に登録されていないので、もう一手間かける必要があります。</p>

<p>実は、</p>

<pre><code class="bash">$ brew cask install inkscape
</code></pre>

<p>でインストールすると、 .app がインストールされるようですが、現時点(2017/04/30)ではバージョンが 0.91-1 で、XQuartz 版で、実は裏で公式のパッケージをインストールしているだけなので日本語やフォントなどの制限があります。</p>

<h2 id="launchpad-%E3%81%B8%E3%81%AE%E7%99%BB%E9%8C%B2">Launchpad への登録</h2>

<p>以前は</p>

<pre><code class="bash">$ brew linkapps inkscape
</code></pre>

<p>みたいにすれば、できていたらしいけど、</p>

<blockquote>
  <p>Warning: <code>brew linkapps</code> has been deprecated and will eventually be removed!</p>
  
  <p>(訳：<code>brew linkapps</code>は廃止され、最終的に削除されます！)</p>
</blockquote>

<p>と怒られるので、別の方法をとります。</p>

<p>Inksacpe のインストール先は、先のビルド時のログに出てくる、<code>/usr/local/Cellar/inkscape/0.92.1</code> なので、<code>/bin/inkscape</code> を追加して、<code>"/usr/local/Cellar/inkscape/0.92.1/bin/inkscape"</code> が実態となります。</p>

<p>記録し忘れていたら、</p>

<pre><code class="bash">$ realpath $(which inkscape)
/usr/local/Cellar/inkscape/0.92.1/bin/inkscape
</code></pre>

<p>で確認できます。</p>

<p>スクリプトエディタで</p>

<pre><code class="AppleScript">tell application "/usr/local/Cellar/inkscape/0.92.1/bin/inkscape"
    activate
end tell
</code></pre>

<p>と入力して、</p>

<ol>
<li>「ファイル」メニュー</li>
<li>「書き出す...」</li>
<li>書き出し名＝「Inkscape」</li>
<li>ファイルフォーマット＝「アプリケーション」 ※ここが重要</li>
<li>「保存」を押下</li>
</ol>

<p><img src="/images/2017_0430_as2app.png" /></p>

<p>で、Inkscapeのランチャーアプリケーションを作成します。</p>

<p>書き出したアプリケーションを「アプリケーション」フォルダに入れれば完了です。</p>

<p>アプリケーションのアイコンはスクリプトファイルのアイコンがそのまま使われています。</p>

<p>「パッケージの内容を表示」で .app の中に潜ると</p>

<p><img src="/images/2017_0430_app_package_contents.png" /></p>

<p>のような感じになっているので、</p>

<p>るので、気になるようであれば、公式インストーラの .app から <code>Contents/Resources/inkscape.icns</code> を取り出し、 <code>Contents/Resources/applet.icns</code> を置き換えてあげれば</p>

<p><img src="/images/2017_0430_launcher_app_in_launchpad.png" /></p>

<p>こんな感じで Launchpad に表示されていると思います。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<ul>
<li>現状は 0.92.x に公式パッケージ(.dmg ファイル)は存在しない</li>
<li>Macports か Homebrew 経由で Inkscape の 0.92.x のネイティブ版(非XQuartz版)をビルド＆インストール可能</li>
<li>AppleScript でランチャーアプリを作れば Launchpad にも登録可能</li>
</ul>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://a244.hateblo.jp/entry/2016/12/10/215848">MacPorts と開発版 Inkscape (0.92pre3) - ながいものには、まかれたくない</a></li>
<li><a href="https://inkscape.org/ja/download/mac-os/#alternative_install_0.92">Mac OS 版 | Inkscape</a></li>
<li><a href="http://qiita.com/nkimra/items/e30b5d120a6cae7ded8d">AppleScriptでアプリケーションの操作 - Qiita</a></li>
<li><a href="https://apple.stackexchange.com/questions/8299/how-do-i-make-an-applescript-file-into-a-mac-app">How do I make an AppleScript file into a Mac App? - Ask Different</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Wine を使って Mac OS X で HSP と hgimg4 を動かしてみた]]></title>
            <link href="http://www.sharkpp.net/blog/2016/03/26/running-hsp-and-hgimg4-on-mac-osx-using-wine.html"/>
            <updated>2016-03-26T23:43:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2016/03/26/running-hsp-and-hgimg4-on-mac-osx-using-wine.html</id>
            <content type="html"><![CDATA[<p>HSP をどうしても Mac OS X で動かしたい！</p>

<p>まあ、とりあえず Wine 使っておけばいいよね！</p>

<p>よしよし動いた、って hgimg4 が動かないじゃないか！むきー</p>

<p>と、言う所から</p>

<p><a href="/images/2016_0326_hgimg4_test9.png"><img src="/thumbs/605ffbef1139b6b8bc46f69d73d86b6b-512x512.png" alt="hgimg4 サンプル test9"></a></p>

<p>このように、hgimg4 のサンプルが動くようにするための方法です。</p>

<h2 id="wine-%E3%81%AE%E6%97%A5%E6%9C%AC%E8%AA%9E%E7%92%B0%E5%A2%83%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B">Wine の日本語環境を設定する</h2>

<p>まず Wine で UI などに日本語を表示させる為の設定を行います。</p>

<p>設定をしないと</p>

<p><a href="/images/2016_0326_hsp_install_wizard_tofu.png"><img src="/thumbs/e2f456d9675823508a2d47ecb49a0bca-256x256.png" alt="HSP インストールウィザード 豆腐"></a></p>

<p>こんな感じに、全部が全部では無いですが豆腐になります。</p>

<p>最初に HSP のインストール前にいろいろ設定を行うために Wine の環境を作ります。</p>

<p>標準では <code>~/.wine</code> に環境が作られます。</p>

<pre><code>$ wine xxx
</code></pre>

<p>「xxx.exe が見つから無い」と言われても無視してください。ワザとです。</p>

<p>別の場所に専用の環境を作る場合は</p>

<pre><code>$ WINEPREFIX=~/wine-hgimg4-test wine xxx
</code></pre>

<p>と <code>WINEPREFIX</code> 環境変数を指定します。</p>

<p>以降では <code>~/wine-hgimg4-test</code> を環境として使用します。</p>

<p>日本語のフォントは  <a href="http://web.archive.org/web/20190326123924/http://www.geocities.jp/ipa_mona/">IPAモナーフォント</a> をインストールし、利用します。</p>

<p>※ geocities がなくなった影響でサイトが消えてるため INTERNET ARCHIVE からのリンクに変更しました (2019年04月30日追記)</p>

<p>まずは、フォントをインストールします。</p>

<pre><code class="bash">$ wget http://web.archive.org/web/20190324124426/http://www.geocities.jp/ipa_mona/opfc-ModuleHP-1.1.1_withIPAMonaFonts-1.0.8.tar.gz
$ tar xzf opfc-ModuleHP-1.1.1_withIPAMonaFonts-1.0.8.tar.gz
$ mv opfc-ModuleHP-1.1.1_withIPAMonaFonts-1.0.8/fonts/ipa*.ttf ~/wine-hgimg4-test/drive_c/windows/Fonts/
$ rm -rf opfc-ModuleHP-1.1.1_withIPAMonaFonts-1.0.8
</code></pre>

<p>次に、<code>MS Gothic</code> などのフォントを別のフォント(ここでは IPA モナー フォント)のエリアスとする設定をします。</p>

<pre><code>REGEDIT4

[HKEY_CURRENT_USER¥Software¥Wine¥Fonts¥Replacements]
"MS Gothic"="IPA モナー ゴシック"
"MS Mincho"="IPA モナー 明朝"
"MS PGothic"="IPA モナー Pゴシック"
"MS PMincho"="IPA モナー P明朝"
"MS UI Gothic"="IPA モナー UIゴシック"
"ＭＳ ゴシック"="IPA モナー ゴシック"
"ＭＳ 明朝"="IPA モナー 明朝"
"ＭＳ Ｐゴシック"="IPA モナー Pゴシック"
"ＭＳ Ｐ明朝"="IPA モナー P明朝"
</code></pre>

<p>を <strong>Shift_JIS</strong> で！ <code>wine-font-replace-mona.reg</code> として保存しレジストリを更新します。</p>

<p>コピペも面倒な場合は、 <a href="/files/2016_0326_wine-font-replace-mona.reg">wine-font-replace-mona.reg</a> をダウンロードしてください。</p>

<pre><code class="bash">$ WINEPREFIX=~/wine-hgimg4-test wine regedit wine-font-replace-mona.reg
</code></pre>

<p>最後に、フォントのスムース処理の設定を行います。</p>

<pre><code class="registory">REGEDIT4

[HKEY_CURRENT_USER\Control Panel\Desktop]
"FontSmoothing"="1"
"FontSmoothingGamma"=dword:00000578
"FontSmoothingOrientation"=dword:00000001
"FontSmoothingType"=dword:00000002
</code></pre>

<p>を同じく <strong>Shift_JIS</strong> で！ <code>wine-font-smoothing-rgb.reg</code> として保存しレジストリを更新します。</p>

<p>コピペがやっぱり面倒な場合は、 <a href="/files/2016_0326_wine-font-smoothing-rgb.reg">wine-font-smoothing-rgb.reg</a> をダウンロードしてください。</p>

<pre><code>$ WINEPREFIX=~/wine-hgimg4-test wine regedit wine-font-smoothing-rgb.reg
</code></pre>

<h2 id="hsp-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">HSP のインストール</h2>

<p><a href="http://hsp.tv/make/downlist.html">HSPダウンロード</a> から HSP 3.4 をダウンロードします。</p>

<p>※ <a href="http://www.onionsoft.net/wp/archives/1642">HSP3.5β3を公開しました - おにたま(オニオンソフト)のおぼえがき</a> から HSP 3.5b3 をダウンロードしてもいいですが、こちらはインストーラ版では無いので注意です。</p>

<p>コマンドでダウンロードする場合はこんな感じです。</p>

<pre><code>$ wget http://www.onionsoft.net/hsp/file/hsp34.exe
</code></pre>

<p>そして、インストールします。</p>

<pre><code class="bash">$ WINEPREFIX=~/wine-hgimg4-test wine hsp34.exe
</code></pre>

<p>途中の「デスクトップ上にアイコンを作成する」や「拡張子の関連付けを行う」はチェックを外しておきましょう。</p>

<p><a href="/images/2016_0326_hsp_install_wizard_page_1.png"><img src="/thumbs/9b93c326efb30e0e081f852fdc82f27c-128x128.png" alt="HSP インストールウィザード ページ 01"></a> 
<a href="/images/2016_0326_hsp_install_wizard_page_2.png"><img src="/thumbs/944bfa26b702b628fdd4d800bba14dc3-128x128.png" alt="HSP インストールウィザード ページ 02"></a> 
<a href="/images/2016_0326_hsp_install_wizard_page_3.png"><img src="/thumbs/f5959a28a94fe43e70c5d52368920698-128x128.png" alt="HSP インストールウィザード ページ 03"></a> 
<a href="/images/2016_0326_hsp_install_wizard_page_4.png"><img src="/thumbs/78106ccd5918ab9c41b399079e5b3cf1-128x128.png" alt="HSP インストールウィザード ページ 04"></a> 
<a href="/images/2016_0326_hsp_install_wizard_page_5.png"><img src="/thumbs/e330caa9317c918cd8008d4e63cc8ca3-128x128.png" alt="HSP インストールウィザード ページ 05"></a> 
<a href="/images/2016_0326_hsp_install_wizard_page_6.png"><img src="/thumbs/88933c9aab67553abd0bc21af909a3a9-128x128.png" alt="HSP インストールウィザード ページ 06"></a> 
<a href="/images/2016_0326_hsp_install_wizard_page_7.png"><img src="/thumbs/69dfcfea98e8cc10ce874d787a6c0174-128x128.png" alt="HSP インストールウィザード ページ 07"></a></p>

<p>こんな感じにセットアップウィザードを行うと、</p>

<p><a href="/images/2016_0326_hsp_demo.png"><img src="/thumbs/0442cc0847c8faec0fefeb50c18da5a9-384x384.png" alt="HSPデモ"></a></p>

<p>とりあえず、 Wine で HSP が動くようになります。</p>

<pre><code class="bash">$ WINEPREFIX=~/wine-hgimg4-test wine c:\\hsp34\\hsed3.exe
</code></pre>

<p>とすると HSPスクリプトエディタ も起動します。</p>

<p><a href="/images/2016_0326_hsp_script_editor_with_assistant.png"><img src="/thumbs/9ebdeb5fd154ee9b2ce9200d5f1c98fe-384x384.png" alt="HSP スクリプトエディタ＆アシスタント"></a></p>

<h2 id="osx-%E4%B8%8A%E3%81%AE-wine-%E3%81%A7-hgimg3-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99">OSX 上の Wine で hgimg3 を動かす</h2>

<p>HSPスクリプトエディタ で <code>sample\\hgimg3\\tamane4.hsp</code> を開きます。</p>

<pre><code class="bash">$ WINEPREFIX=~/wine-hgimg4-test wine c:\\hsp34\\hsed3.exe "sample\\hgimg3\\tamane4.hsp"
</code></pre>

<p><a href="/images/2016_0326_hgimg3_tamane_source.png"><img src="/thumbs/7cc244fde01011f836fc6ec65c444a7a-384x384.png" alt="hgimg3 珠音 ソース"></a></p>

<p>そして、おもむろに <kbd>F5</kbd> を押下、</p>

<p><a href="/images/2016_0326_hgimg3_tamane_running.png"><img src="/thumbs/1e9426ea187d90bd2febb15569bc3c60-384x384.png" alt="hgimg3 珠音"></a></p>

<p>はい、無事にSDサイズの<ruby>珠音<rp>(</rp><rt>たまね</rt><rp>)</rp></ruby>ちゃんが表示されました。</p>

<h2 id="osx-%E4%B8%8A%E3%81%AE-wine-%E3%81%A7-hgimg4-%E3%82%92%E5%8B%95%E3%81%8B%E3%81%99">OSX 上の Wine で hgimg4 を動かす</h2>

<p>HSPスクリプトエディタ で <code>sample\\hgimg4\\tamane1.hsp</code> を開きます。</p>

<pre><code class="bash">$ WINEPREFIX=~/wine-hgimg4-test wine c:\\hsp34\\hsed3.exe "sample\\hgimg4\\tamane1.hsp"
</code></pre>

<p><a href="/images/2016_0326_hgimg4_tamane_source.png"><img src="/thumbs/ff0fd23abc5d83baa50d638b36b744cf-384x384.png" alt="hgimg4 珠音 ソース"></a></p>

<p>そして、おもむろに <kbd>F5</kbd> を押下、</p>

<p><a href="/images/2016_0326_hgimg4_tamane_running_failed.png"><img src="/thumbs/8930f39e1744af1691e5f13b93140428-384x384.png" alt="hgimg4 珠音 失敗"></a></p>

<p><span style="font-family: IPAMonaPGothic,'ＭＳ Ｐゴシック',sans-serif;font-size:16px;">(´・ω・`)</sapn></p>

<p>ここで諦めずに頑張る自分。</p>

<p>Wine のビルド方法は <a href="/blog/2016/01/31/building-wine-on-mac-osx.html">Mac OS X での Wine のビルドの仕方</a>
 の記事を参照のこと。</p>

<p>そして、Wine 1.9.6 からの変更が、<a href="https://github.com/sharkpp/wine/commit/6a876fd9a51d5c6ce54c1a6facf9b59561f62ecd">どーん</a></p>

<pre><code class="diff">$ git diff 6bc0ce26a853b51f11958545bfa5570bdcb1cf01 6a876fd9a51d5c6ce54c1a6facf9b59561f62ecd
diff --git a/dlls/winemac.drv/opengl.c b/dlls/winemac.drv/opengl.c
index ab79a82..c1492f7 100644
--- a/dlls/winemac.drv/opengl.c
+++ b/dlls/winemac.drv/opengl.c
@@ -2387,6 +2387,13 @@ static struct wgl_context *macdrv_wglCreateContextAttribsARB(HDC hdc,
         }
     }

+    if (3 == major &amp;&amp; minor &lt;= 1) { // force down OpenGL version
+        major   = 2;
+        minor   = 1;
+        flags  &amp;= ~WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB;
+        profile&amp;= ~WGL_CONTEXT_CORE_PROFILE_BIT_ARB;
+    }
+
     if ((major == 3 &amp;&amp; (minor == 2 || minor == 3)) ||
         (major == 4 &amp;&amp; (minor == 0 || minor == 1)))
     {
</code></pre>

<p>ビルドが、ばーん</p>

<pre><code class="bash">$ make
   :
Wine build complete.
</code></pre>

<p>最後に <code>sample\\hgimg4\\tamane1.hsp</code> を開き、</p>

<pre><code class="bash">$ WINEPREFIX=~/wine-hgimg4-test ./wine c:\\hsp34\\hsed3.exe "sample\\hgimg4\\tamane1.hsp"
</code></pre>

<p>そして、おもむろに <kbd>F5</kbd> を押下、</p>

<p><a href="/images/2016_0326_hgimg4_tamane_running.png"><img src="/thumbs/7095b1a5c9519d4d7402612142b8c1b6-384x384.png" alt="hgimg4 珠音"></a></p>

<p>おおおおー</p>

<p>やったね、無事に<ruby>珠音<rp>(</rp><rt>たまね</rt><rp>)</rp></ruby>ちゃんが表示されました。</p>

<h2 id="%E6%8A%80%E8%A1%93%E7%9A%84%E3%81%AA%E3%81%93%E3%81%A8%E3%82%92%E3%81%99%E3%81%93%E3%81%97">技術的なことをすこし</h2>

<p>今回やったことは、 OpenGL 3.1 を要求された場合に OpenGL 2.1 に強制的に変えることをしています。</p>

<p>いろいろ調べたところ、OS X の OpenGL サポートがちょっと残念なことになっているようで、<a href="https://developer.apple.com/opengl/capabilities/GLInfo_1090.html">OS X 10.9 OpenGL Information - OpenGL - Apple Developer</a> の辺りを見ると</p>

<table>
<thead>
<tr>
  <th>Profile</th>
  <th>Version</th>
</tr>
</thead>
<tbody>
<tr>
  <td>Legacy</td>
  <td>2.1</td>
</tr>
<tr>
  <td>Core</td>
  <td>3.3 - 4.1</td>
</tr>
</tbody>
</table>

<p>となっていて、OpenGL 3.1 なんてサポートして無いよ！って怒られて実行できなかったようです。</p>

<p>単純に Core プロファイルで動くようにして今度はシェーダーでバージョンが違うと怒られたのでどうしたものかと悩んでいましたが、 hgimg4 の 3D エンジンであるところの <a href="http://www.gameplay3d.io/">GamePlay 2D/3D</a> は OS X もサポートしているらしいのでビルドしてみて試したところ、あれ？ OpenGL 2.1 で動いているぞ！ってことで、今回の対応になったわけです。</p>

<p>ただ、OpenGL 3.1 で使えるシェーダーの機能を使っている場合は Windows と動きが違う可能性があるので確認は必要になると思います。</p>

<h2 id="%E3%81%8A%E3%81%BE%E3%81%91">おまけ</h2>

<p>hgimg4 の他のサンプルや、 HSPプログラムコンテスト 2015 で hgimg4 を利用したプログラムを探し動かしてみました。</p>

<p><a href="/images/2016_0326_hgimg4_test1.png"><img src="/thumbs/9909f635e32ecccd3d061bd49f5718cc-256x256.png" alt="hgimg4 サンプル test1"></a>
<a href="/images/2016_0326_hgimg4_test2.png"><img src="/thumbs/6225a1255e77e5d0d46b35b487e5397c-256x256.png" alt="hgimg4 サンプル test2"></a>
<a href="/images/2016_0326_hgimg4_test3.png"><img src="/thumbs/75789f539377222aba6535d5e37b00ad-256x256.png" alt="hgimg4 サンプル test3"></a>
<a href="/images/2016_0326_hgimg4_test4.png"><img src="/thumbs/06caf84bc1fb78e628676a0a75c4ca71-256x256.png" alt="hgimg4 サンプル test4"></a>
<a href="/images/2016_0326_hgimg4_test5.png"><img src="/thumbs/b2f896301fb8295cfc6a63134c8860fa-256x256.png" alt="hgimg4 サンプル test5"></a>
<a href="/images/2016_0326_hgimg4_test6.png"><img src="/thumbs/0ee1b30a809c80b7272297875d9288b2-256x256.png" alt="hgimg4 サンプル test6"></a>
<a href="/images/2016_0326_hgimg4_test7.png"><img src="/thumbs/fb8331afdbe5be612ce12d5b6e084058-256x256.png" alt="hgimg4 サンプル test7"></a>
<a href="/images/2016_0326_hgimg4_test8.png"><img src="/thumbs/7721eeef26d9c47dceab361c3bf05b55-256x256.png" alt="hgimg4 サンプル test8"></a>
<a href="/images/2016_0326_hgimg4_test9.png"><img src="/thumbs/605ffbef1139b6b8bc46f69d73d86b6b-256x256.png" alt="hgimg4 サンプル test9"></a>
<a href="/images/2016_0326_hgimg4_test10.png"><img src="/thumbs/96a44b6e76b6511e3f1b069f3f0457f8-256x256.png" alt="hgimg4 サンプル test10"></a>
<a href="/images/2016_0326_hgimg4_test11.png"><img src="/thumbs/820f347f4df1ae5f73069937720df6f8-256x256.png" alt="hgimg4 サンプル test11"></a>
<a href="/images/2016_0326_hgimg4_test12.png"><img src="/thumbs/8e056d3f9c8cfc709817396d5b66e0a4-256x256.png" alt="hgimg4 サンプル test12"></a>
<a href="/images/2016_0326_hgimg4_test13.png"><img src="/thumbs/a84bf8234192e3ff26852dbfc6623d41-256x256.png" alt="hgimg4 サンプル test13"></a>
<a href="/images/2016_0326_hgimg4_block3.png"><img src="/thumbs/ad5e652367972a2d7884af6008565618-256x256.png" alt="hgimg4 サンプル block3"></a></p>

<p><a href="http://dev.onionsoft.net/seed/info.ax?id=1077">ヨミチハコワイ</a>
(c) 法貴 優雅（MYAOSOFT）/ <a href="https://twitter.com/MYAOSOFT">@MYAOSOFT</a></p>

<p><a href="/images/2016_0326_hsp_contest_2015_no1077_ss_01.png"><img src="/thumbs/c6a5cc7b92acf6127054f3edbe0f6867-256x256.png" alt="ヨミチハコワイ 01"></a>
<a href="/images/2016_0326_hsp_contest_2015_no1077_ss_02.png"><img src="/thumbs/85b6912a8e8af5d7b013385f29a8878c-256x256.png" alt="ヨミチハコワイ 02"></a>
<a href="/images/2016_0326_hsp_contest_2015_no1077_ss_03.png"><img src="/thumbs/2b49015e278dcc10bab77fe863dadd26-256x256.png" alt="ヨミチハコワイ 03"></a></p>

<p><a href="http://dev.onionsoft.net/seed/info.ax?id=1084">R-sim++</a>
(c) hashikemu / <a href="https://twitter.com/kemuduino">@hashikemu</a></p>

<p><a href="/images/2016_0326_hsp_contest_2015_no1084_ss_01.png"><img src="/thumbs/5e254af57f6df3f1a0e6636aef19175d-256x256.png" alt="R-sim++ 01"></a>
<a href="/images/2016_0326_hsp_contest_2015_no1084_ss_02.png"><img src="/thumbs/cabc8d6a7d789a12153a0c6e4b8d25d2-256x256.png" alt="R-sim++ 02"></a>
<a href="/images/2016_0326_hsp_contest_2015_no1084_ss_03.png"><img src="/thumbs/1b694ea19f12b779d33fcdafd81f58cd-256x256.png" alt="R-sim++ 03"></a></p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://cozyattic.wordpress.com/2015/02/16/homebrew%E3%81%A7wine%E3%82%92%E4%BD%BF%E3%81%86/">【微妙】HomebrewでWineを使う | cozy attic</a></li>
<li><a href="http://kakurasan.blogspot.jp/2015/06/manage-winapps-using-wineprefixes.html">Wine環境(WINEPREFIX)を分けてWindowsアプリを上手に管理する - kakurasan</a></li>
<li><a href="http://web.archive.org/web/20190326123924/http://www.geocities.jp/ipa_mona/">IPAモナーフォント</a></li>
<li><a href="https://technet.microsoft.com/en-us/library/cc978612.aspx">FontSmoothing</a></li>
<li><a href="http://d.hatena.ne.jp/kakurasan/20090107/p1">Wine 1.1.12におけるフォントのサブピクセルレンダリングについて - 試験運用中なLinux備忘録</a>
<a href="https://developer.apple.com/opengl/capabilities/GLInfo_1090.html">OS X 10.9 OpenGL Information - OpenGL - Apple Developer</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Mac OS X での Wine のビルドの仕方]]></title>
            <link href="http://www.sharkpp.net/blog/2016/01/31/building-wine-on-mac-osx.html"/>
            <updated>2016-01-31T12:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2016/01/31/building-wine-on-mac-osx.html</id>
            <content type="html"><![CDATA[<p>Mac で Wine を使うには、まあ普通に公式の <a href="https://wiki.winehq.org/MacOSX">MacOSX</a> からビルド済みバイナリをインストールしたほうが早いのだけれど、どうしてもソースからビルドしないといけない場合のビルドの仕方をメモ。</p>

<p>環境は</p>

<ul>
<li>Mac OS X 10.10.5</li>
<li>Xcode 7.2 Build version 7C68</li>
<li>Homebrew 0.9.5 (git revision 4b1da8; last commit 2016-01-30)</li>
<li>Wine 1.9.2</li>
</ul>

<p>まずは結論から、<a href="https://wiki.winehq.org/MacOSX">MacOSX</a> のページに書かれていることをそのままやれば、問題なくビルドが通りました。</p>

<p>最初、途中の手順を抜かしてしまいうまくいかなくて、<a href="https://wiki.winehq.org/MacOSX/Building#Build_Wine_the_Scripted_Way">Build Wine the Scripted Way</a> に書かれているスクリプトを試してみたけど、結果から言うと、そのスクリプトは埋め込まれている内容が古いのと途中で失敗したので使わないほうが吉、のようです。
あと、Google code にホスティングされているのでもはや更新されない、ってのもある。</p>

<h2 id="%E3%83%93%E3%83%AB%E3%83%89%E6%96%B9%E6%B3%95">ビルド方法</h2>

<p>Xcode と XQuartz がインストール済みの場合は</p>

<pre><code class="bash">$ brew install --only-dependencies --devel wine
$ wget http://dl.winehq.org/wine/source/1.9/wine-1.9.2.tar.bz2
$ tar xf wine-1.9.2.tar.bz2
$ cd wine-1.9.2
$ ./configure CC="clang" CXX="clang++" CFLAGS="-std=gnu89 -g"
$ make
</code></pre>

<p>と、こんな感じで、30分から40分ぐらいでビルドができます。</p>

<p>では、順番に</p>

<h3 id="1.-xcode-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">1. Xcode をインストール</h3>

<p>まずはこれがないと始まらない</p>

<h3 id="2.-homebrew-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%EF%BC%86%E3%82%A2%E3%83%83%E3%83%97%E3%83%87%E3%83%BC%E3%83%88">2. Homebrew をインストール＆アップデート</h3>

<p>Homebrew をインストールします。</p>

<p>すでにインストール済みの場合、<code>brew update</code> で更新しておいたほうがいいと思います。</p>

<p>そうしないと</p>

<pre><code class="bash">$ brew install --only-dependencies --devel wine
                  :
==&gt; Installing wine dependency: libpng
==&gt; Downloading https://downloads.sf.net/project/libpng/libpng16/1.6.16/libpng-1.6.16.tar.xz

curl: (22) The requested URL returned error: 404 Not Found
Error: Failed to download resource "libpng"
Download failed: https://downloads.sf.net/project/libpng/libpng16/1.6.16/libpng-1.6.16.tar.xz
</code></pre>

<p>みたいな感じになることがあります。</p>

<h3 id="3.-xquartz-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">3. XQuartz をインストール</h3>

<p><a href="http://www.xquartz.org/">XQuartz</a> からパッケージをダウンロードしてインストールすればいいと思う。</p>

<p>Homebrew の場合は</p>

<pre><code class="bash">$ brew install caskroom/cask/xquartz
</code></pre>

<p>でインストールできる。</p>

<p>なんかおかしかったら再インストールをすれば直る、って書いてある。</p>

<h3 id="4.-%E4%BE%9D%E5%AD%98%E9%96%A2%E4%BF%82%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">4. 依存関係をインストール</h3>

<p><a href="https://wiki.winehq.org/MacOSX/Building#Dependencies">Dependencies</a> に書かれている通りにやればOK。</p>

<p>例によって Homebrew の場合は <code>brew install --only-dependencies --devel wine</code> でOK。</p>

<pre><code class="bash">$ brew install --only-dependencies --devel wine
==&gt; Installing dependencies for wine: libtasn1, gmp, nettle, gnutls, libpng, freetype, jpeg, libtool, libusb, libusb-compat, font
==&gt; Installing wine dependency: libtasn1
           :
</code></pre>

<h3 id="5.-wine-%E3%81%AE%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AE%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89%E3%81%A8%E5%B1%95%E9%96%8B">5. Wine のソースのダウンロードと展開</h3>

<p><a href="https://www.winehq.org/announce/1.9.2">Wine Announcement</a> のリンクから tar ball の URL をコピーしてソースをダウンロード。</p>

<p>(なんか、ゲートウエイの調子が悪い時があるようなので、リトライするかミラーからダウンロードしたほうがいいかもしれない)</p>

<p>そして、ダウンロードしたファイルを</p>

<pre><code class="bash">$ wget http://dl.winehq.org/wine/source/1.9/wine-1.9.2.tar.bz2
$ tar xf wine-1.9.2.tar.bz2
$ cd wine-1.9.2
</code></pre>

<p>このように展開する。</p>

<h3 id="6.-%E3%82%B3%E3%83%B3%E3%83%95%E3%82%A3%E3%82%B0%EF%BC%86%E3%83%93%E3%83%AB%E3%83%89">6. コンフィグ＆ビルド</h3>

<p>やり方は <a href="https://wiki.winehq.org/MacOSX/Building#Building_from_Source">Building from Source</a> の通りに <code>./configure CC="clang" CXX="clang++" CFLAGS="-std=gnu89 -g" ; make</code> するだけ。</p>

<pre><code class="bash">$ ./configure CC="clang" CXX="clang++" CFLAGS="-std=gnu89 -g"
checking build system type... x86_64-apple-darwin14.5.0
checking host system type... x86_64-apple-darwin14.5.0
                   :

configure: Finished.  Do 'make' to compile Wine.

$ make
clang -m32 -c -o ffs.o ffs.c -I. -I../../include ...
                   :
Wine build complete.
</code></pre>

<h3 id="7.-%E3%83%93%E3%83%AB%E3%83%89%E3%81%97%E3%81%9F-wine-%E3%81%AE%E5%AE%9F%E8%A1%8C">7. ビルドした Wine の実行</h3>

<p>ドキュメントにも書いてありますが <code>make install</code> は<strong>せず</strong>に、ビルドした場所で実行します。</p>

<p><code>$ ./wine explorer.exe</code></p>

<p>のような感じ。</p>

<p>すでにパッケージなどで Wine をインストールしている場合は、</p>

<pre><code class="bash">$ WINEPREFIX=`pwd`/wine-env ./wine explorer.exe
wine: created the configuration directory '~/wine-1.9.2/wine-env'
                   :
wine: configuration in '~/wine-1.9.2/wine-env' has been updated
</code></pre>

<p>のような感じで独自の環境を作ったほうがいいかもしれない。</p>

<p>なお、 X11/XQuartz 関連でエラーが出た場合は <code>DYLD_FALLBACK_LIBRARY_PATH="${DYLD_FALLBACK_LIBRARY_PATH}:/usr/X11/lib" wine program_name.exe</code> のような感じで回避できるようです。</p>

<h2 id="%E3%81%8A%E3%81%BE%E3%81%91%EF%BC%9A%E3%82%BD%E3%83%BC%E3%82%B9%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E6%A4%9C%E8%A8%BC">おまけ：ソースファイルの検証</h2>

<p>きっと、ほとんどの場合は、tar ball をダウンロードしてそのまま使うと思うけど、シグネチャも公開されているので、せっかくだからダウンロードしたファイルの検証をしてみる。</p>

<p>検証には GnuPG を使います。</p>

<pre><code class="bash">$ gpg
-bash: gpg: command not found
$ brew install gpg
==&gt; Downloading https://homebrew.bintray.com/bottles/gnupg-1.4.20.yosemite.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring gnupg-1.4.20.yosemite.bottle.tar.gz
*  /usr/local/Cellar/gnupg/1.4.20: 53 files, 5.4M
</code></pre>

<p>が、インストールされていなかったので Homebrew でサクッとインストール。</p>

<pre><code class="bash">$ wget http://dl.winehq.org/wine/source/1.9/wine-1.9.2.tar.bz2.sign
</code></pre>

<p>シグネチャを <a href="http://dl.winehq.org/wine/source/1.9/">Index of /wine/source/1.9</a> から探し、ダウンロードして検証。</p>

<pre><code class="bash">$ gpg --verify wine-1.9.2.tar.bz2.sign
gpg: assuming signed data in `wine-1.9.2.tar.bz2'
gpg: Signature made Fri Jan 22 23:29:08 2016 JST using RSA key ID AF17519D
gpg: Can't check signature: public key not found
</code></pre>

<p>公開鍵がない！って怒られる。</p>

<p>Wine のメーリングリストの <a href="https://www.winehq.org/pipermail/wine-users/2007-July/027429.html">[Wine] Using .sign PGP/GnuPGP/gpg</a> のポストによると、どうやら <code>"Alexandre Julliard &lt;julliard at winehq.org&gt;"</code> さんの鍵で署名してあるらしいので探してインポートする。</p>

<p><code>using RSA key ID AF17519D</code> って書かれているのでそれを探せばいいか、と思ったけどファイルの検証をするのにシグネチャの情報を信じてはダメですよね。</p>

<p>公式ページのどこかに、署名はどのキーでしてあるとか書いていないのだろうか？</p>

<pre><code class="bash">$ gpg --search-keys "julliard@winehq.org"
gpg: searching for "julliard@winehq.org" from hkp server keys.gnupg.net
(1) Alexandre Julliard &lt;julliard@winehq.org&gt;
      4096 bit RSA key AF17519D, created: 2015-11-03
(2) Alexandre Julliard &lt;julliard@winehq.org&gt;
      1024 bit DSA key B9461DD7, created: 2004-10-07
Keys 1-2 of 2 for "julliard@winehq.org".  Enter number(s), N)ext, or Q)uit &gt; q
$ gpg --recv-keys AF17519D
gpg: requesting key AF17519D from hkp server keys.gnupg.net
gpg: key AF17519D: public key "Alexandre Julliard &lt;julliard@winehq.org&gt;" imported
gpg: no ultimately trusted keys found
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
</code></pre>

<p>鍵の種類が２種類あるらしいので新しいほうの <code>4096 bit RSA key</code> の <code>AF17519D</code> を選択してインポートする。</p>

<p>そして検証。</p>

<pre><code class="bash">$ gpg --verify wine-1.9.2.tar.bz2.sign
gpg: assuming signed data in `wine-1.9.2.tar.bz2'
gpg: Signature made Fri Jan 22 23:29:08 2016 JST using RSA key ID AF17519D
gpg: Good signature from "Alexandre Julliard &lt;julliard@winehq.org&gt;"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: DA23 579A 74D4 AD9A F9D3  F945 CEFA C8EA AF17 519D
</code></pre>

<p><code>Good signature</code> と表示されればOKです。
何かおかしければ、<code>BAD signature</code> と表示されます。</p>

<p>ということで、まとめると</p>

<pre><code class="bash">$ gpg --recv-keys AF17519D
$ wget http://dl.winehq.org/wine/source/1.9/wine-1.9.2.tar.bz2
$ wget http://dl.winehq.org/wine/source/1.9/wine-1.9.2.tar.bz2.sign
$ gpg --verify wine-1.9.2.tar.bz2.sign 2&gt;&amp;1 | grep "Good signature"
gpg: Good signature from "Alexandre Julliard &lt;julliard@winehq.org&gt;"
</code></pre>

<p>こんな感じです。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="https://wiki.winehq.org/MacOSX/Building">MacOSX/Building - WineHQ Wiki</a></li>
<li><a href="http://qiita.com/tyfkda/items/565cd067a11419650323">Xcodeのコマンドラインツールのバージョン確認 - Qiita</a></li>
<li><a href="http://kakurasan.blogspot.jp/2015/06/manage-winapps-using-wineprefixes.html">Wine環境(WINEPREFIX)を分けてWindowsアプリを上手に管理する - kakurasan</a></li>
<li><a href="http://dl.winehq.org/wine/source/1.9/">Index of /wine/source/1.9</a></li>
<li><a href="https://www.winehq.org/pipermail/wine-users/2007-July/027429.html">[Wine] Using .sign PGP/GnuPGP/gpg</a></li>
<li><a href="http://pooh.gr.jp/?p=301">GPGで署名確認 | POOH.GR.JP</a></li>
<li><a href="https://help.ubuntu.com/community/VerifyIsoHowto">VerifyIsoHowto - Community Help Wiki</a></li>
<li><a href="http://keyserver.ubuntu.com/pks/lookup?op=vindex&amp;search=julliard%40winehq.org&amp;fingerprint=on">Search results for 'winehq org julliard'</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Mac で rbenv を使って複数バージョンの Ruby を管理するためのメモ]]></title>
            <link href="http://www.sharkpp.net/blog/2015/10/25/ruby-rbenv-on-mac-osx-memo.html"/>
            <updated>2015-10-25T12:00:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2015/10/25/ruby-rbenv-on-mac-osx-memo.html</id>
            <content type="html"><![CDATA[<h2 id="%E6%A6%82%E8%A6%81">概要</h2>

<p>ちょっと、いろいろなバージョンの Ruby を使用しないといけない状況に陥ったので rbenv での ruby のバージョンを管理をする方法のメモ。
環境は、 Mac を使用しているので Homebrew を使って rbenv をインストールしています。</p>

<p>以前に <a href="/blog/2014/04/15/ruby-1-9-3-install-for-mac-10-8.html">Mac OS X 10.8 に Ruby 1.9.3 をインストールする方法</a> で rvm を使ってインストールしていましたが、ごっそりアインインストールをしています。</p>

<h2 id="%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">インストール</h2>

<p>まず rbenv と ruby-build をインストール</p>

<pre><code class="bash">$ brew install rbenv ruby-build
</code></pre>

<p>パスを通す＆設定反映</p>

<pre><code class="bash">$ echo 'eval "$(rbenv init -)"' &amp;gt;&amp;gt; ~/.bash_profile
$ source ~/.bash_profile
$ rbenv rehash
</code></pre>

<p>インストール可能なバージョンを調べるには</p>

<pre><code class="bash">$ rbenv install -l
</code></pre>

<p>で確認できますが、 JRuby とかいろいろ出てくるので</p>

<pre><code class="bash">$ rbenv install -l | grep -E "\s+[0-9]"
</code></pre>

<p>のようにしたほうが多少探しやすくなるかも。</p>

<p>とりあえず Ruby 1.9 と 2.2 をインストール</p>

<pre><code class="bash">$ rbenv install $(rbenv install -l |grep -E "^\s+1.9" | tail -n 1)
Cloning https://github.com/ruby/ruby.git...
Installing ruby-1.9.3-p551...
Installed ruby-1.9.3-p551 to ~/.rbenv/versions/1.9.3-p551

$ rbenv install $(rbenv install -l |grep -E "^\s+2.2" | tail -n 1)
Cloning https://github.com/ruby/ruby.git...
Installing ruby-2.2.1-dev...
Installed ruby-2.2.1 to ~/.rbenv/versions/2.2.1
</code></pre>

<p>システム全体で使用する Ruby を最新バージョンに切り替えるs</p>

<pre><code class="bash">$ rbenv global $(rbenv versions | sed -e "s/\*/ /g" | sort -n | tail -n 1 | cut -d " " -f 3)
</code></pre>

<h2 id="%E3%82%A2%E3%83%B3%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">アンインストール</h2>

<p>アンインストールも簡単、インストールしたフォルダ自体を削除するか聞かれるので、まぁ基本は <code>y</code> 一択だと思われる</p>

<pre><code class="bash">$ rbenv uninstall 1.9.3-p551
rbenv: remove ~/.rbenv/versions/1.9.3-p551? y
</code></pre>

<p>ただし、選択している Ruby をアンインストールした場合、選択し直さないといけない</p>

<pre><code class="bash">$ rbenv versions
rbenv: version `1.9.3-p551' is not installed
  system
  2.2.1
</code></pre>

<h2 id="%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E7%AE%A1%E7%90%86">バージョン管理</h2>

<p>システムにインストールされている Ruby のバージョンを確認するには</p>

<pre><code class="bash">$ rbenv versions
  system
  1.9.3-p551
* 2.2.1 (set by ~/test/.ruby-version)
</code></pre>

<p>です。</p>

<p><code>*</code> マークが付いているバージョンが現在選択されている Ruby のバージョンで、バージョンの後ろについている <code>set by XXXX</code> は、<code>.ruby-version</code> ファイルによってローカルでは、このバージョンが指定されています、ということです。</p>

<p>この状態でバージョンを確認すると</p>

<pre><code class="bash">$ ruby -v
ruby 2.2.1p85 (2015-02-26 revision 49769) [x86_64-darwin13.4.0]
</code></pre>

<p>となります。</p>

<p>あるプロジェクトがシステムで使用しているバージョンと違うバージョンの Ruby を必要としているなら</p>

<pre><code class="bash">$ rbenv local 1.9.3-p551
</code></pre>

<p>このようにします。</p>

<p>すると</p>

<pre><code class="bash">$ ruby -v
ruby 1.9.3p551 (2014-11-13 revision 48407) [x86_64-darwin13.4.0]
</code></pre>

<p>となります。</p>

<h2 id="%E3%81%BE%E3%81%A8%E3%82%81">まとめ</h2>

<p>インストール可能な一覧を取得</p>

<pre><code class="bash">$ rbenv install -l | grep -E "\s+[0-9]"
</code></pre>

<p>Ruby をインストール</p>

<pre><code class="bash">$ rbenv install バージョン
</code></pre>

<p>Ruby をアンインストール</p>

<pre><code class="bash">$ rbenv uninstall バージョン
</code></pre>

<p>インストールされている Ruby のバージョンの一覧を表示</p>

<pre><code class="bash">$ rbenv list
</code></pre>

<p>システムで使用する Ruby のバージョンを変更</p>

<pre><code class="bash">$ rbenv global バージョン
</code></pre>

<p>ローカル(カレントディレクトリ以下)で使用する Ruby のバージョンを変更</p>

<pre><code class="bash">$ rbenv local バージョン
</code></pre>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://qiita.com/semind/items/f8f647e757842f08b9ec">Mac - homebrewでバージョンを指定してインストールする - Qiita</a></li>
<li><a href="http://qiita.com/dandy-z/items/578169e04acc475c39b5">Ruby 1.9と2.0, Rails3とRails4を切り替える - Qiita</a></li>
<li><a href="http://blog.livedoor.jp/noanoa07/archives/1897747.html">noanoa 日々の日記 : Ruby 2.0.0 を Homebrew + rbenv で OS X Mountain Lion にインストール</a></li>
<li><a href="http://nwpct1.hatenablog.com/entry/2014/03/20/173740">MacPortsからHomeBrewに乗換え&amp;Python開発環境構築 - c-bata web</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Mac OS X 10.8 に Ruby 1.9.3 をインストールする方法]]></title>
            <link href="http://www.sharkpp.net/blog/2014/04/15/ruby-1-9-3-install-for-mac-10-8.html"/>
            <updated>2014-04-15T16:18:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2014/04/15/ruby-1-9-3-install-for-mac-10-8.html</id>
            <content type="html"><![CDATA[<p><code>gem install chef</code> しようとしたら <code>mime-types requires Ruby version &gt;= 1.9.2.</code> って怒られたので Ruby 1.9.3 を Mac にインストールしたときのメモです。</p>

<p>もしかしたら、 make や patch が無いと怒られるかもなので、 MacPorts などでインストールしておいてください。</p>

<h2 id="rvm-%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">rvm のインストール</h2>

<p><code>RVM is the Ruby enVironment Manager</code> をインストールします。</p>

<pre><code>$ curl -L https://get.rvm.io | bash -s stable
</code></pre>

<p>一旦、ターミナルを閉じで開き直さないと PATH が設定されていないので怒られてしまうので注意です！</p>

<pre><code>$ rvm -v

rvm 1.25.22 (stable) by Wayne E. Seguin &lt;wayneeseguin@gmail.com&gt;, Michal Papis &lt;mpapis@gmail.com&gt; [https://rvm.io/]
</code></pre>

<h2 id="ruby-1.9.3-%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Ruby 1.9.3 インストール</h2>

<p>rvm コマンドで簡単にインストールできました。 実行すると必要なコマンドやライブラリを取得してインストールしてくれます。 もしかしたら、容量とかの関係で MacPorts で事前に入れておいた方が良いかもしれませんが、、、</p>

<pre><code>$ sudo rvm install 1.9.3
</code></pre>

<p>で、</p>

<pre><code>Searching for binary rubies, this might take some time.
No binary rubies available for: osx/10.8/x86_64/ruby-1.9.3-p545.
Continuing with compilation. Please read 'rvm help mount' to get more information on binary rubies.
Checking requirements for osx.
Installing requirements for osx.
Updating system.....
Installing required packages: autoconf, automake, libtool, pkgconfig, apple-gcc42, libyaml, libffi, libksba..
               :
Install of ruby-1.9.3-p545 - #complete 
WARNING: Please be aware that you just installed a ruby that is no longer maintained (2014-02-23), for a list of maintained rubies visit:

    http://bugs.ruby-lang.org/projects/ruby/wiki/ReleaseEngineering

Please consider upgrading to ruby-2.1.1 which will have all of the latest security patches.
Ruby was built without documentation, to build it run: rvm docs generate-ri
</code></pre>

<p>無事インストールできたみたいです。 が、 2.1.1 が最新なのでそっちを使えってメッセージが表示されました、、、見なかったことに、、、。</p>

<h2 id="%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8Bruby%E3%82%92%E9%81%B8%E6%8A%9E">使用するRubyを選択</h2>

<p>早速、バージョンを確認してみましょう。</p>

<pre><code>$ ruby -v
ruby 1.8.7 (2012-02-08 patchlevel 358) [universal-darwin12.0]
</code></pre>

<p>、、、あれ？古いままです。 そうでした、デフォルトで使われるバージョンを変更していませんでした。</p>

<pre><code>$ rvm --default use 1.9.3
</code></pre>

<p>これで、もう一度、</p>

<pre><code>$ ruby -v
ruby 1.9.3p545 (2014-02-24 revision 45159) [x86_64-darwin12.5.0]
</code></pre>

<p>はい、これで新しいバージョンが使えるようになりました。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://www.curvve.com/blog/guides/2013/install-ruby-1-9-3-mac-osx-10-8-macports-rvm/">How to Install Ruby 1.9.3 for Mac OSX 10.8+ with MacPorts and RVM</a></li>
<li><a href="http://stackoverflow.com/questions/3464285/ruby-on-mac-osx-via-mac-ports">Ruby on Mac OSX via Mac Ports - Stack Overflow</a></li>
</ul>
]]></content>
        </entry>
    </feed>