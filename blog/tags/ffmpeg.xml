<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/blog/tags/ffmpeg.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2019-06-30T14:58:46+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[名古屋Qt勉強会#28 に参加しました]]></title>
            <link href="http://www.sharkpp.net/blog/2019/05/18/qt-nagoya-28.html"/>
            <updated>2019-05-18T17:15:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/05/18/qt-nagoya-28.html</id>
            <content type="html"><![CDATA[<p>5月18日(土) に開催された <a href="https://qt-users.connpass.com/event/130498/">Qt 勉強会 @ Nagoya #28 - connpass</a> へ前回に引き続き参加しました。</p>

<p>そのまとめです。</p>

<p><img src="/images/20190518_frame_extract.png" alt="成果" /></p>

<h2 id="%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B">自己紹介</h2>

<p>毎回の通り、自己紹介と本日やることを宣言。</p>

<p>初めて参加の方が二人いた。
次回以降も参加してくれるといいな。</p>

<h2 id="%E8%87%AA%E5%88%86%E3%81%AE%E6%9C%AC%E6%97%A5%E3%81%AE%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8">自分の本日のやること</h2>

<ul>
<li>前回の続きの動画からフレームを切り出し動画のメタ情報とフレーム位置に応じた時刻を設定するツールを実装</li>
</ul>

<p>前回までの状況</p>

<ul>
<li>ファイルドロップでファイル名などを取れるようになった</li>
<li>画面の再構成中（これは勉強会後に自宅で実装、そして途中も途中で中断してた...）</li>
</ul>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E7%9F%A5%E8%A6%8B">本日の知見</h2>

<h3 id="component-wthi-path-xxxx-could-not-be-created">Component wthi path XXXX could not be created</h3>

<p><img src="/images/20190518_qtcreator_error1.png" alt="Component wthi path XXXX could not be created" /></p>

<p>QMLのデザイナのナビゲータエリアで ⚠️ マークと共に <code>Component with path /path/to/qml could not be created</code> (訳: <code>パス /path/to/qml のコンポーネントを作成できませんでした</code>) と出た。</p>

<p>このエラー出るパターンとして、実際にファイルがない場合と該当ファイルでなんらかのエラーが起きて読み込みに失敗した場合にも同様のメッセージが表示されるようだ。</p>

<h3 id="qml%E3%81%A7%E3%81%AErow%2Fcolumn">QMLでのRow/Column</h3>

<p>QMLの <a href="https://doc.qt.io/qt-5/qtquick-positioning-layouts.html">Item Positioners</a> や <a href="https://doc.qt.io/qt-5/qtquicklayouts-index.html">Qt Quick Layouts</a> を利用するとき、ちょっと直感的じゃない。</p>

<p>名前はともかくとして、デザイナのエレメントエリアに存在するアイコンが正直、致命的に頭悪いと思う。</p>

<table>
<thead>
<tr>
  <th>QMLタイプ</th>
  <th>デザイナ内のアイコン</th>
  <th>実際の動き</th>
</tr>
</thead>
<tbody>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qml-qtquick-column.html">Column QML Type</a></td>
  <td>縦棒３つ（＝横に並ぶ）</td>
  <td>縦に並ぶ</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qml-qtquick-row.html">Row QML Type</a></td>
  <td>横棒３つ（＝縦に並ぶ）</td>
  <td>横に並ぶ</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qml-qtquick-layouts-columnlayout.html">ColumnLayout QML Type</a></td>
  <td>縦棒３つ（＝横に並ぶ）</td>
  <td>縦に並ぶ</td>
</tr>
<tr>
  <td><a href="https://doc.qt.io/qt-5/qml-qtquick-layouts-rowlayout.html">RowLayout QML Type</a></td>
  <td>横棒３つ（＝縦に並ぶ）</td>
  <td>横に並ぶ</td>
</tr>
</tbody>
</table>

<h3 id="binding-loop-detected-for-property-xxxx">Binding loop detected for property XXXX</h3>

<p>ログに <code>QML {component}: Binding loop detected for property "{property}"</code> と出てるけどよくわからん。</p>

<p>っとおもったら以前もハマった問題にまたハマってただけだった。</p>

<p>つまり、</p>

<pre><code>Item {
    id: root
    property var fuga: null

    Hoge {
        id: hoge
        fuga: fuga // QML Hoge: Binding loop detected for property "fuga"
    }
}
</code></pre>

<p>というコードで発生してた。</p>

<p>スコープの関係で <code>root.fuga</code> ではなく <code>hoge.fuga</code> を参照してるのでエラーとして出てたようだ。</p>

<p>まあ、確かに言われてみればそうだよねとしか...</p>

<pre><code class="diff">  Item {
      id: root
-     property var fuga: null
+     property var fuga_: null

      Hoge {
          id: hoge
-         fuga: fuga // QML Hoge: Binding loop detected for property "fuga"
+         fuga: fuga_
      }
  }
</code></pre>

<p>結局こんな感じに修正</p>

<h3 id="qml%E3%81%8B%E3%82%89qt%E6%A8%99%E6%BA%96%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E4%BD%BF%E3%81%86">QMLからQt標準のアイコンを使う</h3>

<p>どうも現状はない（少なくとも去年の段階では無い）らしいので <code>QQuickImageProvider</code> を使って自分でアイコン用のプロバイダを作る必要があるとのこと。</p>

<p>参考 <a href="https://senooken.jp/blog/2018/02/04/">QMLからQt付属の標準アイコンを使う方法</a></p>

<h3 id="qml%E3%81%AE%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3">QMLのプロパティ</h3>

<table>
<thead>
<tr>
  <th>書き方</th>
  <th>概要</th>
</tr>
</thead>
<tbody>
<tr>
  <td><code>property var XXX</code></td>
  <td>プロパティ<code>XXX</code>を作成</td>
</tr>
<tr>
  <td><code>property bool XXX: false</code></td>
  <td>boolean型のプロパティ<code>XXX</code>を作成し<code>false</code>で初期化</td>
</tr>
<tr>
  <td><code>property real XXX: 5</code></td>
  <td>実数型のプロパティ<code>XXX</code>を作成し<code>5</code>で初期化</td>
</tr>
<tr>
  <td><code>property alias XXX: YYY</code></td>
  <td>id:<code>YYY</code>をプロパティ<code>XXX</code>として公開？</td>
</tr>
</tbody>
</table>

<p><code>alias</code> なんてキーワード初めて知った。
<a href="https://doc.qt.io/qt-5/qtqml-syntax-objectattributes.html">QML Object Attributes</a> がドキュメントらしい。</p>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E9%80%B2%E6%8D%97">本日の進捗</h2>

<p>とりあえず必死になって前回の状態を記憶から掘り起こし実装を再開。</p>

<p>どうやら画面の再構成が中途になってたのでその続き。</p>

<p>画面を整理しながらちょっとづつ実装...</p>

<pre><code>QML構造
  main.qml ... メイン
    AppWindow.ui.qml
      PageVideoDrop.qml ... 動画読み込みページ
        ComponentDropArea.ui.qml
      PageVideoLoading.qml ... 動画読み込み中ページ
        ComponentLoading.ui.qml
      PageSelectFrame.qml ... 動画のフレーム選択ページ
        ComponentThumbnailList.ui.qml
        ComponentThumbnailSeekBar.ui.qml
      PageExtractFrame.qml ...
        ComponentExtract.ui.qml
</code></pre>

<p>とりあえずこんな感じで実装してみる。</p>

<p>アイコンはいつもの <a href="https://material.io/tools/icons/?style=baseline">Icons - Material Design</a> から。</p>

<p>なぜか画面が真っ白... からは少し進んだけど構造を変えた影響でファイルをドロップしても先に進まない...</p>

<p><img src="/images/20190518_frame_extract.png" alt="成果" /></p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="/blog/2019/04/27/qt-nagoya-27.html">名古屋Qt勉強会#27 に参加しました</a></li>
<li><a href="https://blog.qt.io/jp/2010/10/27/qml-states-2/">Qt Quick 入門 第5回: 状態遷移 - Qt Japanese Blog</a></li>
<li><a href="https://doc.qt.io/qt-5/qtquick-positioning-layouts.html">Item Positioners | Qt Quick 5</a></li>
<li><a href="https://doc.qt.io/qt-5/qtquicklayouts-index.html">Qt Quick Layouts | Qt Quick 5</a></li>
<li><a href="https://senooken.jp/blog/2018/02/04/">QMLからQt付属の標準アイコンを使う方法</a></li>
<li><a href="http://nukesaq88.hatenablog.com/entry/2013/04/12/005525">Qt デフォルトで使用可能な組み込みアイコン QStyle::StandardPixmaps - unstable diary</a></li>
<li><a href="https://material.io/tools/icons/?style=baseline">Icons - Material Design</a></li>
<li><a href="https://doc.qt.io/qt-5/qtdoc-demos-coffee-choosingcoffee-ui-qml.html">ChoosingCoffee.ui.qml Example File | Qt 5</a></li>
<li><a href="https://doc.qt.io/qt-5/qtqml-syntax-objectattributes.html">QML Object Attributes | Qt QML 5.12.3</a></li>
<li><a href="https://stackoverflow.com/questions/28250710/qt-5-4-qml-prevent-binding-loop">c++ - Qt 5.4/Qml: Prevent binding loop - Stack Overflow</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[名古屋Qt勉強会#27 に参加しました]]></title>
            <link href="http://www.sharkpp.net/blog/2019/04/27/qt-nagoya-27.html"/>
            <updated>2019-04-27T17:30:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2019/04/27/qt-nagoya-27.html</id>
            <content type="html"><![CDATA[<p>4月27日(土) に開催された <a href="https://qt-users.connpass.com/event/128431/">Qt 勉強会 @ Nagoya #27 - connpass</a> に久しぶりに参加しました。</p>

<p>そのまとめです。</p>

<p>つぶやきは <a href="https://togetter.com/li/1342294">Qt 勉強会 @ Tokyo # 70 + @ Nagoya # 27 まとめ #qtjp</a> にまとまってます。</p>

<p><img src="/images/20190427_frame_extract.png" alt="成果" /></p>

<h2 id="%E8%87%AA%E5%B7%B1%E7%B4%B9%E4%BB%8B">自己紹介</h2>

<p>毎回の通り、自己紹介と本日やることを宣言。</p>

<h2 id="%E8%87%AA%E5%88%86%E3%81%AE%E6%9C%AC%E6%97%A5%E3%81%AE%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8">自分の本日のやること</h2>

<ul>
<li>動画からフレームを切り出し動画のメタ情報とフレーム位置に応じた時刻を設定するツールを実装</li>
</ul>

<p>機能</p>

<ul>
<li>動画から複数のフレームを選んで画像として抜き出すことができる</li>
<li>抜き出した画像には動画のメタ情報を設定できる</li>
<li>メタ情報としてフレームの位置に応じた時間情報を設定する</li>
</ul>

<p>課題</p>

<ul>
<li>フレームをプレビューする際の大量の画像をどうするか？</li>
<li>フレームの抜き出しや、メタ情報の取得、設定などをどう実現するか？</li>
<li>基本的には <code>ffmpeg</code> や <code>exiftool</code> などを使えばいいが、コマンドを叩く方向性で行くと別のプラットフォームで困るので最終的にはライブラリを使いたい</li>
</ul>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E7%9F%A5%E8%A6%8B">本日の知見</h2>

<h3 id="droparea%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6"><a href="https://doc.qt.io/qt-5/qml-qtquick-droparea.html">DropArea</a>について</h3>

<p><code>DropArea.keys</code> と <code>DragEvent.hasXXX</code> との関係</p>

<table>
<thead>
<tr>
  <th><code>DragEvent</code></th>
  <th><code>DropArea.keys</code></th>
</tr>
</thead>
<tbody>
<tr>
  <td><code>.hasColor == true</code></td>
  <td></td>
</tr>
<tr>
  <td><code>.hasHtml == true</code></td>
  <td><code>text/html</code> たぶん</td>
</tr>
<tr>
  <td><code>.hasText == true</code></td>
  <td><code>text/plain</code></td>
</tr>
<tr>
  <td><code>.hasUrls == true</code></td>
  <td><code>text/uri-list</code></td>
</tr>
</tbody>
</table>

<p><code>DropArea.keys</code> は <code>DragEvent.keys</code> の値をフィルタするもの。
ファイルの内容をもとにMIMEタイプが設定され（そもそもされない）、それをフィルタするわけではない。</p>

<h3 id="qt-creator-%E3%81%A7%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E5%AF%BE%E8%B1%A1%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%B8%80%E3%81%A4%E3%81%AE%E3%81%BF%E8%B5%B7%E5%8B%95%E3%81%95%E3%81%9B%E3%82%8B%E6%96%B9%E6%B3%95">Qt Creator でデバッグ対象のアプリを一つのみ起動させる方法</h3>

<p>Qt Creatorの「設定」→「ビルドと実行」→「ビルド前にアプリケーションを停止する」で設定できる！</p>

<p><a href="/images/20190427_qtcreator_single_app_debug_config.png"><img src="/thumbs/34d43cc47a3729ad2c1d954456d24233-640x640.png" alt="ビルド前にアプリケーションを停止するの設定"></a></p>

<h3 id=".qml-%E3%81%A8-.ui.qml">.qml と .ui.qml</h3>

<p><code>.qml</code> はJavaScriptのコードを書いたりコンポーネントをレイアウトしたりなんでもできる。</p>

<p><code>.ui.qml</code> は <code>.qml</code> でできることの一部、コードを書いたり、が制限されているが、代わりにデザインツールを使い、GUIでレイアウトを変更できる。</p>

<p>デザインツールではJavaScriptでイベント処理をかけない代わりに、<a href="https://doc.qt.io/qt-5/qml-qtquick-state.html">状態遷移</a>ごとのレイアウトを設定できる。</p>

<p><a href="/images/20190427_qtcreator_design_states.png"><img src="/thumbs/902276ffa87b2353c16384c6a3baa2b4-640x640.png" alt="状態遷移"></a></p>

<h3 id="%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%9B%B8%E3%81%8D%E5%87%BA%E3%81%97%E3%81%AA%E3%81%97%E3%81%A7%E3%81%AE%E3%82%B5%E3%83%A0%E3%83%8D%E3%82%A4%E3%83%AB%E3%81%AE%E7%94%9F%E6%88%90">ファイル書き出しなしでのサムネイルの生成</h3>

<p>どうも ffmpeg で標準出力に画像を書き出せ、かつ QML でもオンメモリにダイレクトでファイルを書き出せるらしい？</p>

<h2 id="%E6%9C%AC%E6%97%A5%E3%81%AE%E9%80%B2%E6%8D%97">本日の進捗</h2>

<p>思うようにファイルのドロップがうまくいかずなかなか進まなかったが、結局のところわかれば簡単なことで、要するにドキュメントはちゃんと読もうねって話だった。</p>

<p>デザインツールで画面を作ってくと割とサクサク画面ができるのでもっと活用していきたい。</p>

<p>あと、 <code>.qml</code> と <code>.ui.qml</code> の使い分けとかもパターン化を自分の中で作っていければ、サクサク進められそうな感じがした。</p>

<p>あと、個人的には Visual Studio みたいにデバッグ対象のアプリケーションが１つのみ立ち上がってくれる設定を見つけたのが一番嬉しかったりする。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li>ファイルドロップ関連

<ul>
<li><a href="https://doc.qt.io/qt-5/qml-qtquick-droparea.html">DropArea QML Type</a></li>
<li><a href="https://doc.qt.io/qt-5/qml-qtquick-dragevent.html">DragEvent QML Type</a></li>
<li><a href="https://doc.qt.io/qt-5/qtquick-draganddrop-example.html">Qt Quick Examples - Drag and Drop</a></li>
</ul></li>
<li>その他

<ul>
<li><a href="https://doc.qt.io/qt-5/qml-qtquick-state.html">State QML Type</a></li>
</ul></li>
<li>設定関連

<ul>
<li><a href="https://forum.qt.io/post/309613">Running two applications in the same Qt Creator instance</a></li>
</ul></li>
<li>onメモリでの画像の作成など

<ul>
<li><a href="https://stackoverflow.com/questions/23667088/qtquick-dynamic-images-and-c">qml - QtQuick Dynamic Images and C++ - Stack Overflow</a></li>
<li><a href="https://doc.qt.io/qt-5/qquickimageprovider.html">QQuickImageProvider Class</a></li>
<li><a href="https://qiita.com/kokeiro001/items/0e321c30cccc45ae44a4#%E9%80%A3%E7%B6%9A%E3%81%97%E3%81%9F%E7%94%BB%E5%83%8F%E3%82%92%E3%83%91%E3%82%A4%E3%83%97%E3%81%A7%E5%8F%96%E3%82%8A%E5%87%BA%E3%81%99ver">ffmpegを用いて動画から画像を取り出す【C#】 - Qiita</a></li>
</ul></li>
</ul>
]]></content>
        </entry>
    </feed>