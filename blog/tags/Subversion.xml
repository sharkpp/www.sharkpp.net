<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[さめたすたすのお家]]></title>
    <link href="http://www.sharkpp.net/blog/tags/Subversion.xml" rel="self"/>
    <link href="http://www.sharkpp.net/"/>
    <updated>2017-10-03T16:19:43+00:00</updated>
    <id>http://www.sharkpp.net/</id>
            <author>
            <name><![CDATA[sharkpp]]></name>                    </author>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[git メモ：Subversion からのインポート]]></title>
            <link href="http://www.sharkpp.net/blog/2016/02/21/git-memo-import-from-svn.html"/>
            <updated>2016-02-21T16:48:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2016/02/21/git-memo-import-from-svn.html</id>
            <content type="html"><![CDATA[<p>以前にも <a href="http://www.sharkpp.net/blog/2014/10/19/github-import-from-svn.html">github.com へ SVNのレポジトリを取り込んで公開する方法</a> で Subversion から git へのインポート方法を調べたけど、再度調べ直してタグとかをちゃんと反映させる方法を試したメモ。</p>

<p>インポート、としていますが実質やってることは移行と言っても過言ではありません。</p>

<h2 id="%E5%89%8D%E6%8F%90">前提</h2>

<h3 id="subversion">Subversion</h3>

<p>複数のトップを持っている Subversion レポジトリがインポート元です。</p>

<p>あと、手元にワーキングディレクトリはありません。</p>

<p>レポジトリ：<code>http://example.com/svn/echo/...</code></p>

<pre><code>/
  client
    trunk
    branch
    tag
  server
    trunk
    branch
    tag
</code></pre>

<h3 id="git">git</h3>

<p>それを、次のようなレイアウトとしてインポートします。</p>

<table>
<thead>
<tr>
  <th>repos</th>
</tr>
</thead>
<tbody>
<tr>
  <td>echo-client</td>
</tr>
<tr>
  <td>echo-server</td>
</tr>
</tbody>
</table>

<h2 id="%E6%89%8B%E9%A0%86">手順</h2>

<h3 id="subversion-%E3%81%8B%E3%82%89%E3%82%B3%E3%83%9F%E3%83%83%E3%82%BF%E3%83%BC%E3%81%AE%E5%90%8D%E5%89%8D%E3%82%92%E5%88%97%E6%8C%99%E3%81%99%E3%82%8B">Subversion からコミッターの名前を列挙する</h3>

<p>まず、適当なところにチェックアウトします。</p>

<pre><code class="bash">$ svn co http://example.com/svn/echo/ echo_svn
A    echo/client
         :
A    echo/server/trunk/readme.txt
Checked out revision 123.
</code></pre>

<p>そして、ユーザーの一覧を取得。</p>

<pre><code class="bash">$ cd echo_svn/
$ svn log ^/ --xml | grep -P "^&lt;author" | sort -u | ¥
  perl -pe 's/&lt;author&gt;(.*?)&lt;\/author&gt;/$1 = /' &gt; ../users.txt
$ cd ..
$ cat users.txt
admin =
</code></pre>

<p>Subversion ユーザー名と git のコミッタ名とを対応付けて定義ファイルを作成します。</p>

<pre><code class="bash">$ cat users.txt
admin = admin &lt;hoge.fuga@example.com&gt;
</code></pre>

<h3 id="subversion-%E3%82%92-clone-%E3%81%99%E3%82%8B">Subversion を clone する</h3>

<p>複数のリポジトリへと変換するので for でぐるぐるします。</p>

<pre><code class="bash">$ for I in client server ; do ¥
    git svn clone http://example.com/svn/echo/$I -T trunk -b branch -t tag ¥
        --authors-file=users.txt --no-metadata -s echo_$I ; ¥
  done
</code></pre>

<h3 id="%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%81%AE%E3%82%BF%E3%82%B0%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E3%82%BF%E3%82%B0%E3%81%AB%E3%80%81%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AB%E5%A4%89%E3%81%88%E3%82%8B">リモートのタグブランチをタグに、ブランチをローカルのブランチに変える</h3>

<p>同じくぐるぐるしながら、ブランチやタグを整理します。</p>

<pre><code class="bash">$ for I in client server ; do ¥
    pushd echo_$I ; ¥
    git for-each-ref refs/remotes/origin/tags | cut -d / -f 5- | grep -v @ | ¥
      while read tagname; do ¥
        git tag "$tagname" "origin/tags/$tagname"; ¥
        git branch -r -d "origin/tags/$tagname"; ¥
      done ; ¥
    git for-each-ref refs/remotes | cut -d / -f 3- | grep -v @ | ¥
      while read branchname; do ¥
        git branch "$branchname" "refs/remotes/$branchname"; ¥
        git branch -r -d "$branchname"; ¥
      done ; ¥
    popd ; ¥
  done
</code></pre>

<h3 id="%E7%B5%90%E6%9E%9C">結果</h3>

<p>それぞれのレポジトリ内は</p>

<pre><code class="bash">$ cd client
$ git tag
0.1.0
0.2.0
0.3.5
$ git branch -a
* master
  origin/trunk
</code></pre>

<p>このような感じになります。</p>

<p>あとは、 GitHub やそのほかリモートの git に push すれば OK です。</p>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://git-scm.com/book/ja/v1/Git%E3%81%A8%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E9%80%A3%E6%90%BA-Git-%E3%81%B8%E3%81%AE%E7%A7%BB%E8%A1%8C">Git - Git への移行</a></li>
<li><a href="http://sinsoku.hatenablog.com/entry/2014/02/26/231918">面倒くさいsvnリポジトリをgit-svnで扱う時に役立ちそうなオプション一覧 - アジャイルSEの憂鬱</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[github.com へ SVNのレポジトリを取り込んで公開する方法]]></title>
            <link href="http://www.sharkpp.net/blog/2014/10/19/github-import-from-svn.html"/>
            <updated>2014-10-19T13:48:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2014/10/19/github-import-from-svn.html</id>
            <content type="html"><![CDATA[<p>svn のレポジトリを既存の github レポジトリに取り込む手順をメモ。 多分、既存の git に取り込むのにも使えるはず。</p>

<p>ちなみに取り込むとログに <code>git-svn-id: 〜</code> の用な感じで SVN のリポジトリパスが残るのでパスを秘密にしたい場合は諦めてファイルコピーで取り込んだ方がいいと思います。</p>

<ul>
<li>2016-02-14 git-svn-id を付与せずに clone する方法を追記</li>
</ul>

<h2 id="%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6">前提条件</h2>

<ul>
<li><code>git clone</code> したディレクトリは <code>~/hoge/</code></li>
<li><code>git checkout</code> したブランチは <code>import_from_svn_example_net</code></li>
<li>取り込みたい SVN レポジトリは <code>http://svn.example.net/path/to/svn/repos/</code></li>
<li>作業用の git レポジトリは <code>tmp</code></li>
</ul>

<h2 id="%E6%BA%96%E5%82%99">準備</h2>

<ol>
<li>github.com からレポジトリを <code>git clone</code> する</li>
<li>ブランチを作り <code>git checkout</code> する <strong>重要</strong></li>
</ol>

<p>ブランチは、</p>

<pre><code>$ git checkout -b import_from_svn_example_net
</code></pre>

<p>みたいな感じで作る</p>

<h2 id="%E6%89%8B%E9%A0%86">手順</h2>

<pre><code>$ cd ~
$ git svn clone http://svn.example.net/path/to/svn/repos/ tmp
$ cd ~/hoge/
$ git pull ~/tmp
$ cd ~
$ rm -rf tmp
</code></pre>

<p>でターミナルでの作業は終了。 あとは githubクライアントで sync するなどして github に push すれば終了です。</p>

<h2 id="git-svn-id-%E3%82%92%E5%89%8A%E9%99%A4%E3%81%97%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88">git-svn-id を削除したい場合</h2>

<p>git-svn-id を削除したい場合は</p>

<pre><code class="bash">$ git svn clone http://svn.example.net/path/to/svn/repos/ --no-metadata tmp
</code></pre>

<p>とすると良いようです。</p>

<blockquote class="twitter-tweet" data-lang="ja"><p lang="ja" dir="ltr"><a href="https://twitter.com/sharkpp">@sharkpp</a> ところでsvnのリポジトリをもう使わわずgit-svn-idがいらないのでしたら、git svn clone --no-metadataが使えるはずです。 <a href="http://t.co/FRKHmnEj6z">http://t.co/FRKHmnEj6z</a> <a href="http://t.co/ZWGezekJls">http://t.co/ZWGezekJls</a></p>&mdash; zakki (@k_matsuzaki) <a href="https://twitter.com/k_matsuzaki/status/532728589444063232">2014, 11月 13</a></blockquote>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<h2 id="%E5%8F%82%E8%80%83">参考</h2>

<ul>
<li><a href="http://qiita.com/hidekuro/items/4727715fbda8f10b6b11">git-svnでSVN→Gitへの移行をやってみたログ - Qiita</a></li>
<li><a href="http://git-scm.com/book/ja/Git%E3%81%A8%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E9%80%A3%E6%90%BA-Git-%E3%81%A8-Subversion#はじめましょう">Git - Git と Subversion</a></li>
<li><a href="http://www.backlog.jp/git-guide/reference/remote.html#sec7">リモート操作 | 逆引きGit | サルでもわかるGit入門 〜バージョン管理を使いこなそう〜 | どこでもプロジェクト管理バックログ</a></li>
<li><a href="http://git-scm.com/book/ja/v1/Git%E3%81%A8%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AE%E9%80%A3%E6%90%BA-Git-%E3%81%B8%E3%81%AE%E7%A7%BB%E8%A1%8C">Git - Git への移行</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[QNAP TS-109II で Subversionを使う]]></title>
            <link href="http://www.sharkpp.net/blog/2011/12/05/using-subversion-with-qnap-ts109II.html"/>
            <updated>2011-12-05T00:23:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2011/12/05/using-subversion-with-qnap-ts109II.html</id>
            <content type="html"><![CDATA[<p>久しぶりに、NAS(QNAP TS-109II)の環境を作り直したのでメモ。</p>

<p>元々はsubversionを入れたいがためにdebianを入れていたけど、どうもそんな小難しいことをしなくてもSubversionを動かせるって情報を見つけたので今の環境を破棄してまで試してみる。</p>

<p>結論から言うとバックアップやら何やらで時間はかかったけど問題なく動きそう。</p>

<ul>
<li><a href="http://forum.qnap.com/viewtopic.php?f=32&amp;t=1779">Subversion over HTTP</a></li>
<li><a href="http://wiki.qnap.com/wiki/Subversion">Subversion - QNAPedia</a></li>
<li><a href="http://d.hatena.ne.jp/sugarball/20111029/1319896597">QNAP TS-439 Pro II+ Turbo NASにSubversionを構築 - sugarballの日記</a></li>
</ul>

<p>あたりを参考に、NAS(QNAP TS-109II)に、Apache+Subversionの環境を作ってみた</p>

<h3 id="optware-ipkg%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Optware IPKGをインストール</h3>

<p>ApacheやSubversionをインストールするのに必要なIPKGを追加。</p>

<p><a href="http://wiki.qnap.com/wiki/Install_Optware_IPKG">Install Optware IPKG - QNAPedia</a>を参考にインストール。</p>

<ol>
<li>QNAPの管理画面を開く</li>
<li>「ホーム」→「アプリケーション」→「QPKGプラグイン」を開く</li>
<li>「QPKGの取得」を押下し、「Optware IPKG (Itsy Package Management System)」をダウンロード＆解凍</li>
<li>解凍した、"Optware_?.qpkg" を、「インストール」タブからインストール</li>
<li>「QPKGインストール済み」タブから、「Optware IPKG」を選び、「有効にする」を押下し有効にする</li>
</ol>

<p>有効にした直後のみipkgコマンドへパスが通るが、リブート以降パスが通らなくなるので</p>

<pre>export PATH=$PATH:/opt/bin:/opt/sbin
</pre>

<p>としておく</p>

<h3 id="apache2%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Apache2をインストール</h3>

<p>ipkg install apache</p>

<p>すると↓のように mod&#95;ext&#95;filter.so が読み込めないとエラーが出る。</p>

<pre>httpd: Syntax error on line 74 of /opt/etc/apache2/httpd.conf: Cannot load /opt/libexec/mod_ext_filter.so into server: /opt/libexec/mod_ext_filter.so: undefined symbol: apr_procattr_limit_set<br />httpd: Syntax error on line 74 of /opt/etc/apache2/httpd.conf: Cannot load /opt/libexec/mod_ext_filter.so into server: /opt/libexec/mod_ext_filter.so: undefined symbol: apr_procattr_limit_set
</pre>

<p><a href="http://forum.synology.com/enu/viewtopic.php?f=34&amp;t=40959">mod&#95;ext&#95;filter.so: undefined symbol: apr&#95;procattr&#95;limit_set</a> を参考に設定を変更。</p>

<p>参考ページでも結局モジュールを読まないように変えるしかないようだ。</p>

<pre>vi /opt/etc/apache2/httpd.conf
</pre>

<p>で設定ファイルから libexec/mod&#95;ext&#95;filter.so を探しコメントアウト。</p>

<pre>httpd: bad user name nobody
</pre>

<p>と言われるのでユーザーを追加。</p>

<ol>
<li>QNAPの管理画面を開く</li>
<li>「ホーム」→「アクセス権管理」→「ユーザー」を開く</li>
<li>「ユーザーの追加」を押下</li>
</ol>

<ul>
<li>ユーザ名:nobody</li>
<li>容量制限の設定：無効にする</li>
<li>グループ：administrators, everyone</li>
<li>読み込みのみ：&#45;--</li>
<li>読み取り／書き込み：Public, Qdownload, Qmultimedia ...</li>
<li>アクセス拒否：&#45;--</li>
</ul>

<p>で追加</p>

<pre>httpd: Could not reliably determine the server's fully qualified domain name, using ? for ServerName
</pre>

<p>と言われるので設定を書き換え。</p>

<pre>ServerName nasserver:888
</pre>

<p>とかこんな感じ</p>

<p>もちろん例の場合、</p>

<pre>Listen 888
</pre>

<p>としておかないといけない</p>

<p>やることとしては、</p>

<ul>
<li>mod&#95;ext&#95;filter.so の設定を、httpd.conf からコメントアウト</li>
<li>ServerName(変更するならListenも)の設定を、httpd.conf に指定</li>
<li>QNAP管理画面から、nobodyユーザーを追加。</li>
</ul>

<pre>/opt/sbin/httpd -k start
</pre>

<p>で起動して http://nasserver:888/ などにブラウザでアクセスし、</p>

<p>It works!</p>

<p>と表示されたらOK</p>

<h3 id="subversion%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">Subversionをインストール</h3>

<pre>ipkg install svn
</pre>

<p>httpd.conf に↓を追加</p>

<pre>Include etc/apache2/conf.d/*.conf
</pre>

<p>レポジトリは、</p>

<pre>/share/HDA_DATA/svn
</pre>

<p>に設置</p>

<p>認証用のファイルは、</p>

<pre>/share/HDA_DATA/Qweb/repos/
</pre>

<p>に置く</p>

<p>HDA_DATAの部分は、製品によって違うようだ</p>

<p>.authz や .htpasswd</p>

<p>vi /opt/etc/apache2/conf.d/mod&#95;dav&#95;svn.conf に</p>

<pre>&lt;IfModule dav_svn_module&gt;<br /> &lt;Location "/repos/"&gt;<br />  DAV svn<br />  SVNParentPath /share/HDA_DATA/svn<br />  SVNListParentPath on<br />  AuthzSVNAccessFile /share/HDA_DATA/Qweb/repos/.authz<br />  &lt;IfModule dav_svn_module&gt;<br />   AuthType Basic<br />   AuthName "Authentication"<br />   AuthUserFile /share/HDA_DATA/Qweb/repos/.htpasswd<br />   Require valid-user<br />  &lt;/IfModule&gt;<br /> &lt;/Location&gt;<br /> &lt;Directory /share/HDA_DATA/Qweb/repos&gt;<br />  AllowOverride All<br />  Options All<br />  &lt;Limit GET POST OPTIONS&gt;<br />   Order allow,deny<br />   Allow from all<br />  &lt;/Limit&gt;<br />  &lt;LimitExcept GET POST OPTIONS PROPFIND MKACTIVITY CHECKOUT MKACTIVITY DELETE PROPPATCH MKCOL MERGE REPORT PUT COPY&gt;<br />   Order deny,allow<br />   Deny from all<br />  &lt;/LimitExcept&gt;<br /> &lt;/Directory&gt;<br />&lt;/IfModule&gt;
</pre>

<p>を追加。</p>

<pre>mkdir /share/HDA_DATA/svn<br />cd /share/HDA_DATA/svn<br />svnadmin create test
</pre>

<p>などしてレポジトリを作る</p>

<h3 id="apache%E3%81%AE%E8%87%AA%E5%8B%95%E8%B5%B7%E5%8B%95">Apacheの自動起動</h3>

<p><a href="http://wiki.qnap.com/wiki/Autorun.sh">Running Your Own Application at Startup - QNAPedia</a>を参考に</p>

<p>autorun.sh を編集</p>

<p>いちいちマウントするのが面倒なので、<a href="http://wiki.qnap.com/wiki/Autorun.sh#Method_3">Method 3</a> 方式で</p>

<p>/share/HDA_DATA/.qpkg/autorun/autorun.sh に</p>

<pre>(sleep 10; /opt/sbin/httpd -k start ) &
</pre>

<p>と追加</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[githubを使い始めました]]></title>
            <link href="http://www.sharkpp.net/blog/2011/09/18/started-using-the-github.html"/>
            <updated>2011-09-18T12:16:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2011/09/18/started-using-the-github.html</id>
            <content type="html"><![CDATA[<p>githubを今更ながら始めました。</p>

<p>食わず嫌いってほどでは無いですが、Windowsをメインにしている関係で、Subversion + TortoiseSVN のコンボが最強すぎてなかなか使い始める機会が無かったです。</p>

<p>で、ある人に進めた手前、自分が使っていないのはどうなのかと思って、どうやって使ったもんかと思い考えた末、</p>

<p><strong>Subversion → フックスクリプト → git → github</strong></p>

<p>と、Subversion と git のリポジトリを同期させSubversion から一方的にpushする方法を思いつきました。</p>

<p>まあ、まったくもってgitである必要は無いので世の中の使い方としては下の下に入る方法ではないかと思いますが...</p>

<p>とりあえず、</p>

<ul>
<li><a href="http://blog.makotokw.com/memo/github/">github</a></li>
<li><a href="http://blog.livedoor.jp/dankogai/archives/51194979.html">tips - svnメイン、でもgithubでも公開したい場合の最小手順</a></li>
</ul>

<p>辺りを見ながらセットアップしました。</p>

<p>試行錯誤の結果は↓のレポジトリに公開しました。</p>

<p><a href="https://github.com/sharkpp/win-batch-utils">https://github.com/sharkpp/win-batch-utils</a></p>

<p>リポジトリの公開は、</p>

<ol>
<li>githubでレポジトリを作る(たとえば、<em>example-test</em>)</li>
<li>ローカルのgitレポジトリのフォルダへ移動</li>
<li><a href="https://github.com/sharkpp/win-batch-utils/blob/master/git/svn2github.cmd">svn2github.cmd</a> <em>http://svn.example.net/test</em> <em>example-test</em> を実行</li>
</ol>

<p>てな感じで簡単に出来るようにしました。</p>

<p>フックスクリプトは↓のような設定で使っています。</p>

<p>が、なんかどうもうまく動いていない気も... 単に遅いだけかな？</p>

<p>直接実行する分には問題ないのだけれど...</p>

<p><img src="/images/2011_0918_svn-hook-sync-git.png" alt="" /></p>

<ol>
<li>TortoiseSVNの設定画面を開き、「フックスクリプト」の設定を選択</li>
<li>「追加」を選択</li>
<li>「Post-Commit フック」を選択</li>
<li>ローカルの作業フォルダのパスを指定</li>
<li>「<a href="https://github.com/sharkpp/win-batch-utils/blob/master/error_report.cmd">error_report.cmd</a> <a href="https://github.com/sharkpp/win-batch-utils/blob/master/git/sync4git.cmd">sync4git.cmd</a> ローカルのgitレポジトリのパス」をそれぞれフルパスで入力</li>
</ol>

<p>全部が全部公開しているわけではないけど、こんな感じでオープンな感じでやるのもいいかなーと最近思い始めてます。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[バックアップファイルからSVNのダンプファイルへの変換スクリプト その２]]></title>
            <link href="http://www.sharkpp.net/blog/2009/12/27/backup-to-svn-dump-convert-script-2.html"/>
            <updated>2009-12-27T13:49:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2009/12/27/backup-to-svn-dump-convert-script-2.html</id>
            <content type="html"><![CDATA[<p><a href="/blog/2009/12/13/backup-to-svn-dump-convert-script.html">フォルダまるごとのバックアップからSubversionのリポジトリを作るツールを作ってみた。</a>の続き。</p>

<p>trunkフォルダの自動生成とチープコピー機能をつけた。</p>

<p>さらに、マージしてみたらSvnDumpToolではダンプ中に同じパスの追加などをフィルタしてくれなくてload時にエラーになってしまうのでそういう操作のフィルタスクリプトも作った。</p>

<p><a href="/files/backup2svn-dump_20091227.zip">backup2svn-dump_20091227.zip</a></p>

<p>これもダウンロード先は取り敢えずで、どこに置こうか考え中。</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[バックアップファイルからSVNのダンプファイルへの変換スクリプト]]></title>
            <link href="http://www.sharkpp.net/blog/2009/12/13/backup-to-svn-dump-convert-script.html"/>
            <updated>2009-12-13T23:58:00+00:00</updated>
            <id>http://www.sharkpp.net/blog/2009/12/13/backup-to-svn-dump-convert-script.html</id>
            <content type="html"><![CDATA[<p>フォルダまるごとのバックアップからSubversionのリポジトリを作るツールを作ってみた。</p>

<p>過去に作ったプロジェクトをSubversionのリポジトリへ追加したかったが、それらしいツールが見つからなかった。</p>

<p>条件として、日付を保ったままで追加したかったのだけど、そういう特殊な用途のものは無いようで結局自作。</p>

<p>php(5.2以降)+mb_stringが必要です。</p>

<p><a href="/files/backup2svn-dump_20091213.zip">backup2svn-dump_20091213.zip</a></p>

<p>ダウンロード先は取り敢えずで、どこに置こうか考え中。</p>

<p>とりあえず、</p>

<ul>
<li>ほげ\

<ul>
<li>v000\</li>
<li>v001\</li>
<li>v003\</li>
</ul></li>
</ul>

<p>とフォルダがあったら、順番にv000→v001→v003とフォルダ単位でフォルダ内(サブフォルダを含む)の一番最新のファイルの日付でコミットします。</p>

<p>@ファイル内のテキストをコミット時のコメントとして使用します。</p>

<p>あと、branch/tag機能を付けたいなー</p>
]]></content>
        </entry>
    </feed>